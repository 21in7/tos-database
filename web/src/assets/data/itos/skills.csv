$ID,$ID_NAME,CoolDown,Description,Effect,Effect_CaptionRatio,Effect_CaptionRatio2,Effect_CaptionRatio3,Effect_CaptionTime,Effect_SkillFactor,Effect_SkillSR,Effect_SpendItemCount,Effect_SpendPoison,Effect_SpendSP,Element,Icon,IsEnchanter,IsPardoner,IsRunecaster,IsShinobi,Link_Attributes,Link_Gem,Link_Job,Name,OverHeat,Prop_BasicCoolDown,Prop_BasicPoison,Prop_BasicSP,Prop_LevelPerGrade,Prop_LvUpSpendPoison,Prop_LvUpSpendSp,Prop_MaxLevel,Prop_SklAtkAdd,Prop_SklAtkAddByLevel,Prop_SklFactor,Prop_SklFactorByLevel,Prop_SklSR,Prop_SpendItemBaseCount,Prop_UnlockClassLevel,Prop_UnlockGrade,RequiredStance,RequiredStanceCompanion,RequiredSubWeapon,SP,TypeAttack
2111,GM_RegenerateBuff,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Increase HP, SP restoration",Restore HP +100{nl}Restore SP +100{nl}Duration -5 sec,,,,,,,,,,3,icon_cler_daino,False,False,False,False,,,9001,Increase HP & SP Recovery,0,0,0,13,0,0,3.2,1,0.0,0.0,1.0,1.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
2112,GM_StatBuff,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Increased All Stats,Increased All Stats by 10%,,,,,,,,,,3,icon_cler_daino,False,False,False,False,,,9001,Increased Stats,0,0,0,13,0,0,3.2,1,0.0,0.0,1.0,1.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
2113,GM_CooldownBuff,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Decreases Skill Cooldown Time,Decreases Skill Cooldown Time by 10%,,,,,,,,,,3,icon_cler_daino,False,False,False,False,,,9001,Decrease Cooldown Time,0,0,0,13,0,0,3.2,1,0.0,0.0,1.0,1.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
2114,GM_ATKBuff,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Increase Physical Attack, Magic Attack",Physical Attack +10%{nl}Magic Attack +10%,,,,,,,,,,3,icon_cler_daino,False,False,False,False,,,9001,Increased Attack,0,0,0,13,0,0,3.2,1,0.0,0.0,1.0,1.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
2115,GM_DEFBuff,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Increase Physical Defense, Magic Defense",Physical Defense +10%{nl}Magic Defense +10%,,,,,,,,,,3,icon_cler_daino,False,False,False,False,,,9001,Increase defense,0,0,0,13,0,0,3.2,1,0.0,0.0,1.0,1.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
10001,Swordman_Thrust,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Push the point of your weapon into enemies, performing a strong piercing attack.",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Swordman2\"")"", """", ""if (abil != null  &&  \""Swordman2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_thrust,False,False,False,False,[101004],643506,1001,Thrust,5,10000,0,47,0,0,0.0,5,0.0,0.0,277.0,9.2,10.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
10002,Swordman_Bash,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Inflict damage on an enemy with a powerful attack.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Swordman1\"")"", """", ""if (abil != null  &&  \""Swordman1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var abil = GetAbility(pc, 'Penetration');"", """", ""if (abil != null  &&  skill.ClassName == \""Swordman_Bash\""  &&  1 == abil.ActiveState) {"", ""    return pc.SR + skill.SklSR + abil.Level;"", ""}"", """", ""return pc.SR + skill.SklSR""]",,,,6,icon_warri_bash,False,False,False,False,"[101001, 101015]",643507,1001,Bash,5,10000,0,49,0,0,0.0,5,0.0,0.0,197.0,6.6,10.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10003,Swordman_GungHo,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Become determined and temporarily increase your physical attack damage. Does not apply simultaneously with the Bear buff.,Physical Attack Damage +#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# sec,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Swordman13\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Swordman13\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 2;"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value;""]",,,"[""return 300;""]",,,,,,6,icon_warri_gungho,False,False,False,False,[101007],643508,1001,Gung Ho,0,60000,0,168,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10005,Swordman_PainBarrier,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Temporarily grants immunity to being affected by knockback, knockdown and stagger. Also increases the chance to resist status abnormalities.",Duration: #{CaptionTime}# seconds,,,,"[""var value = 5 + skill.Level * 5"", ""return value""]",,,,,,6,icon_warri_painbarrier,False,False,False,False,,643510,1001,Pain Barrier,0,60000,0,168,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10009,Swordman_Bear,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Become determined and temporarily decrease the physical attack damage you receive. Does not apply simultaneously with the Gung Ho buff.,Physical Attack Damage Taken: -#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Swordman30\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Swordman30\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 2;"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value;""]",,,"[""return 300;""]",,,,,,6,icon_warri_bear,False,False,False,False,[101022],643865,1001,Bear,0,60000,0,168,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10101,Peltasta_UmboBlow,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Use the bump of your shield to attack enemies. Deals additional damage to enemies staggered by a block. If the attack is accurate, threat values apply 10 times higher.",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}{#339999}{ol}[Threat]{/}{/} Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Peltasta12\"")"", """", ""if (abil != null  &&  \""Peltasta12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_umboblow,False,False,False,False,"[102004, 102012, 102034]",643523,1003,Umbo Blow,2,10000,0,83,0,0,0.0,10,0.0,0.0,241.0,12.1,10.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
10102,Peltasta_RimBlow,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Use the edge of your shield to attack enemies. Inflicts additional damage on both petrified and frozen enemies. If the attack is accurate, threat values apply 10 times higher.",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}{#339999}{ol}[Threat]{/}{/} Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Peltasta11\"")"", """", ""if (abil != null  &&  \""Peltasta11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_rimblow,False,False,False,False,"[102001, 102031, 102034]",643524,1003,Rim Blow,3,15000,0,65,0,0,0.0,15,0.0,0.0,226.0,7.5,0.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
10103,Peltasta_SwashBuckling,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical]{/}{/}{nl}Hit your shield to threaten nearby enemies into pursuing you. The movement speed of threatened enemies increases, and they become immune to threat for 30 seconds.",Targets: #{CaptionRatio}#{nl}{#339999}{ol}[Threat]{/}{/} Duration: #{CaptionTime}# seconds,"[""return 9 + skill.Level;""]",,,"[""var buffTime = 10;"", """", ""if (pc != null) {"", ""    var abilPeltasta32 = GetAbility(pc, \""Peltasta32\"");"", """", ""    if (abilPeltasta32 != null  &&  TryGetProp(abilPeltasta32, \""ActiveState\"") == 1) {"", ""        buffTime = buffTime + TryGetProp(abilPeltasta32, \""Level\"");"", ""    }"", """", ""}"", """", ""return buffTime;""]",,,,,,6,icon_warri_swashbuckling,False,False,False,False,[102027],643525,1003,Swash Buckling,0,20000,0,123,0,0,0.0,15,0.0,0.0,100.0,0.0,4.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
10104,Peltasta_Guardian,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Reduces the physical and magic damage you receive from enemies, and increases your AoE defense ratio.",Physical and Magic Damage Taken: -#{CaptionRatio}#%{nl}AoE Defense Ratio: +#{CaptionRatio2}#{nl}Duration: 15 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Peltasta13\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Peltasta13\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 8 * skill.Level"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value;""]","[""var value = skill.Level * 2"", ""return Math.floor(value);""]",,,,,,,,6,icon_warri_guradian,False,False,False,False,[102007],643526,1003,Guardian,0,50000,0,156,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10105,Peltasta_ShieldLob,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Attack an enemy by throwing your shield. If the attack is accurate, threat values apply 10 times higher.",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Peltasta14\"")"", """", ""if (abil != null  &&  \""Peltasta14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var Peltasta4_abil = GetAbility(pc, 'Peltasta4')"", """", ""if (Peltasta4_abil != null  &&  1 == Peltasta4_abil.ActiveState) {"", ""    return pc.SR + skill.SklSR + Peltasta4_abil.Level;"", ""}"", """", ""return pc.SR + skill.SklSR""]",,,,6,icon_warri_shieldlob,False,False,False,False,"[102008, 102034]",643527,1003,Shield Lob,0,10000,0,95,0,0,0.0,15,0.0,0.0,522.0,17.299999,3.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
10106,Peltasta_HighGuard,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Switch into an active defense stance using your shield to increase your block. Requires a shield to be equipped. If the shield is unequipped, the effects are canceled.",Block: +#{CaptionRatio}#%{nl}Duration: 30 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Peltasta36\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Peltasta36\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 2"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill));"", ""return Math.floor(value)""]",,,,,,,,,6,icon_warri_highguard,False,False,False,False,[102032],643528,1003,High Guard,0,50000,0,156,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10110,Peltasta_HardShield,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Increases your defense in proportion to the defense values of your currently equipped shield.,Defense Increase: [Shield Defense] x #{CaptionRatio}#%{nl}Duration: 300 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Peltasta37\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Peltasta37\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 20 * skill.Level"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill));"", ""return Math.floor(value)""]",,,,,,,,,6,icon_warri_hardshield,False,False,False,False,[102033],643866,1003,Hard Shield,0,60000,0,168,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10201,Highlander_WagonWheel,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Perform an upward swing with your weapon, launching an enemy up.",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Highlander13\"")"", """", ""if (abil != null  &&  \""Highlander13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var byAbil = 0;"", ""var abil = GetAbility(pc, 'Highlander6');"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    byAbil = abil.Level * 1;"", ""}"", """", ""return pc.SR + skill.SklSR + byAbil""]",,,,6,icon_warri_wagonwheel,False,False,False,False,[103007],643514,1002,Wagon Wheel,0,10000,0,100,0,0,0.0,15,0.0,0.0,490.0,16.200001,15.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10202,Highlander_CartarStroke,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Gather up power and use your weapon to attack targets by smashing it to the ground. Damage to knocked down enemies increases by 2 times.,Skill Factor: #{SkillFactor}#% x 4{nl}Casting Time: #{CaptionRatio2}# seconds{nl}AoE Attack Ratio: #{SkillSR}#,,"[""var value = 0.5"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Highlander11\"")"", """", ""if (abil != null  &&  \""Highlander11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_cartarstroke,False,False,False,False,"[103001, 103022]",643515,1002,Cartar Stroke,0,10000,0,105,0,0,0.0,15,0.0,0.0,180.0,6.0,15.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10203,Highlander_Crown,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Smack your weapon down on an enemy's head. Temporarily shocks the enemy.,Skill Factor: #{SkillFactor}#%{nl}{#339999}{ol}[Shock]{/}{/} Duration: #{CaptionTime}# seconds{nl}AoE Attack Ratio: #{SkillSR}#,,,,"[""return 5 + (0.5 * skill.Level);""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Highlander12\"")"", """", ""if (abil != null  &&  \""Highlander12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""return pc.SR""]",,,,6,icon_warri_crown,False,False,False,False,[103004],643516,1002,Crown,0,15000,0,100,0,0,0.0,15,0.0,0.0,434.0,14.4,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
10204,Highlander_CrossGuard,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Use your two-handed sword to adopt a defensive stance with a chance of blocking attacks. Blocked enemies become vulnerable to Pierce-type attacks.,Block: +#{CaptionRatio2}#%,,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Highlander15\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Highlander15\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 5 * skill.Level"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value)""]",,,,,,,,6,icon_warri_crossguard,False,False,False,False,[103010],643517,1002,Cross Guard,0,0,0,0,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""TwoHandSword"", ""Icon"": ""weapon_tsword""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
10205,Highlander_Moulinet,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Inflict damage on enemies by swinging your sword around and creating continuous attacks. Deals increased damage to shocked enemies.,Skill Factor: #{SkillFactor}#% x 5{nl}AoE Attack Ratio: #{SkillSR}#{nl}Deals +100% damage on shocked enemies,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Highlander14\"")"", """", ""if (abil != null  &&  \""Highlander14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_circularcut,False,False,False,False,[103011],643518,1002,Moulinet,3,30000,0,80,0,0,0.0,5,0.0,0.0,112.0,11.2,0.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10207,Highlander_SkyLiner,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Slash the enemy sideways.{nl}Inflicts additional hits and damage on enemies affected by [Bleeding].,Skill Factor: #{SkillFactor}#% x 2{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Highlander29\"")"", """", ""if (abil != null  &&  \""Highlander29\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_skyline,False,False,False,False,[103023],643519,1002,Skyliner,5,20000,0,54,0,0,0.0,10,0.0,0.0,169.0,8.5,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10208,Highlander_CrossCut,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Charge towards an enemy and cut a cross on their body, inflicting [Bleeding].",Skill Factor: #{SkillFactor}#% x 2{nl}AoE Attack Ratio: #{SkillSR}#{nl}{#339999}{ol}[Bleeding]{/}{/} Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Highlander30\"")"", """", ""if (abil != null  &&  \""Highlander30\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_crosscut,False,False,False,False,"[103024, 103028]",643520,1002,Crosscut,0,20000,0,106,0,0,0.0,15,0.0,0.0,252.0,8.4,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10301,Hoplite_Stabbing,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Repeatedly stab enemies. The higher the number of consecutive stabs, the higher the damage inflicted.",Skill Factor: #{SkillFactor}#% x 15{nl}AoE Attack Ratio: #{SkillSR}#{nl}Damage increase up to 100%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hoplite11\"")"", """", ""if (abil != null  &&  \""Hoplite11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_florysh,False,False,False,False,[104001],643531,1004,Stabbing,0,15000,0,106,0,0,0.0,5,0.0,0.0,124.0,12.4,0.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
10302,Hoplite_Pierce,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Deal damage to enemies by piercing them. The larger an enemy is, the more consecutive hits you deal.{nl}{#00113F}If you're equipping a Dragoon Helmet, the number of consecutive hits in Pierce increases by 1.{/}",Skill Factor: #{SkillFactor}#%{nl}Medium Targets: 2 hits{nl}Large Targets: 3 hits{nl}Boss Monsters: 4 hits,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hoplite14\"")"", """", ""if (abil != null  &&  \""Hoplite14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_pierce,False,False,False,False,[104007],643532,1004,Pierce,5,30000,0,60,0,0,0.0,15,0.0,0.0,208.0,6.9,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
10303,Hoplite_Finestra,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Switch into the Finestra stance to attack. Decreases your evasion, but applies additional critical rate to your spear attacks. The Finestra buff is canceled if you change to a weapon other than a spear.",Critical Rate: +#{CaptionRatio}#% applied{nl}Evasion: -20%{nl}Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Hoplite32\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Hoplite32\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 3 * skill.Level"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill));"", ""return Math.floor(value)""]",,,"[""return 30 + (3 * skill.Level);""]",,,,,,6,icon_warri_finestra,False,False,False,False,[104027],643533,1004,Finestra,0,50000,0,156,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10304,Hoplite_SynchroThrusting,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical]{/}{/}{nl}Use your weapon and shield to attack. Using a two-handed Pierce weapon blocks enemy physical attacks and triggers a counter. While the counter is active, you deal additional damage to enemies.",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hoplite13\"")"", """", ""if (abil != null  &&  \""Hoplite13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_spearblow,False,False,False,False,[104004],643534,1004,Synchro Thrusting,3,15000,0,68,0,0,0.0,15,0.0,0.0,204.0,6.8,1.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
10306,Hoplite_ThrouwingSpear,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Throw your spear to attack the enemy. Targets hit by the spear are knocked down and become afflicted with the Shock debuff.,Skill Factor: #{SkillFactor}#% x 3{nl}AoE Attack Ratio: #{SkillSR}#{nl}{#339999}{ol}[Shock]{/}{/} Duration: 5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hoplite23\"")"", """", ""if (abil != null  &&  \""Hoplite23\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_throuwingspear,False,False,False,False,[104012],643537,1004,Spear Throw,0,10000,0,102,0,0,0.0,15,0.0,0.0,190.0,6.3,16.0,1,1,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
10307,Hoplite_SpearLunge,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Stab an enemy in front of you, making them more vulnerable to Pierce-type attacks. Ignores part of the enemy's defense.",Skill Factor: #{SkillFactor}#%{nl}Ignores enemy defense by 50%{nl}Debuff Duration: 6 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hoplite26\"")"", """", ""if (abil != null  &&  \""Hoplite26\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_spearlunge,False,False,False,False,[104021],643536,1004,Spear Lunge,5,20000,0,52,0,0,0.0,10,0.0,0.0,227.0,11.4,0.0,1,16,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
10308,Hoplite_SharpSpear,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}The tip of your spear becomes momentarily sharper. Critical spear attacks deal increased critical damage.,Critical Damage: +#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Hoplite31\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Hoplite31\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 5 + (skill.Level * 1)"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,"[""var value = 300"", ""return Math.floor(value)""]",,,,,,6,icon_warri_sharpspear,False,False,False,False,[104026],643867,1004,Sharp Spear,0,60000,0,168,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10401,Barbarian_Embowel,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Release a powerful stab into an enemy, then kick it away with your foot.",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Barbarian17\"")"", """", ""if (abil != null  &&  \""Barbarian17\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_embowel,False,False,False,False,[105001],643538,1006,Embowel,0,15000,0,102,0,0,0.0,15,0.0,0.0,667.0,22.1,2.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
10404,Barbarian_StompingKick,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Strike] - [Physical]{/}{/}{nl}Trample down on an enemy while in the air or jumping.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Barbarian20\"")"", """", ""if (abil != null  &&  \""Barbarian20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_stompingkick,False,False,False,False,[105006],643539,1006,Stomping Kick,5,30000,0,60,0,0,0.0,15,0.0,0.0,382.0,12.7,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 9, 6]"
10405,Barbarian_Warcry,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Temporarily decreases the defense of nearby enemies and increases the damage dealt to them in proportion to the number of targets nearby.,Targets: 10{nl}Enemy Physical Defense: -10%{nl}Physical Damage: +#{CaptionRatio}# x [affected targets x 2.5]%{nl}Reduces enemy physical defense for 10 seconds{nl}Increases physical damage for #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Barbarian11\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Barbarian11\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value;""]",,,"[""var value = 10 + (skill.Level * 2)"", ""return value;""]",,,,,,6,icon_warri_warcry,False,False,False,False,[105005],643542,1006,Warcry,0,30000,0,134,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10406,Barbarian_Frenzy,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Increases basic attack speed. Gradually increases damage as you deliver more attacks to the enemy. Stacks decrease by 1 every 3 seconds.,Deals +#{CaptionRatio3}#% damage per stack{nl}Maximum Stacks: #{CaptionRatio2}# hits{nl}Consumes 101 SP{nl}Basic Attack Speed: +#{CaptionRatio}#,"[""var value = 150 + (skill.Level * 10)"", ""return Math.floor(value)""]","["""", ""if (null != pc) {"", ""    var abil = GetAbility(pc, 'Barbarian22');"", """", ""    if (null != abil  &&  1 == abil.ActiveState) {"", ""        return skill.Level"", ""    }"", """", ""}"", """", ""return skill.Level * 2""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Barbarian14\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Barbarian14\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 2"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value;""]",,,,,,,6,icon_warri_phrensy,False,False,False,False,[105004],643543,1006,Frenzy,0,1000,0,0,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10408,Barbarian_Pouncing,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Charge forward while slashing, attacking any enemies that block your way.",Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Maximum Duration: 3.5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Barbarian24\"")"", """", ""if (abil != null  &&  \""Barbarian24\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_pouncing,False,False,False,False,[105014],643546,1006,Pouncing,0,30000,0,123,0,0,0.0,5,0.0,0.0,129.0,12.9,3.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10410,Barbarian_Seism,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Create an earth tremor to stop enemies from attacking. The enemy has a chance to become afflicted with [Stun].,Skill Factor: #{SkillFactor}#% x #{CaptionRatio2}#{nl}AoE Attack Ratio: #{SkillSR}#,,"[""var hitCount = 3"", ""return hitCount;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Barbarian26\"")"", """", ""if (abil != null  &&  \""Barbarian26\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_seism,False,False,False,False,[105016],643544,1006,Seism,2,15000,0,94,0,0,0.0,10,0.0,0.0,168.0,8.4,16.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10411,Barbarian_Cleave,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Release a strong attack on enemies by spinning your body. If the attack is accurate, your critical rate and damage dealt to stunned enemies increases. Also, affected targets receive increased damage from Slash-type attacks. Attacked enemies fall down on the spot.",Skill Factor: #{SkillFactor}#%{nl}Critical Rate: +10%{nl}AoE Attack Ratio: #{SkillSR}#{nl}Damage to Stunned Enemies: +150%{nl}Slash Attack Damage: +20%{nl}Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Barbarian27\"")"", """", ""if (abil != null  &&  \""Barbarian27\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_cleave,False,False,False,False,"[105023, 105017]",643540,1006,Cleave,0,10000,0,93,0,0,0.0,15,0.0,0.0,373.0,12.4,3.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10501,Rodelero_ShieldCharge,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Use your shield and dash to push enemies away. Enemies nearby fall down when hit with the shield. Your block and physical defense increase while Shield Charge is active.{nl}{#00113F}If the Sprint buff is active, affected enemies have their movement speed reduced.{/}",Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Block and Physical Defense: +#{CaptionRatio}#%{nl}Maximum Duration: 5 seconds{nl}Consumes STA,"[""var value = 10 + (skill.Level * 6)"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rodelero11\"")"", """", ""if (abil != null  &&  \""Rodelero11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_shieldcharge,False,False,False,False,"[106001, 106024]",643564,1010,Shield Charge,0,30000,0,123,0,0,0.0,15,0.0,0.0,294.0,9.8,3.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
10502,Rodelero_Montano,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Attack with a powerful slash on the lower half of an enemy. Temporarily slows down the enemy.,Skill Factor: #{SkillFactor}#%{nl}{#339999}{ol}[Slow]{/}{/} Duration: 5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rodelero14\"")"", """", ""if (abil != null  &&  \""Rodelero14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_montano,False,False,False,False,[106004],643565,1010,Montano,0,15000,0,101,0,0,0.0,15,0.0,0.0,540.0,17.9,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10503,Rodelero_TargeSmash,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Use your shield to inflict damage on an enemy with a powerful smash. Deals increased damage on shocked enemies.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}Deals +100% damage on shocked enemies,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rodelero17\"")"", """", ""if (abil != null  &&  \""Rodelero17\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_targesmash,False,False,False,False,"[106007, 106024]",643566,1010,Targe Smash,5,20000,0,55,0,0,0.0,15,0.0,0.0,236.0,7.8,12.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
10504,Rodelero_ShieldPush,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Use your shield to interrupt enemies. The target becomes afflicted with [Unbalanced]. Chance to knock down and reduce the defense of enemies affected by [Unbalanced]. Attacking the enemy from the back deals increased damage.,Skill Factor: #{SkillFactor}#%{nl}Defense: -#{CaptionRatio}#%{nl}Damage on Enemies Attacked from the Back: +100%{nl}{#339999}{ol}[Unbalanced]{/}{/} Duration: 10 seconds,"[""var value = skill.Level"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rodelero20\"")"", """", ""if (abil != null  &&  \""Rodelero20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_shieldpush,False,False,False,False,"[106010, 106024]",643567,1010,Shield Push,3,15000,0,68,0,0,0.0,15,0.0,0.0,405.0,13.4,0.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
10505,Rodelero_Slithering,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Hold down the key to crouch and move forward. While slithering, you cannot be knocked back or knocked down, your block increases and your damage taken is reduced. Triggers an attack immediately after movement has ended.{nl}{#00113F}If the Sprint buff is active, Slithering's movement speed penalty is cut in half, and affected enemies turn around.{/}",Skill Factor: #{SkillFactor}#%{nl}Block: +#{CaptionRatio}#%{nl}Damage reduced by #{CaptionRatio2}#%{nl}Evasion reduced by #{CaptionRatio3}#%{nl}Maximum Duration: 10 seconds,"[""var value = skill.Level * 10"", ""return value""]","[""var value = skill.Level * 5"", ""return value""]","[""var value = skill.Level"", ""return value""]",,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rodelero24\"")"", """", ""if (abil != null  &&  \""Rodelero24\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_slithering,False,False,False,False,[106017],643570,1010,Slithering,0,20000,0,109,0,0,0.0,10,0.0,0.0,777.0,0.0,3.0,1,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
10506,Rodelero_ShootingStar,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Use your shield and sword to successively attack enemies. When the attack is accurate, adds 30% of your shield's physical defense to your physical attack.",Skill Factor: #{SkillFactor}#% x 4{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rodelero23\"")"", """", ""if (abil != null  &&  \""Rodelero23\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_shootingstar,False,False,False,False,[106016],643571,1010,Shooting Star,2,25000,0,101,0,0,0.0,5,0.0,0.0,170.0,17.0,15.0,1,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
10507,Rodelero_ShieldShoving,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Use your shield to interrupt enemies. The target is turned around and becomes momentarily unable to act. Affected enemies become vulnerable to Strike attacks.,Skill Factor: #{SkillFactor}#%{nl}{#339999}{ol}[Unable to Act]{/}{/} Duration: 1.5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rodelero26\"")"", """", ""if (abil != null  &&  \""Rodelero26\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_shieldshoving,False,False,False,False,"[106019, 106024]",643568,1010,Shield Shoving,3,10000,0,62,0,0,0.0,10,0.0,0.0,237.0,11.9,2.0,1,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
10508,Rodelero_ShieldBash,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Use your shield to ignore the enemy's block and attack. Shocks affected targets and deals increased damage to Plate-armored enemies.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}Deals +100% damage to Plate armor enemies{nl}{#339999}{ol}[Shock]{/}{/} Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rodelero27\"")"", """", ""if (abil != null  &&  \""Rodelero27\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_shieldbash,False,False,False,False,"[106020, 106024]",643569,1010,Shield Bash,0,30000,0,127,0,0,0.0,5,0.0,0.0,704.0,70.400002,12.0,1,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
10601,Cataphract_Impaler,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Impale a Small or Medium-sized monster with the spear. Allows you to attack other enemies with the impaled enemy. Striking down with the impaled enemy triggers a critical attack.{nl}{#00113F}If the Sharp Spear buff is active, attacks apply as 2 hits.{/}",Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionRatio2}# seconds{nl}Attacks: 1{nl}Targets: 10,,"[""var value = 8 + skill.Level;"", """", ""if (IsPVPServer(pc) == 1  ||  zone == 'pvp_Mine') {"", ""    value = 6;"", ""}"", """", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cataphract14\"")"", """", ""if (abil != null  &&  \""Cataphract14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_impaler,False,False,False,False,[107001],643547,1007,Impaler,0,30000,0,123,0,0,0.0,15,0.0,0.0,447.0,14.8,8.0,0,1,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[9, 6]"
10602,Cataphract_EarthWave,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Gather up power and use your weapon to attack targets by smashing it to the ground. Deals increased damage to knocked-down enemies.,Skill Factor: #{SkillFactor}#% x 5{nl}AoE Attack Ratio: #{SkillSR}#{nl}Deals +100% damage to knocked-down enemies,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cataphract17\"")"", """", ""if (abil != null  &&  \""Cataphract17\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_earthwave,False,False,False,False,"[107004, 107014]",643548,1007,Earth Wave,3,10000,0,63,0,0,0.0,15,0.0,0.0,72.0,2.4,8.0,0,1,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[9, 6]"
10603,Cataphract_Trot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Increases your movement speed while riding.,Movement Speed: +#{CaptionRatio}#{nl}Duration: 30 seconds,"[""var value = 5 + (skill.Level * 1)"", ""return value""]",,,,,,,,,6,icon_warri_trot,False,False,False,False,,643549,1007,Trot,0,30000,0,134,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10604,Cataphract_SteedCharge,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Charge into the enemy, dealing damage. You can use the skill again up until 1.5 seconds after casting.",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cataphract20\"")"", """", ""if (abil != null  &&  \""Cataphract20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_steedcharge,False,False,False,False,[107007],643550,1007,Steed Charge,0,8000,0,102,0,0,0.0,15,0.0,0.0,339.0,11.2,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[9, 6]"
10605,Cataphract_DoomSpike,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Strongly stab the enemy with the tip of your spear, decreasing critical resistance.",Skill Factor: #{SkillFactor}#% x 5{nl}AoE Attack Ratio: #{SkillSR}#{nl}Critical Resistance: -10%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cataphract23\"")"", """", ""if (abil != null  &&  \""Cataphract23\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_doomspike,False,False,False,False,"[107010, 107018]",643551,1007,Doom Spike,3,15000,0,68,0,0,0.0,10,0.0,0.0,84.0,4.2,8.0,0,16,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[6, 7]"
10606,Cataphract_Rush,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Spin your spear above your head to inflict damage all around you. Ignores enemy block and applies twice the critical rate to enemies in [Fear].{nl}(Does not allow for automatic weapon swap.),Skill Factor: #{SkillFactor}#% per 0.3 seconds{nl}Maximum Duration: 3 seconds{nl}AoE Attack Ratio: #{SkillSR}#{nl}Consumes #{CaptionRatio3}# SP every 0.3 seconds,,,"[""var value = 10 + skill.Level *1;"", ""var abil = GetAbility(pc, \""Cataphract1\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value * 1.2"", ""}"", """", ""return value;""]",,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cataphract11\"")"", """", ""if (abil != null  &&  \""Cataphract11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_rush,False,False,False,False,[107012],643552,1007,Rush,0,30000,0,0,0,0,0.0,5,0.0,0.0,205.0,20.5,8.0,1,31,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[8, 6]"
10608,Cataphract_AcrobaticMount,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Gives a buff that increases the damage of skills that can be used only while riding. SP consumption of riding-only skills is increased. Buff disappears if dismounted or low on SP.,Damage Increase: #{CaptionRatio}#%{nl}SP Consumption: +#{CaptionRatio2}#%{nl}Duration: 30 seconds,"[""var value = 5 + (skill.Level * 5)"", ""return value;""]","[""var value = skill.Level * 5"", ""return value;""]",,,,,,,,6,icon_warri_acrobaticmount,False,False,False,False,[107020],,1007,Acrobatic Mount,0,30000,0,134,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10901,Centurion_Conscript,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Create a formation that calls on the squads members.,Able to assemble #{CaptionRatio}# squad members,"[""var value = 3 + skill.Level;"", """", ""if (value > 8) {"", ""    value = 8"", ""}"", """", ""return value""]",,,,,,,,,6,icon_warri_conscript,False,False,False,False,,,1005,Conscript,0,22000,0,0,0,0,0.0,5,0.0,0.0,100.0,0.0,3.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10902,Centurion_PhalanxFormation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Change to the Phalanx formation. All of the squad members' block will be focused to the 3 in the front row.,Additional Block: +#{CaptionRatio}#{nl}Consumes 1% SP every 2 seconds,"[""return skill.Level * 10""]",,,,,,,,,6,icon_warri_phalanxformation,False,False,False,False,[110001],,1005,Phalanx,0,0,0,0,0,0,0.0,0,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10903,Centurion_TercioFormation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Change to Tersio Formation. Defense is concentrated on the three frontline players and provokes enemy.,Additional Defense: +#{CaptionRatio}#{nl}Consumes 1% SP every 2 seconds,"[""return skill.Level * 10""]",,,,,,,,,6,icon_warri_tercioformation,False,False,False,False,[110002],,1005,Tercio,0,0,0,0,0,0,0.0,0,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10904,Centurion_WingedFormation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Change to the Crane Wing formation. Decreases the defense of enemies within the formation while targeting the leader.,Defense: -#{CaptionRatio}#%{nl}Consumes 1% SP every 2 seconds,"[""var value = 50 + (3 * skill.Level)"", ""return value;""]",,,,,,,,,6,icon_warri_wingedformation,False,False,False,False,[110003],,1005,Winged Formation,0,0,0,0,0,0,0.0,0,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10905,Centurion_WedgeFormation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Change to the Wedge formation.,Conveys #{CaptionRatio2}#% attack to squad members{nl}#{CaptionRatio}# successive hits when attacking{nl}Consumes 1% SP every 2 seconds,"[""return 4""]","[""var value = 50 + skill.Level * 5"", ""return value""]",,,,,,,,6,icon_warri_wedgeformation,False,False,False,False,,,1005,Wedge Formation,0,0,0,0,0,0,0.0,0,0.0,0.0,100.0,0.0,3.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10906,Centurion_SchiltronFormation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Change to the Schiltron formation. All squad members will stop at once while raising their weapons to prevent from enemies rushing in.,Consumes 1% SP every 2 seconds{nl}Maximum Level: 1,,,,,,,,,,6,icon_warri_schiltron,False,False,False,False,[110004],,1005,Schiltron Formation,0,0,0,0,0,0,0.0,0,0.0,0.0,100.0,0.0,3.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10907,Centurion_Testudo,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Switches to the Testudo formation. Increases the defense of all members at the cost of slower movement speed.,Attack: -#{CaptionRatio}#% {nl}Increased defense equal to the decreased attack{nl}Additonal Defense: #{CaptionRatio2}#%{nl}Consumes 1% SP per 2 seconds,"[""return 50""]","[""return skill.Level * 30""]",,,,,,,,6,icon_warri_testudo,False,False,False,False,[110005],,1005,Testudo,0,0,0,0,0,0,0.0,0,0.0,0.0,100.0,0.0,3.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10908,Centurion_Rotate,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Realign direction of formation to leader's view.,Rearrange in line with leader's direction. {nl}Maximum Level: 1,,,,,,,,,,6,icon_warri_skirmishers,False,False,False,False,,,1005,Change Direction,0,0,0,0,0,0,0.0,0,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
10910,Centurion_SpecialForceFormation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Creates a formation which brings squad members together. The skill cooldown time of the squad members that entered into the formation will be reduced in half. Duration will increase by Skill Level, and the number of members in the squad.",Cooldown time reduced by 50%{nl}Minimum/Maximum Duration: #{CaptionRatio}# seconds ~ #{CaptionRatio2}# seconds,"[""var value = 35 + skill.Level * 5"", ""return value;""]","[""var value = 55 + skill.Level * 5"", ""return value;""]",,,,,,,,6,icon_warri_specialforceformation,False,False,False,False,,,1005,Special Formation,0,120000,0,0,0,0,0.0,0,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11001,Doppelsoeldner_DeedsOfValor,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Increases the damage you deal to enemies, but also increases the damage you receive.",Add. damage +#{CaptionRatio}#%{nl}Damage taken +#{CaptionRatio2}#%{nl}Duration 120 sec,"[""return 5 + (skill.Level - 1) * 2;""]","[""return 5 + (skill.Level - 1) * 1;""]",,,,,,,,6,icon_warri_deedsofvalor,False,False,False,False,,643560,1009,Deeds of Valor,0,40000,0,145,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11003,Doppelsoeldner_Double_pay_earn,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Applies a buff that increases Looting Chance. Increases your damage taken.,Looting Chance: +#{CaptionRatio}#{nl}Damage Taken: +100%{nl}Duration: 60 seconds,"[""var value = skill.Level * 30"", ""return value""]",,,,,,,,,6,icon_warri_doublepay_earn,False,False,False,False,,643562,1009,Double Pay Earn,0,120000,0,190,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11004,Doppelsoeldner_Punish,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Deeply pierce a collapsed enemy. Deals damage only to collapsed enemies.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Doppelsoeldner13\"")"", """", ""if (abil != null  &&  \""Doppelsoeldner13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_punish,False,False,False,False,[111003],643559,1009,Punish,0,10000,0,101,0,0,0.0,15,0.0,0.0,546.0,18.1,15.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11005,Doppelsoeldner_Cyclone,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Use centrifugal force to turn and continuously attack enemies.{nl}{#00113F}If the Frenzy buff is active with 10 or more stacks, when Cyclone ends, enemies on the spot receive damage for 3 seconds.{/}",Skill Factor: #{SkillFactor}#% per 0.2 seconds{nl}Duration: #{CaptionRatio2}# seconds{nl}AoE Attack Ratio: #{SkillSR}#,,"[""return 3.5""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Doppelsoeldner11\"")"", """", ""if (abil != null  &&  \""Doppelsoeldner11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var skillSR = skill.SklSR;"", ""var abil =  GetAbility(pc, 'Doppelsoeldner24')"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    skillSR = skillSR + abil.Level;"", ""}"", """", ""var value = pc.SR + skillSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_cyclone,False,False,False,False,"[111001, 111004, 111019]",643563,1009,Cyclone,0,20000,0,112,0,0,0.0,5,0.0,0.0,146.0,14.6,8.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11006,Doppelsoeldner_Zornhau,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Inflict damage and put the enemy into a state of shock with a big slash attack.,Skill Factor: #{SkillFactor}#% x #{CaptionRatio2}#{nl}{#339999}{ol}[Shock]{/}{/} Duration: 5 seconds,,"[""var abil = GetAbility(pc, 'Doppelsoeldner22')"", ""var hitCount = 1"", """", ""if (abil != null  &&  skill.Level >= 6  &&  abil.ActiveState == 1) {"", ""    hitCount = 1 + abil.Level;"", ""}"", """", ""return hitCount;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Doppelsoeldner14\"")"", """", ""if (abil != null  &&  \""Doppelsoeldner14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_zornhau,False,False,False,False,[111008],643821,1009,Zornhau,0,15000,0,101,0,0,0.0,5,0.0,0.0,202.0,6.7,0.0,1,1,0,"[{""Name"": ""TwoHandSword"", ""Icon"": ""weapon_tsword""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11007,Doppelsoeldner_Redel,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Deals successive attacks to an enemy in front by swinging your weapon. Bleeding enemies receive increased damage. Allows you to use Redel after Zucken.,Skill Factor: #{SkillFactor}#% x #{CaptionRatio2}#{nl}Damage on Bleeding Enemies: +100%,,"[""var abil = GetAbility(pc, \""Doppelsoeldner21\"")"", ""var hitCount = 5"", """", ""if (abil != null  &&  skill.Level >=6  &&  abil.ActiveState == 1) {"", ""    hitCount = 14"", ""}"", """", ""return hitCount;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Doppelsoeldner15\"")"", """", ""if (abil != null  &&  \""Doppelsoeldner15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_redel,False,False,False,False,[111009],643822,1009,Redel,0,1000,0,84,0,0,0.0,5,0.0,0.0,89.0,3.0,0.0,1,1,0,"[{""Name"": ""TwoHandSword"", ""Icon"": ""weapon_tsword""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11008,Doppelsoeldner_Zucken,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Slash side-to-side with your weapon and deal continuous damage to an enemy in front of you. Damage on shocked enemies is increased. Allows you to use Zucken after Zornhau.,Skill Factor: #{SkillFactor}#% x #{CaptionRatio2}#{nl}Damage on Shocked Enemies: +100%,,"[""var abil = GetAbility(pc, \""Doppelsoeldner20\"")"", ""var hitCount = 4"", """", ""if (abil != null  &&  skill.Level >= 6  &&  abil.ActiveState == 1) {"", ""    hitCount = hitCount * 2"", ""}"", """", ""return hitCount;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Doppelsoeldner16\"")"", """", ""if (abil != null  &&  \""Doppelsoeldner16\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_zucken,False,False,False,False,[111010],643823,1009,Zucken,0,1000,0,84,0,0,0.0,5,0.0,0.0,110.0,3.7,0.0,1,1,0,"[{""Name"": ""TwoHandSword"", ""Icon"": ""weapon_tsword""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11009,Doppelsoeldner_Zwerchhau,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Swing the sword in one hand to attack a wide range of enemies. Hit enemies become affected with [Bleeding].,Skill Factor: #{SkillFactor}#% x 3{nl}AoE Attack Ratio: #{SkillSR}#{nl}{#339999}{ol}[Bleeding]{/}{/} Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Doppelsoeldner18\"")"", """", ""if (abil != null  &&  \""Doppelsoeldner18\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var skillSR = skill.SklSR;"", ""var abil =  GetAbility(pc, 'Doppelsoeldner24')"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    skillSR = skillSR + abil.Level;"", ""}"", """", ""var value = pc.SR + skillSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_zwerchhau,False,False,False,False,"[111012, 111020]",643824,1009,Zwerchhau,3,45000,0,93,0,0,0.0,10,0.0,0.0,223.0,11.2,3.0,1,16,0,"[{""Name"": ""TwoHandSword"", ""Icon"": ""weapon_tsword""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11010,Doppelsoeldner_Sturzhau,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Strike with your weapon diagonally. The attack ignores a portion of the enemy's defense.,Skill Factor: #{SkillFactor}#% x 6{nl}AoE Attack Ratio: #{SkillSR}#{nl}Ignores enemy defense by 50%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Doppelsoeldner19\"")"", """", ""if (abil != null  &&  \""Doppelsoeldner19\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var skillSR = skill.SklSR;"", ""var abil =  GetAbility(pc, 'Doppelsoeldner24')"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    skillSR = skillSR + abil.Level;"", ""}"", """", ""var value = pc.SR + skillSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_sturtzhauw,False,False,False,False,[111013],643825,1009,Sturtzhau,3,35000,0,84,0,0,0.0,15,0.0,0.0,96.0,3.2,3.0,1,1,0,"[{""Name"": ""TwoHandSword"", ""Icon"": ""weapon_tsword""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11101,Fencer_AttaqueComposee,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Stab an enemy in front of you.,Skill Factor: #{SkillFactor}#% x 2,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fencer2\"")"", """", ""if (abil != null  &&  \""Fencer2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_attaquecomposee,False,False,False,False,[112002],643579,1014,Attaque Composee,5,10000,0,47,0,0,0.0,15,0.0,0.0,138.0,4.6,0.0,1,1,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11103,Fencer_SeptEtoiles,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Repeatedly stab enemies with your rapier. The attack ignores a portion of the enemy's defense.,Skill Factor: #{SkillFactor}#% x 8{nl}Ignores enemy defense by 50%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fencer4\"")"", """", ""if (abil != null  &&  \""Fencer4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_septetoiles,False,False,False,False,[112004],643575,1014,Sept Etoiles,0,15000,0,102,0,0,0.0,15,0.0,0.0,85.0,2.9,0.0,1,1,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11105,Fencer_EsquiveToucher,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Move swiftly to avoid enemy attacks and deliver complex successive attacks.{nl}(Buff duration changes to 4 seconds in PvP.),Skill Factor: #{SkillFactor}#% x 5{nl}Increases evasion by 100% while the skill is in use,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fencer6\"")"", """", ""if (abil != null  &&  \""Fencer6\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_esquivetoucher,False,False,False,False,[112006],643577,1014,Esquive Toucher,0,10000,0,95,0,0,0.0,15,0.0,0.0,113.0,3.8,0.0,1,1,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11106,Fencer_Preparation,"[""var value = skill.BasicCoolDown;"", ""value = value - (skill.Level * 1000);"", ""return value""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Twirl the tip of your sword to parry an enemy attack and prepare for the next attack. The next [Pierce]-type attack you make will inflict twice as much damage.,Block increases by 100% while the skill is maintained{nl}Maximum Duration: #{CaptionRatio2}# seconds{nl}Buff Duration: 45 seconds,,"[""var value = 3"", ""return value""]",,,,,,,,6,icon_warri_preparation,False,False,False,False,,,1014,Preparation,0,20000,0,123,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11107,Fencer_Flanconnade,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Perform a complex upward attack with your rapier. Your block against enemy physical attacks increases while the skill is in use.,Skill Factor: #{SkillFactor}#% x 2{nl}Increases block by 100% while the skill is in use,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fencer7\"")"", """", ""if (abil != null  &&  \""Fencer7\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_flanconnade,False,False,False,False,[112007],643578,1014,Flanconnade,5,20000,0,54,0,0,0.0,15,0.0,0.0,172.0,5.7,0.0,1,1,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11108,Fencer_BalestraFente,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Quickly charge forward to attack. Attacked enemies have their critical resistance reduced.{#00113F} If you have the Back Slide skill, its cooldown resets after using Balestra Fente.{/}",Skill Factor: #{SkillFactor}#%{nl}Maximum Targets: 10{nl}Reduces enemies' critical resistance by 20%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fencer8\"")"", """", ""if (abil != null  &&  \""Fencer8\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_balestrafente,False,False,False,False,[112008],,1014,Balestra Fente,0,15000,0,111,0,0,0.0,10,0.0,0.0,747.0,37.400002,0.0,1,16,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11110,Fencer_EpeeGarde,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Nullifies the physical defense of your equipped shield, but increases the critical damage of your Pierce-type attacks.{nl}{#00113F}If you have the Rodelero class in your build, your shield's physical defense is not nullified.{/}",Critical Attack Increment: #{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Fencer12\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Fencer12\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 50;"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value)""]",,,"[""var value = 15 + skill.Level * 3"", ""return value""]",,,,,,6,icon_warri_epeegarde,False,False,False,False,[112012],,1014,Epee Garde,0,30000,0,134,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11111,Fencer_Fleche,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Stab the enemy three times in a row. This attack has a higher critical rate on enemies.,Skill Factor: #{SkillFactor}#% x 3{nl}2x Critical rate,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fencer10\"")"", """", ""if (abil != null  &&  \""Fencer10\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_fleche,False,False,False,False,[112010],,1014,Fleche,3,30000,0,80,0,0,0.0,5,0.0,0.0,180.0,18.0,0.0,1,31,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11301,Murmillo_CassisCrista,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Equip your Cassis Crista and prepare for battle. While the helmet is equipped, attack skills using the shield have their damage increased by 50%. Use the helmet again when it's equipped or mount a companion to remove the helmet.{nl}(Does not allow for automatic weapon swap.)",Duration: 60 seconds{nl}Maximum Level: 1,,,,,,,,,,6,icon_warri_cassiscrista,False,False,False,False,,,1012,Cassis Crista,0,10000,0,0,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11302,Murmillo_FrenziedSlash,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Perform a long leap forwards and strike foes on the ground. Enemies hit are temporarily stunned.,Skill Factor: #{SkillFactor}#%{nl}Targets: #{CaptionRatio2}#{nl}Able to use while wearing a helmet,,"[""var value = 4 + skill.Level * 1"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Murmillo2\"")"", """", ""if (abil != null  &&  \""Murmillo2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_frenziedslash,False,False,False,False,[115002],,1012,Frenzied Slash,0,20000,0,110,0,0,0.0,15,0.0,0.0,852.0,28.200001,3.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11303,Murmillo_EvadeThrust,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Lunge your sword at the enemy's neck while defending yourself behind your shield. Your damage taken from magic attacks is reduced and your block chance increases while you are attacking with [Evade Thrust]. Damage on bleeding enemies is increased.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}{#339999}{ol}[Bleeding]{/}{/} enemies receive damage increased by 50%{nl}Magic Damage Received: -30%{nl}Block Chance: +40%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Murmillo3\"")"", """", ""if (abil != null  &&  \""Murmillo3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_evadethrust,False,False,False,False,[115003],,1012,Evade Thrust,3,10000,0,63,0,0,0.0,15,0.0,0.0,372.0,12.3,6.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11304,Murmillo_Headbutt,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Headbutt an enemy and turn them around. Attacked enemies have a chance of becoming stunned, and stunned enemies receive additional damage from this skill.{nl}{#00113F}If Dragoon Helmet is active, Headbutt's property changes from Strike to Pierce.{/}",Skill Factor: #{SkillFactor}#%{nl}{#339999}{ol}[Stun]{/}{/}Duration: #{CaptionTime}# seconds,,,,"[""var value = 3"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Murmillo5\"")"", """", ""if (abil != null  &&  \""Murmillo5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_headbutt,False,False,False,False,[115005],,1012,Headbutt,3,15000,0,68,0,0,0.0,15,0.0,0.0,414.0,13.7,0.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
11307,Murmillo_ScutumHit,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Swing the shield to attack enemies in front of you.{nl}Enemies outside of a certain range become afflicted with Bleeding.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}{#339999}{ol}[Bleeding]{/}{/} Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Murmillo9\"")"", """", ""if (abil != null  &&  \""Murmillo9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var byAbil = 0;"", ""var abil = GetAbility(pc, 'Murmillo16');"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    byAbil = pc.SR + skill.SklSR;"", ""}"", """", ""return Math.floor(pc.SR + skill.SklSR + byAbil)""]",,,,6,icon_warri_scutumhit,False,False,False,False,"[115009, 115020]",,1012,Scutum Hit,2,15000,0,89,0,0,0.0,10,0.0,0.0,541.0,27.1,12.0,1,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
11308,Murmillo_ShieldTrain,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Rush ahead with your shield and push enemies forward. Then, strike the ground with your shield to gather the enemies in front of you. Gathered enemies become temporarily unable to move.",Skill Factor: #{SkillFactor}#% x 2{nl}Targets: #{CaptionRatio}#{nl}Immobility Duration: 3 seconds,"[""var value = 10"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Murmillo15\"")"", """", ""if (abil != null  &&  \""Murmillo15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_shieldtrain,False,False,False,False,"[115015, 115020]",,1012,Shield Train,2,30000,0,108,0,0,0.0,10,0.0,0.0,245.0,12.3,10.0,1,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
11309,Murmillo_Sprint,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Momentarily increases your movement speed. The more enemies nearby, the more the duration of the Sprint buff increases. While the Sprint buff is active, your Dash does not consume STA.",Duration: #{CaptionRatio}# + [targets] seconds{nl}Maximum Targets: 5{nl}Dash does not consume STA,"[""var value = 5 + skill.Level * 0.5"", ""return value""]",,,,,,,,,6,icon_warri_sprint,False,False,False,False,,,1012,Sprint,0,20000,0,123,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11310,Murmillo_EmperorsBane,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Grab your target and swing them in the air, stunning them and making them vulnerable to Strike attacks. Repeatedly use the skill while your target is held to headbutt them and deal damage to nearby enemies.{nl}Your damage taken is reduced by 50% and damage dealt is increased by 50% when equipped with Cassis Crista.",Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionTime}# seconds{nl}Targets: #{CaptionRatio}#,"[""var value = 8"", ""return value;""]",,,"[""var value = 4"", ""return value;""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Murmillo18\"")"", """", ""if (abil != null  &&  \""Murmillo18\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_emperorsbane,False,False,False,False,[115018],,1012,Emperor's Bane,0,15000,0,106,0,0,0.0,5,0.0,0.0,334.0,33.400002,-99.0,0,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
11401,Dragoon_Dragontooth,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Rotate your spear using centrifugal force to attack an enemy. Spear attacks increase critical damage and ignore part of the enemy's defense.,Skill Factor: #{SkillFactor}#% x 6{nl}Ignores enemy defense by 50%{nl}Critical Damage: +10%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Dragoon1\"")"", """", ""if (abil != null  &&  \""Dragoon1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_dragontooth,False,False,False,False,[114001],643827,1015,Dragontooth,0,15000,0,104,0,0,0.0,15,0.0,0.0,144.0,4.8,0.0,1,1,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11402,Dragoon_Serpentine,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Use your spear to deliver continuous attacks to enemies in front of you. Applies critical to enemies affected by immobility or reduced movement speed debuffs.,Skill Factor: #{SkillFactor}#% x 7,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Dragoon3\"")"", """", ""if (abil != null  &&  \""Dragoon3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_serpentine,False,False,False,False,[114003],643828,1015,Serpentine,0,20000,0,109,0,0,0.0,15,0.0,0.0,105.0,3.5,0.0,1,1,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11403,Dragoon_Gae_Bulg,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Attack several enemies within a radius by throwing your spear. Damaged enemies will temporarily become weaker to close-range physical attacks.,Skill Factor: #{SkillFactor}#%{nl}Debuff Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Dragoon5\"")"", """", ""if (abil != null  &&  \""Dragoon5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_geabulg,False,False,False,False,[114005],643829,1015,Gae Bulg,0,20000,0,106,0,0,0.0,15,0.0,0.0,519.0,17.200001,3.0,1,1,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11404,Dragoon_Dragon_Soar,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Vault into the air while swinging your spear upwards. Attacked enemies become shocked. Enemies affected by Fear have their defense partially ignored. Increases damage dealt on flying enemies.,Skill Factor: #{SkillFactor}#% x 5{nl}{#339999}{ol}[Shock]{/}{/} Duration: 5 seconds{nl}{#339999}{ol}[Fear]{/}{/}-struck enemies have their defense ignored by 50%{nl}Increases damage to flying enemies by 30%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Dragoon8\"")"", """", ""if (abil != null  &&  \""Dragoon8\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_dragonsoar,False,False,False,False,"[114008, 114016]",643830,1015,Dragon Soar,3,15000,0,68,0,0,0.0,15,0.0,0.0,83.0,2.8,0.0,1,1,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11405,Dragoon_Dethrone,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Pierce enemies in front of you with the spear and incapacitate their movements. The skill decreases both movement speed and attack speed of boss monsters.,Skill Factor: #{SkillFactor}#% x 2{nl}{#339999}{ol}[Trap]{/}{/} Duration: #{CaptionRatio2}# seconds{nl}Boss Monster Debuff Duration: #{CaptionTime}# seconds,,"[""var value = 5"", ""return value""]",,"[""var value = 10"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Dragoon11\"")"", """", ""if (abil != null  &&  \""Dragoon11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_dethrone,False,False,False,False,"[114011, 114014]",,1015,Dethrone,2,20000,0,92,0,0,0.0,10,0.0,0.0,231.0,11.6,5.0,1,16,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11407,Dragoon_DragonFall,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Fly up to the sky, then shoot down to a specified point on the surface to deliver powerful damage over a wide range. Applies as 2 consecutive hits to shocked enemies.",Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Dragoon15\"")"", """", ""if (abil != null  &&  \""Dragoon15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_dragonfall,False,False,False,False,[114015],,1015,Dragon Fall,0,50000,0,145,0,0,0.0,5,0.0,0.0,1077.0,107.699997,3.0,1,31,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11408,Dragoon_DragoonHelmet,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Equip your Dragoon Helmet. When you equip the helmet, all Dragoon skills are enhanced with increased damage, but your movement speed is reduced by 5 and you consume SP continuously. Use the skill again to remove the helmet.",Dragoon Skill Damage: +#{CaptionRatio}#%{nl}Consumes #{CaptionRatio2}#% SP per second{nl}Duration: 300 seconds{nl}Maximum Level: 1,"[""var value = 50"", ""var abil = GetAbility(pc, \""Dragoon20\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = 25"", ""}"", """", ""return value;""]","[""var value = 2"", ""var abil = GetAbility(pc, \""Dragoon20\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value * 0.5"", ""}"", """", ""return Math.floor(value);""]",,,,,,,,6,icon_warri_dragoonhelmet,False,False,False,False,[114020],,1015,Dragoon Helmet,0,10000,0,0,0,0,0.0,1,0.0,0.0,100.0,0.0,3.0,1,16,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11409,Dragoon_DragonFear,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Increases your AoE attack ratio and inflicts the [Fear] debuff on nearby enemies.,AoE Attack Ratio: +3{nl}Duration: #{CaptionRatio}# seconds{nl}Fear Debuff Duration: 3 seconds{nl}Fear Debuff Targets: #{CaptionRatio2}#,"[""var value = 10 + (skill.Level * 2)"", ""return value""]","[""var value = skill.Level"", ""return value""]",,,,,,,,6,icon_warri_dragonfear,False,False,False,False,,643868,1015,Dragon Fear,0,30000,0,134,0,0,0.0,10,0.0,0.0,100.0,0.0,3.0,1,16,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11505,Templer_BattleOrders,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Piercing]{/}{/}{nl}Enhances the damage dealt by nearby guild members and allies to enemies. Applies an additional damage increase in PvP.{nl}Increases AoE attack ratio by 1 on allies who receive the Battle Orders buff while you are Horse Riding.{nl}The effects disappear when the target is far from the caster, and they do not stack with the effects of Advanced Orders (only the effect that was last applied remains).",Duration: 30 seconds{nl}Damage: +#{CaptionRatio2}#%{nl}* Damage in PvP: +#{CaptionRatio}#%,"[""var value = skill.Level * 1.5"", ""var addValue = skill.Level * 1.5"", ""value = value + addValue"", ""return value""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Templar6\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Templar6\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 1.5"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,,,,,,6,icon_warri_battleorders,False,False,False,False,[117006],643831,1016,Battle Orders,0,40000,0,156,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6, 7]"
11506,Templer_MortalSlash,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (IsServerSection(owner) == 1) {"", ""    var list, cnt = GetPartyMemberList(owner, PARTY_NORMAL, 0);"", """", ""    if (cnt > 1) {"", ""        var abilCoolDownRatio = 1;"", ""        for (var i = 1;  cnt - 1 ;) {"", ""            abilCoolDownRatio = abilCoolDownRatio - 0.1;"", ""        }"", """", """", ""        if (abilCoolDownRatio < 0.6) {"", ""            abilCoolDownRatio = 0.6;"", ""        }"", """", ""        basicCoolDown = basicCoolDown * abilCoolDownRatio;"", ""    }"", """", ""} else {"", ""    var list = session.party.GetPartyMemberList(PARTY_NORMAL);"", """", ""    if (list != null) {"", ""        var cnt = list.Count();"", """", ""        if (cnt > 1) {"", ""            var myObj = session.party.GetMyPartyObj(PARTY_NORMAL)"", ""            var myMapID = myObj.GetMapID()"", ""            var myChannelInfo = session.loginInfo.GetChannel();"", ""            var loginCount = 0;"", ""            for (var i = 0 ;  cnt - 1 ;) {"", ""                var partyMemberInfo = list.Element(i);"", """", ""                if (partyMemberInfo.GetMapID() == myMapID  &&  partyMemberInfo.GetChannel() == myChannelInfo) {"", ""                    loginCount = loginCount + 1;"", ""                }"", """", ""            }"", """", ""            var abilCoolDownRatio = 1;"", """", ""            if (loginCount > 1) {"", ""                for (var i = 1;  loginCount - 1 ;) {"", ""                    abilCoolDownRatio = abilCoolDownRatio - 0.1;"", ""                }"", """", ""            }"", """", """", ""            if (abilCoolDownRatio < 0.6) {"", ""                abilCoolDownRatio = 0.6;"", ""            }"", """", ""            basicCoolDown = basicCoolDown * abilCoolDownRatio;"", ""        }"", """", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", """", ""if (IsBuffApplied(pc, \""Bunshin_Debuff\"") == \""YES\"") {"", ""    var bunshinBuff = null"", ""    var bunsinCount = null"", """", ""    if (IsServerObj(pc) == 1) {"", ""        bunshinBuff = GetBuffByName(pc, \""Bunshin_Debuff\"")"", ""        bunsinCount = GetBuffArg(bunshinBuff)"", ""    } else {"", ""        var handle = session.GetMyHandle();"", ""        bunshinBuff = info.GetBuff(handle, 3049)"", ""        bunsinCount = bunshinBuff.arg1"", ""    }"", """", ""    basicCoolDown = basicCoolDown + (bunsinCount * 2000 + (basicCoolDown * (bunsinCount * 0.1)))"", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Swing your sword in all directions before slashing the enemy from the bottom up.{nl}Deals additional damage to enemies affected by Advanced Orders debuff. Cooldown is reduced according to the composition of the party. Ignores part of the enemy's defense in PvP.,Skill Factor: #{SkillFactor}#% x 3{nl}AoE Attack Ratio: #{SkillSR}#{nl}Reduces cooldown by 10% per party member{nl}Ignores 50% of enemy defense in PvP,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Templar1\"")"", """", ""if (abil != null  &&  \""Templar1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_stunblade,False,False,False,False,[117001],,1016,Mortal Slash,5,30000,0,61,0,0,0.0,15,0.0,0.0,148.0,4.9,2.0,1,1,0,"[{""Name"": ""TwoHandSword"", ""Icon"": ""weapon_tsword""}, {""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11508,Templer_BuildForge,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical]{/}{/}{nl}Erect a forge that deals damage in all directions.{nl}The forge detects hidden enemies.{nl}Requires the use of a Forge item.,Summon Skill Factor: #{SkillFactor}#%{nl}Forge Duration: #{CaptionTime}# seconds{nl}Requires Forge x1,,,,"[""var value = 50 + skill.Level * 2"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = value * 0.5"", ""}"", """", ""return Math.floor(value)""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Templar4\"")"", """", ""if (abil != null  &&  \""Templar4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_buildforge,False,False,False,False,[117004],,1016,Forge,0,120000,0,162,0,0,0.0,15,0.0,0.0,73.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
11509,Templer_BuildShieldCharger,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Build a Shield Charger that grants guild members with a protective Shield Gauge. The shield's durability recovers automatically once it reaches a certain threshold and caps at 2 times the recipient's max HP.{nl}This skill requires a [Shield Charger] item to install.,Shield Amount: #{CaptionRatio}#% of caster's HP{nl}Shielded Allies: #{CaptionRatio2}#{nl}Duration: #{CaptionRatio3}# seconds{nl}Requires Shield Charger x1,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Templar5\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Templar5\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 10 + (skill.Level * 2)"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]","[""var value = 5"", ""return value;""]","[""var value = 60"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = 30"", ""}"", """", ""return value""]",,,,,,,6,icon_warri_buildshieldcharger,False,False,False,False,[117005],,1016,Shield Charger,0,120000,0,162,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11510,Templer_NonInvasiveArea,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Create a non-invasive area around yourself that pushes enemies to the outside.{nl}If Non-Invasive Area is used while Horse Riding, nearby allies and guild members receive 25% less damage.",Duration: #{CaptionTime}# seconds{nl}Number of Pushes: #{CaptionRatio}#{nl}Consumes #{CaptionRatio2}# SP per second,"[""var value = 5 + (skill.Level * 2)"", ""return value""]","[""var value = 42 + skill.Level * 2"", ""return value;""]",,"[""var value = 10;"", ""return value""]",,,,,,6,icon_warri_noninvasivearea,False,False,False,False,,643832,1016,Non-Invasive Area,0,40000,0,156,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""TwoHandSword"", ""Icon"": ""weapon_tsword""}, {""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11511,Templer_HorseRiding,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Piercing]{/}{/}{nl}Call a horse and ride it. Your movement speed increases and you gain Pain Barrier. Cannot use if already mounted on a different Companion.{nl}While Horse Riding you can use Swash Buckling, and additional effects are applied to Non-Invasive Area, Advanced Orders, Battle Orders and Flying Colors.{nl}A GTW point bonus applies while you are mounted.{nl}{#00113F}If the Hard Shield buff is active, its duration becomes infinite. If Horse Riding is discontinued, Hard Shield cancels automatically.{/}{nl}(Does not allow for automatic weapon swap.)",Movement Speed: +5{nl}Cooldown applies after dismounting the horse{nl}Territory Wars Bonus{nl} * Attacking the Spot: allies receive additional GTW points{nl} * Defending the Spot: further reduces GTW points for enemy guilds,,,,,,,,,,6,icon_warri_horseriding,False,False,False,False,,,1016,Horse Riding,0,30000,0,56,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""TwoHandSword"", ""Icon"": ""weapon_tsword""}, {""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6, 7]"
11512,Templer_AdvancedOrders,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Piercing]{/}{/}{nl}Increases the movement speed of nearby guild members and allies, while reducing that of nearby enemies.{nl}Monsters who receive the Advanced Orders debuff while you are Horse Riding become automatically threatened.{nl}The effects disappear when away from the caster and do not stack with Advanced Orders (whichever effect is applied last remains).",Duration: 10 seconds{nl}Ally Movement Speed: +#{CaptionRatio2}#{nl}Enemy Movement Speed: -#{CaptionRatio2}#,,"[""var value = skill.Level"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = skill.Level * 2"", ""}"", """", ""return value""]",,,,,,,,6,icon_warri_advancedorders,False,False,False,False,,643869,1016,Advanced Orders,0,20000,0,134,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6, 7]"
11513,Templer_FlyingColors,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Plant the flag of victory to raise the morale of your allies and demotivate your enemies. Allies have their critical rate increased and receive less damage in PvP. Reduces enemies' critical resistance.{nl}Using Flying Colors while Horse Riding applies an additional 10% reduction to damage taken by allies in PvP.,Duration: 15 seconds{nl}Ally Critical Rate: +#{CaptionRatio}#%{nl}Damage Received in PvP: -#{CaptionRatio2}#%{nl}Enemy Critical Resistance: -#{CaptionRatio}#%,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Templar7\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Templar7\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 8"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]","[""var value = skill.Level * 5"", ""return value""]",,,,,,,,6,icon_warri_flyingcolors,False,False,False,False,[117007],643870,1016,Flying Colors,0,60000,0,145,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11601,Rancer_Crush,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Lunge with the spear forward to pierce enemies in front of you. The target temporarily has their physical, magic and sub physical attack decreased. If the target is an enemy summon, it will be displaced.",Skill Factor: #{SkillFactor}#%{nl}Attack: -#{CaptionRatio}#%{nl}Duration: 10 seconds,"[""var value = skill.Level"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Lancer2\"")"", """", ""if (abil != null  &&  \""Lancer2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_crush,False,False,False,False,[116002],,1017,Crush,0,10000,0,95,0,0,0.0,15,0.0,0.0,567.0,18.799999,0.0,1,1,0,"[{""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[6, 7]"
11603,Rancer_Joust,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Charge forward to lunge your spear at the enemy and destroy magic circles. The target becomes silenced, rendering them unable to use basic attacks and skills.",Skill Factor: #{SkillFactor}#% x 2{nl}{#339999}{ol}[Silence]{/}{/} Duration: 2 seconds{nl}Targets: 10,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Lancer6\"")"", """", ""if (abil != null  &&  \""Lancer6\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_joust,False,False,False,False,[116006],,1017,Joust,0,30000,0,127,0,0,0.0,15,0.0,0.0,357.0,11.8,0.0,1,1,0,"[{""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[6, 7]"
11604,Rancer_SpillAttack,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Fix the grip on your spear and strike your enemy downward, knocking them off of their companion. Deals additional damage to mounted enemies and Beast types.",Skill Factor: #{SkillFactor}#%{nl}Unable to mount Companion for 5 seconds if fallen,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Lancer7\"")"", """", ""if (abil != null  &&  \""Lancer7\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_unhorsing,False,False,False,False,[116007],,1017,Unhorsing,3,45000,0,93,0,0,0.0,15,0.0,0.0,679.0,22.5,0.0,1,1,0,"[{""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[6, 7]"
11605,Rancer_Quintain,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Extend your spear outwards to attack. Enemies in Crush state get additional damage.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Lancer8\"")"", """", ""if (abil != null  &&  \""Lancer8\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_quintain,False,False,False,False,"[116008, 116011]",,1017,Quintain,3,20000,0,72,0,0,0.0,15,0.0,0.0,460.0,15.2,0.0,1,1,0,"[{""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[6, 7]"
11606,Rancer_Commence,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Strengthen your will before battle. Increases the chances of you penetrating the enemy's block. Two-handed spear attacks ignore part of the target's defense and increase the chance of resisting debuffs.,Block Penetration: + #{CaptionRatio}#%{nl}Ignores 10% defense{nl}Chance of Debuff Resistance: 70%{nl}Duration: 30 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Lancer18\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Lancer18\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 10"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value""]",,,,,,,,,6,icon_warri_deployment,False,False,False,False,[116018],,1017,Initiate,0,60000,0,168,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11607,Rancer_Prevent,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = (basicCoolDown + abilAddCoolDown) - (skill.Level * 1000);"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Become immune to all debuffs for a duration of time. Cooldown time decreases with skill level.,Cooldown decreased by #{CaptionTime}# seconds{nl}Duration: 2 seconds,,,,"[""var value = skill.Level"", ""return value""]",,,,,,6,icon_warri_prevent,False,False,False,False,[116014],,1017,Prevent,0,20000,0,123,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11608,Rancer_Chage,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Rush towards the enemy and deal damage. Upon hitting an enemy, you stop and deal increased damage based on the distance traveled. Rhongomiant cannot be evaded or blocked.",Skill Factor: #{SkillFactor}#%{nl}Critical Rate: x2{nl}Ignores block,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Lancer9\"")"", """", ""if (abil != null  &&  \""Lancer9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_chage,False,False,False,False,"[116009, 116015]",,1017,Rhongomiant,0,20000,0,102,0,0,0.0,10,0.0,0.0,699.0,35.0,1.0,0,16,0,"[{""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[6, 7]"
11609,Rancer_GiganteMarcha,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Summons mounted troops to attack.,Skill Factor: #{SkillFactor}#% x 10,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Lancer13\"")"", """", ""if (abil != null  &&  \""Lancer13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_gigantemarcha,False,False,False,False,[116013],,1017,Gigante Marcha,0,50000,0,145,0,0,0.0,5,0.0,0.0,118.0,11.8,15.0,0,31,0,"[{""Name"": ""TwoHandSpear"", ""Icon"": ""weapon_tspear""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[6, 7]"
11701,Matador_Capote,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Threaten nearby enemies into chasing you. If there is a boss monster in the vicinity, the boss monster will be threatened first. Reduces the accuracy and evasion of threatened enemies. If the target is a monster, its movement speed increases, and it becomes immune to forced threat skills for 30 seconds.",Reduces accuracy/evasion of threatened targets by #{CaptionRatio2}#%{nl}Threatened Targets: 10{nl}Capote Buff Duration: #{CaptionRatio}# seconds,"[""var value = 10 + skill.Level * 1"", ""return value""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Matador19\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Matador19\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 20"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill));"", ""return value""]",,,,,,,,6,icon_warri_capote,False,False,False,False,[118019],,1018,Capote,0,30000,0,134,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11702,Matador_Muleta,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Take out your cape and fight back against an enemy that attacks you. If the counterattacked enemy is a Beast type, it attacks first. Successful counterattacks nullify the damage and increase critical rate for a certain amount of time. Blocks all melee attacks while counterattacking.",Counterattack Skill Factor: #{CaptionRatio}#%{nl}Counterattack Duration: 2 seconds{nl}Increases critical rate by #{CaptionRatio2}#% when counterattack is successful,"[""var value = 914 + (skill.Level - 1) * 50.3"", ""var abil = GetAbility(pc, \""Matador1\"")"", """", ""if (abil != null) {"", ""    value = value * (1 + (abil.Level * 0.005))"", ""}"", """", ""return Math.floor(value)""]","[""var value = skill.Level * 2"", ""return value""]",,,,,,,,6,icon_warri_muleta,False,False,False,False,"[118001, 118008, 118016]",,1018,Muleta,0,10000,0,93,0,0,0.0,15,0.0,0.0,356.0,11.8,0.0,0,1,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11703,Matador_Faena,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Use a rapier to rapidly deal successive strikes on the enemy. The number of attack counts increases by skill level. Deals 20% increased damage to Large enemies.,Skill Factor: #{SkillFactor}#%{nl}Attacks min. #{CaptionRatio}# to max. #{CaptionRatio2}# times{nl}AoE Attack Ratio: #{SkillSR}#,"[""var value = (skill.Level / 2) + 2"", ""return Math.floor(value)""]","[""var value = skill.Level + 2"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Matador2\"")"", """", ""if (abil != null  &&  \""Matador2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_faena,False,False,False,False,[118002],,1018,Faena,3,30000,0,84,0,0,0.0,15,0.0,0.0,74.0,0.0,5.0,0,1,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11704,Matador_Ole,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Flap your cape and focus the attention of the surrounding area on you. Increases critical rate, including an increase of 2 times when attacking enemies with maximum threat.",Critical Rate: #{CaptionRatio}#%{nl}Critical Rate to Max. Threat Enemies: #{CaptionRatio2}#%{nl}Duration: 20 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Matador20\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Matador20\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 10 + (skill.Level * 3)"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return Math.floor(value);""]","[""var value = 10 + skill.Level * 2;"", ""return Math.floor(value);""]",,,,,,,,6,icon_warri_ole,False,False,False,False,[118020],,1018,Ole,2,30000,0,117,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11705,Matador_PasoDoble,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Turn 360 degrees while attacking nearby enemies. During the attack, the caster receives no damage. Attacked enemies fall on the spot. Enemy attacks increase your critical rate.",Skill Factor: #{SkillFactor}#% x 4{nl}AoE Attack Ratio: #{SkillSR}#{nl}Critical Rate: +20%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Matador5\"")"", """", ""if (abil != null  &&  \""Matador5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_pasodoble,False,False,False,False,"[118005, 118012]",,1018,Paso Doble,0,10000,0,95,0,0,0.0,10,0.0,0.0,133.0,6.7,8.0,0,16,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11706,Matador_BackSlide,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = (basicCoolDown + abilAddCoolDown) - (skill.Level * 1000);"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Move backwards a set distance. Cooldown time decreases with skill level. The caster's evasion is increased after using Back Slide.,Cooldown: -#{CaptionTime}# seconds{nl}100% evasion while using Back Slide{nl}Evasion +100% for 5 seconds after using skill,,,,"[""var value = skill.Level"", ""return value""]",,,,,,6,icon_warri_backslide,False,False,False,False,[118018],,1018,Back Slide,0,20000,0,123,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11707,Matador_CorridaFinale,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Incite a fighting bull to attack nearby enemies. The provoked bull deals damage to enemies in its way.,Skill Factor: #{SkillFactor}#% x 3{nl}Targets: 15,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Matador14\"")"", """", ""if (abil != null  &&  \""Matador14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_corridafinale,False,False,False,False,"[118014, 118015]",,1018,Corrida Finale,0,30000,0,123,0,0,0.0,5,0.0,0.0,279.0,27.9,0.0,0,31,0,"[{""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""RapierAndShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""RapierAndDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11801,NakMuay_RamMuay,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Assume an active Ram Muay attack stance. Unlocks Nak Muay skills and converts basic attacks. Basic attack speed increases with skill level.,Attack: #{SkillFactor}#% x 2{nl}Basic Attack Speed: +#{CaptionRatio}#,"[""var value = skill.Level * 20"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""NakMuay5\"")"", """", ""if (abil != null  &&  \""NakMuay5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_rammuay,False,False,False,False,[119005],,1019,Ram Muay,0,0,0,0,0,0,0.0,15,0.0,0.0,50.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11802,NakMuay_TeKha,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Strikes the lower half of the enemy. Chance of inflicting [Slow]. [Slow] chances are determined by the difference between your STR and the enemy's CON. Additional damage to Small-sized enemies. Can be used only when the Ram Muay buff is active.,Skill Factor: #{SkillFactor}#% x 2{nl}+50% damage to Small-sized enemies{nl}Can be used after adopting the Ram Muay stance,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""NakMuay1\"")"", """", ""if (abil != null  &&  \""NakMuay1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_tekha,False,False,False,False,[119001],,1019,Te Kha,0,5000,0,89,0,0,0.0,15,0.0,0.0,236.0,7.8,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
11803,NakMuay_SokChiang,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Slash the enemy with your elbow. Chance of inflicting [Bleeding]. [Bleeding] chance is determined by the difference between your STR and the enemy's CON. Can be used only when the Ram Muay buff is active.,Skill Factor: #{SkillFactor}#% x 2{nl}Can be used after adopting the Ram Muay stance,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""NakMuay2\"")"", """", ""if (abil != null  &&  \""NakMuay2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_sokchiang,False,False,False,False,[119002],,1019,Sok Chiang,0,6000,0,90,0,0,0.0,15,0.0,0.0,240.0,8.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
11804,NakMuay_TeTrong,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Attack the enemy with a powerful kick. The kicked enemy spins and gets knocked down. Can be used only when the Ram Muay buff is active.,Skill Factor: #{SkillFactor}#%{nl}Can be used after adopting the Ram Muay stance,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""NakMuay3\"")"", """", ""if (abil != null  &&  \""NakMuay3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_tetrong,False,False,False,False,[119003],,1019,Te Trong,0,8000,0,91,0,0,0.0,10,0.0,0.0,379.0,19.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
11805,NakMuay_KhaoLoi,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Hit the enemy with a flying knee kick. Flying-type enemies take additional damage. Can be used only when the Ram Muay buff is active.,Skill Factor: #{SkillFactor}#%{nl}+50% increased damage to Flying enemies{nl}Can be used after adopting the Ram Muay stance,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""NakMuay4\"")"", """", ""if (abil != null  &&  \""NakMuay4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_khaoloi,False,False,False,False,[119004],,1019,Khao Loi,0,10000,0,96,0,0,0.0,10,0.0,0.0,590.0,29.5,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
11806,NakMuay_MuayThai,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Applies a buff that changes the cooldown of Te Kha, Sok Chiang, Te Trong and Khao Loi to 0.5 seconds. After the buff expires, the cooldown of Te Kha, Sok Chiang, Te Trong and Khao Loi is set to 30 seconds.",Duration: #{CaptionRatio}# seconds,"[""var value = 10 + skill.Level"", ""return value;""]",,,,,,,,,6,icon_warri_muaythai,False,False,False,False,,,1019,Muay Thai,0,120000,0,190,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11901,Retiarii_FishingNetsDraw,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical]{/}{/}{nl}Throw the rete at nearby enemies and pull them towards you. Enemies trapped by the rete become momentarily unable to move and receive additional damage from Pierce attacks executed using a One-handed Spear. ,Duration: 7 seconds{nl}Targets: #{CaptionRatio2}#{nl}One-handed Spear Attack Damage: +#{CaptionRatio}#%{nl}Consumes Rete x1,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Retiarii16\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Retiarii16\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 5 * skill.Level;"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value;""]","[""var value = 3 + skill.Level;"", ""return value;""]",,,,,,,,6,icon_warri_fishingnetsdraw,False,False,False,False,"[120013, 120016]",,1020,Pull Rete,0,30000,0,106,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
11902,Retiarii_ThrowingFishingNet,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical]{/}{/}{nl}Throw the rete within a designated range to immobilize the enemies trapped by it. Duration applies as 1/3 for character enemies, and 1/2 for bosses. Enemies trapped by the rete receive additional damage from One-handed Spear Pierce attacks.",Duration: #{CaptionRatio}# seconds{nl}Targets: #{CaptionRatio2}#{nl}One-handed Spear Attack Damage: +#{CaptionRatio3}#%{nl}Consumes Rete x1,"[""var value = 2.5 + skill.Level * 0.5;"", ""return value;""]","[""return 3 + skill.Level;""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Retiarii17\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Retiarii17\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 100"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value""]",,,,,,,6,icon_warri_throwingfishingnet,False,False,False,False,"[120014, 120017]",,1020,Throw Rete,0,30000,0,106,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
11903,Retiarii_DaggerGuard,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Allows you to block when equipping a dagger and increases Block against physical damage. The Dagger Guard buff cancels automatically if you unequip the dagger.,+#{CaptionRatio}#% block against physical damage taken{nl}Duration: 20 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Retiarii3\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Retiarii3\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 10;"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value;""]",,,,,,,,,6,icon_warri_daggerguard,False,False,False,False,"[120003, 120004]",,1020,Dagger Guard,0,30000,0,134,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
11904,Retiarii_TridentFinish,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Pierce enemies all around and deal damage with your spear. Attacking enemies affected by the rete debuff, Iron Hook, or Arrest provides a higher critical rate and prevents evasion.",Skill Factor: #{SkillFactor}#%{nl}Critical Rate: +200%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Retiarii5\"")"", """", ""if (abil != null  &&  \""Retiarii5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_tridentfinish,False,False,False,False,[120005],,1020,Trident Finish,2,10000,0,82,0,0,0.0,15,0.0,0.0,448.0,14.8,7.0,0,1,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11905,Retiarii_EquipDesrption,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Attack enemies all around with the rete to deal damage and reduce their physical defense. Affected character targets become momentarily unable to equip a shield. Disarmed opponents become unable to block and evade.,Skill Factor: #{SkillFactor}#%{nl}Physical Defense: -#{CaptionRatio}#%{nl}Duration: #{CaptionRatio2}# seconds{nl}AoE Attack Ratio: #{SkillSR}#,"[""var value = 25;"", ""return value;""]","[""var value = 5;"", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Retiarii6\"")"", """", ""if (abil != null  &&  \""Retiarii6\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_equipdesrption,False,False,False,False,"[120006, 120007]",,1020,Disarm,0,30000,0,118,0,0,0.0,10,0.0,0.0,555.0,27.799999,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
11906,Retiarii_DaggerFinish,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Leap forward and stab the enemy with your dagger. If the target's HP is at 50% or lower, the attack can deal up to 350% additional damage based on how low their HP is. Deals additional damage to enemies affected by the rete debuff, Iron Hook, and Arrest.",Skill Factor: #{SkillFactor}#%{nl}Critical Rate: +200%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Retiarii8\"")"", """", ""if (abil != null  &&  \""Retiarii8\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_daggerfinish,False,False,False,False,[120008],,1020,Dagger Finish,2,10000,0,83,0,0,0.0,10,0.0,0.0,431.0,21.6,7.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""Rapier"", ""Icon"": ""weapon_rapier""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
11908,Retiarii_BlandirCadena,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Dash towards the enemy over a short distance and pierce twice, then brandish your spear to deal Slash damage. At the last hit, the enemy is thrown in the air. Attacking enemies affected by the rete debuff, Iron Hook, or Arrest applies increased damage and prevents evasion.",Skill Factor: #{SkillFactor}#% x 5{nl}Critical Rate: +200%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Retiarii11\"")"", """", ""if (abil != null  &&  \""Retiarii11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_blandircadena,False,False,False,False,"[120011, 120012]",,1020,Blandir Cadena,3,50000,0,98,0,0,0.0,5,0.0,0.0,170.0,17.0,10.0,0,31,0,"[{""Name"": ""OneHandSpear"", ""Icon"": ""weapon_spear""}, {""Name"": ""OneHandSpearShield"", ""Icon"": ""weapon_shield""}, {""Name"": ""OneHandSpearDagger"", ""Icon"": ""weapon_dagger""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
12001,Hackapell_Skarphuggning,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Aim at the upper half of the enemy and slash.,Skill Factor: #{SkillFactor}#% x 4{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hackapell1\"")"", """", ""if (abil != null  &&  \""Hackapell1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var abil = GetAbility(pc, \""Hackapell10\"")"", ""var value = pc.SR + skill.SklSR"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + abil.Level"", ""}"", """", ""return value""]",,,,6,icon_arch_skarphuggning,False,False,False,False,[314001],,1021,Skarphuggning,5,20000,0,54,0,0,0.0,15,0.0,0.0,87.0,2.9,10.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[8, 6]"
12002,Hackapell_HakkaPalle,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Shout and assume an attacking stance. Increases basic attack speed and makes you immune to being knocked back or knocked down while riding a companion.,Attack Speed: +#{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds,"[""var value = 50 * skill.Level"", ""return value;""]",,,"[""var value = 10 + (skill.Level * 2)"", ""return value""]",,,,,,6,icon_arch_hakkapalle,False,False,False,False,,,1021,Hakka Palle,0,60000,0,168,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
12004,Hackapell_CavalryCharge,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Charge forward and deal damage to enemies you come in contact with. Your physical and magic defense increase momentarily after using Cavalry Charge.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}Physical and Magic Defense: +100%{nl}Duration: 5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hackapell3\"")"", """", ""if (abil != null  &&  \""Hackapell3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_arch_cavalrycharge,False,False,False,False,[314003],,1021,Cavalry Charge,0,20000,0,105,0,0,0.0,15,0.0,0.0,444.0,14.7,5.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[9, 6]"
12005,Hackapell_StormBolt,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Push your sword in with great force to attack. Deals increased damage to Ice-property and frozen enemies. Attacked targets receive increased damage from Slash attacks.,Skill Factor: #{SkillFactor}#% x 3{nl}Debuff Duration: 10 seconds{nl}Slash Attack Damage: +50%{nl}Damage +100% to frozen and Ice-property enemies,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hackapell7\"")"", """", ""if (abil != null  &&  \""Hackapell7\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_stormbolt,False,False,False,False,[314007],,1021,Storm Bolt,0,10000,0,93,0,0,0.0,15,0.0,0.0,126.0,4.2,2.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[6, 7]"
12006,Hackapell_GrindCutter,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Continuously cut down enemies in front of you with a single-handed sword. The skill's AoE attack ratio increases by 10 while the Cavalry Charge buff is active.,Skill Factor: #{SkillFactor}#% x 5{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hackapell9\"")"", """", ""if (abil != null  &&  \""Hackapell9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (IsBuffApplied(pc, \""CavalryCharge_Buff\"") == \""YES\"") {"", ""    value = value + 10"", ""}"", """", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_arch_grindcutter,False,False,False,False,[314009],,1021,Grind Cutter,3,15000,0,67,0,0,0.0,10,0.0,0.0,78.0,3.9,6.0,1,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[8, 6]"
12007,Hackapell_InfiniteAssault,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Rush to attack an enemy and return to your position. Your movement speed increases momentarily after using Infinite Assault.,Skill Factor: #{SkillFactor}#% x 2{nl}Targets: 12{nl}Movement Speed: +#{CaptionRatio}#{nl}Duration: 3 seconds,"[""var value = skill.Level * 3"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hackapell13\"")"", """", ""if (abil != null  &&  \""Hackapell13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_infiniteassault,False,False,False,False,[314013],,1021,Infinite Assault,2,25000,0,105,0,0,0.0,5,0.0,0.0,285.0,28.5,10.0,1,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",2,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[9, 6]"
12008,Hackapell_HelmChopper,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Strike the enemy's head, causing them to become afflicted with [Stun].{nl}{#00113F}If the Frenzy buff is active, the attack range of Helm Chopper increases and Stun duration changes to 4 seconds.{/}",Skill Factor: #{SkillFactor}#% x 2{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hackapell15\"")"", """", ""if (abil != null  &&  \""Hackapell15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_helmchopper,False,False,False,False,[314015],643896,1021,Helm Chopper,3,20000,0,70,0,0,0.0,15,0.0,0.0,180.0,6.0,3.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",0,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""AcrobaticMount_Buff\"") == \""YES\"") {"", """", ""    if (TryGetProp(skill, \""EnableCompanion\"") == \""YES\""  &&  TryGetProp(skill, \""ValueType\"") == \""Attack\"") {"", """", ""        if (IsServerSection() == 1) {"", ""            var acrobaticBuff = GetBuffByName(pc, \""AcrobaticMount_Buff\"")"", ""            var acrobaticBuffLevel = GetBuffArg(acrobaticBuff)"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""            SetExProp(acrobaticBuff, \""ACROBATICMOUNT_SPENDSP\"", Math.floor(value));"", ""        } else {"", ""            var acrobaticBuff = GET_BUFF_BY_NAME_C(\""AcrobaticMount_Buff\"");"", ""            var acrobaticBuffLevel = acrobaticBuff.arg1;"", ""            var acrobaticAddSPRate = acrobaticBuffLevel * 0.05"", ""            value = value *(1 + acrobaticAddSPRate)"", ""        }"", """", ""    }"", """", ""}"", """", ""return Math.floor(value)""]","[9, 6]"
20001,Wizard_EnergyBolt,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic]{/}{/}{nl}Gather powerful magical energy and launch it towards an enemy. Deals 100% more damage to slowed down enemies.,Skill Factor: #{SkillFactor}#% x 2{nl}AoE Attack Ratio: #{SkillSR}#{nl}Casting Time: 0.5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Wizard11\"")"", """", ""if (abil != null  &&  \""Wizard11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_wizar_energybolt,False,False,False,False,[201001],643580,2001,Energy Bolt,0,3000,0,144,0,0,0.0,5,0.0,0.0,224.0,7.4,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20002,Wizard_Lethargy,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Makes an enemy lethargic.,Physical Attack: -#{CaptionRatio}#%{nl}Magic Attack: -#{CaptionRatio}#%{nl}Evasion: -#{CaptionRatio2}#%{nl}Damage from Magic Circles: +#{CaptionRatio3}#%{nl}{#339999}{ol}[Lethargy]{/}{/} Duration: #{CaptionTime}# seconds,"[""var value = skill.Level * 2"", ""var abil = GetAbility(pc, \""Wizard27\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value * (1 + (abil.Level * 0.005))"", ""}"", """", ""return Math.floor(value)""]","[""var value = skill.Level"", ""return value""]","[""var value = skill.Level * 3"", ""return value""]","[""var value = 20;"", ""var Wizard6_abil = GetAbility(pc, 'Wizard6')"", """", ""if (Wizard6_abil != null  &&  1 == Wizard6_abil.ActiveState) {"", ""    value = value + Wizard6_abil.Level * 2"", ""}"", """", ""return value""]",,,,,,6,icon_wizar_lethargy,False,False,False,False,[201017],643581,2001,Lethargy,0,30000,0,224,0,0,0.0,5,0.0,0.0,100.0,0.0,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20004,Wizard_ReflectShield,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Create a protective shield around you that absorbs enemy attacks. 1% of your maximum SP is consumed every time damage is absorbed.,Damage Taken: -#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Wizard26\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Wizard26\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 5 + (skill.Level * 3)"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,"[""var value = 300"", ""return value;""]",,,,,,6,icon_wizar_reflectshield,False,False,False,False,[201016],643583,2001,Magic Shield,0,60000,0,0,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20005,Wizard_EarthQuake,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Earth]{/}{/}{nl}Inflicts damage on an enemy by creating a powerful earthquake in front of you.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Wizard13\"")"", """", ""if (abil != null  &&  \""Wizard13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,1,icon_wizar_earthquake,False,False,False,False,"[201006, 201013]",643584,2001,Earthquake,0,10000,0,156,0,0,0.0,5,0.0,0.0,372.0,12.3,4.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20007,Wizard_MagicMissile,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic]{/}{/}{nl}Attack continuously using magic bullets. New bullets are shot if the attack successfully targets an enemy. Deals 50% more damage to slowed down enemies.,Skill Factor: #{SkillFactor}#% x 3{nl}Bullet Count: 5,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Wizard12\"")"", """", ""if (abil != null  &&  \""Wizard12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_wizar_magicmissile,False,False,True,False,[201008],643586,2001,Magic Missile,5,30000,0,104,0,0,0.0,5,0.0,0.0,100.0,3.3,-99.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20101,Pyromancer_FireBall,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Summons a fireball at the targeted area. Enemies that touch the fireball receive Fire damage. [Fireball] will not hit the same enemies twice. You can summon up to 5 fireballs can be summoned.{nl}{#00113F}Using Storm Dust on Fireball applies Fireball's damage within the range of Storm Dust.{/},Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionRatio}# seconds,"[""var abil = GetAbility(pc, \""Pyromancer29\"")"", ""var value = 5"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + abil.Level"", ""}"", """", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Pyromancer11\"")"", """", ""if (abil != null  &&  \""Pyromancer11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_wizar_fireball,False,False,False,False,"[202001, 202014, 202024]",643587,2002,Fireball,5,15000,0,84,0,0,0.0,15,0.0,0.0,279.0,9.3,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20102,Pyromancer_FireWall,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Creates a wall of flames that continuously damages approaching enemies. Attacked enemies are knocked back.,Skill Factor: #{SkillFactor}#% x 5{nl}Fire Walls: 8{nl}Duration: 15 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Pyromancer12\"")"", """", ""if (abil != null  &&  \""Pyromancer12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_wizar_firewall,False,False,False,False,"[202004, 202015]",643588,2002,Fire Wall,2,30000,0,186,0,0,0.0,15,0.0,0.0,122.0,4.1,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20103,Pyromancer_EnchantFire,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Fire]{/}{/}{nl}Temporarily grants Fire property to your attacks.{nl}{#00113F}Enchant Fire applies to your nearby summons as well.{/},Add. Fire Property Damage: +#{CaptionRatio}#{nl}Fire Property Attack: +#{CaptionRatio2}#{nl}Duration: #{CaptionTime}# seconds,"[""var value = 30 + ((skill.Level - 1) * 5) + ((skill.Level / 5) * (Math.pow(((pc.INT + pc.MNA) * 0.6) ,  0.9)))"", ""var Pyromancer16_abil = GetAbility(pc, 'Pyromancer16');"", """", ""if (Pyromancer16_abil != null) {"", ""    value = value + Pyromancer16_abil.Level"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.MINMATK * 0.1"", ""return Math.floor(value)""]",,"[""return 300;""]",,,,,,2,icon_wizar_enchantfire,False,False,True,False,[202017],643589,2002,Enchant Fire,0,60000,0,280,0,0,0.0,15,0.0,0.0,100.0,0.0,3.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20105,Pyromancer_FirePillar,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Summons a pillar of fire to inflict damage on enemies.{nl}{#00113F}Using Raise on Fire Pillar causes it to deal more hits.{/},Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Pyromancer15\"")"", """", ""if (abil != null  &&  \""Pyromancer15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_wizar_firepillar,False,False,False,False,[202011],643592,2002,Fire Pillar,0,45000,0,233,0,0,0.0,10,0.0,0.0,161.0,8.1,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20106,Pyromancer_HellBreath,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Attack by continuously fuming fire towards enemies. Deals continuous Fire damage to enemies. Chance of receiving additional Fire damage momentarily. While casting Hell Breath, you receive melee attack-blocking effect.",Skill Factor: #{SkillFactor}#% per 0.3 seconds{nl}Consumes #{CaptionRatio}# SP per 0.5 seconds{nl}Consumes Pyrite x#{SpendItemCount}#,"[""var value = 20"", ""var bylvCorrect = pc.Lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""value = value * (1 + bylvCorrect)"", ""var abil = GetAbility(pc, 'Pyromancer4')"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value * 1.3"", ""}"", """", ""return Math.floor(value)""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Pyromancer14\"")"", """", ""if (abil != null  &&  \""Pyromancer14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,2,icon_wizar_hellbreath,False,False,False,False,"[202013, 202016]",643593,2002,Hell Breath,0,45000,0,0,0,0,0.0,10,0.0,0.0,163.0,8.2,3.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20107,Pyromancer_FlameGround,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Creates a magic circle of flames around you. Deals continuous Fire damage to enemies within the magic circle.,Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Duration: 8 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Pyromancer26\"")"", """", ""if (abil != null  &&  \""Pyromancer26\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_wizar_flame_ground,False,False,True,False,"[202022, 202021]",643591,2002,Flame Ground,0,30000,0,205,0,0,0.0,15,0.0,0.0,120.0,4.0,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20109,Pyromancer_Prominence,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Summons Prominence. The summoned Prominence roams within the designated location, inflicting damage to targets.",Skill Factor: #{SkillFactor}#%{nl}Creates 4 Prominence{nl}Attacks #{CaptionRatio}# times,"[""var abil = GetAbility(pc, \""Elementalist26\"")"", ""var value = 4"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + abil.Level"", ""}"", """", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Elementalist14\"")"", """", ""if (abil != null  &&  \""Elementalist14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_wizar_prominence,False,False,False,False,[207001],643871,2002,Prominence,0,60000,0,254,0,0,0.0,5,0.0,0.0,621.0,62.099998,50.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20201,Cryomancer_IceBolt,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Ice]{/}{/}{nl}Cast an arrow of ice that inflicts damage and has a chance of freezing the enemy.,Skill Factor: #{SkillFactor}#% x 2{nl}{#339999}{ol}[Freeze]{/}{/} Duration: 5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cryomancer11\"")"", """", ""if (abil != null  &&  \""Cryomancer11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,4,icon_wizar_icebolt,False,False,False,False,"[203001, 203011]",643594,2003,Ice Bolt,0,5000,0,145,0,0,0.0,15,0.0,0.0,146.0,4.9,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20202,Cryomancer_IciclePike,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Ice]{/}{/}{nl}Create ice spikes from the ground in a line to inflict damage. Has a chance of freezing enemies.{nl}(Cannot freeze Boss Monsters, 10% chance of freezing in PVP.)",Skill Factor: #{SkillFactor}#%{nl}{#339999}{ol}[Freeze]{/}{/} Duration: 5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cryomancer12\"")"", """", ""if (abil != null  &&  \""Cryomancer12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,4,icon_wizar_iciclepike,False,False,False,False,[203004],643595,2003,Ice Pike,3,20000,0,116,0,0,0.0,15,0.0,0.0,244.0,8.1,-999.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20203,Cryomancer_IceWall,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Ice]{/}{/}{nl}Creates a wall of ice that confines an enemy with a chance of freezing nearby enemies.,Skill Factor: #{SkillFactor}#%{nl}Ice Wall Tiles: #{CaptionRatio}#{nl}{#339999}{ol}[Freeze]{/}{/} Duration: 5 seconds{nl}Ice Wall Duration: 15 seconds,"[""return 1 + skill.Level * 1""]",,,,"[""var sklFactor;"", """", ""if (skillOwner.ClassName == 'PC') {"", ""    var atkType = skill.AttackType;"", ""    var attribute = skill.Attribute;"", ""    var atkTypebyItem = GetSumOfEquipItem(skillOwner, atkType);"", ""    var attributebyItem = GetSumOfEquipItem(skillOwner, attribute);"", ""    sklFactor = skill.SklFactor + (skill.Level - 1) * skill.SklFactorByLevel + atkTypebyItem + attributebyItem;"", ""    return Math.floor(sklFactor);"", ""} else {"", ""    sklFactor = skill.SklFactor + (skill.Level - 1) * skill.SklFactorByLevel;"", ""    return Math.floor(sklFactor);"", ""}"", """"]",,,,,4,icon_wizar_icewall,False,False,False,False,[203020],643596,2003,Ice Wall,0,50000,0,237,0,0,0.0,15,0.0,0.0,343.0,11.4,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20204,Cryomancer_IceBlast,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Ice]{/}{/}{nl}Deals damage to frozen or chilled enemies, and enemies near the Ice Wall.",Skill Factor on Frozen Targets: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cryomancer13\"")"", """", ""if (abil != null  &&  \""Cryomancer13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,4,icon_wizar_iceblast,False,False,False,False,"[203007, 203022]",643597,2003,Ice Blast,3,20000,0,128,0,0,0.0,10,0.0,0.0,297.0,14.9,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20205,Cryomancer_SubzeroShield,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Ice]{/}{/}{nl}Create a curtain of ice for defense. If an enemy attack is successfully blocked, the damage received is reduced in half and the attacker is frozen.",Duration: 25 seconds{nl}Chance to {#339999}{ol}[Freeze]{/}{/}: #{CaptionRatio2}#%{nl}{#339999}{ol}[Freeze]{/}{/} Duration: #{CaptionRatio}# seconds,"[""var value = 3;"", ""var abil = GetAbility(pc, \""Cryomancer7\"")"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    value = value + abil.Level * 0.5"", ""}"", """", ""return value""]","[""var value = 10 + skill.Level * 5"", ""var abilCryomancer9 = GetAbility(pc, \""Cryomancer9\"");"", """", ""if (abilCryomancer9 != null  &&  TryGetProp(abilCryomancer9, \""ActiveState\"") == 1) {"", ""    value = Math.floor(value * (1 + abilCryomancer9.Level * 0.05));"", ""}"", """", ""return value;""]",,,,,,,,4,icon_wizar_subzeroshield,False,False,False,False,"[203018, 203015]",643833,2003,Subzero Shield,0,40000,0,243,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20207,Cryomancer_SnowRolling,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic] - [Ice]{/}{/}{nl}Ride an enormous snowball and crush any enemies in your way.{nl}{#00113F}If there is a Heavy Gravity skill nearby, enemies will not be knocked down after Snow Rolling.{/}",Skill Factor: #{SkillFactor}#%{nl}Targets: #{CaptionRatio}#{nl}Duration: 10 seconds,"[""var value = skill.Level * 2"", ""return Math.floor(value);""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cryomancer20\"")"", """", ""if (abil != null  &&  \""Cryomancer20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,4,icon_wizar_snowrolling,False,False,False,False,"[203010, 203023]",643599,2003,Snow Rolling,0,40000,0,224,0,0,0.0,10,0.0,0.0,186.0,9.3,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20208,Cryomancer_FrostPillar,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Ice]{/}{/}{nl}Summons a tree of ice on the ground that freezes and damages enemies nearby.,Skill Factor: #{SkillFactor}#%{nl}Ice Tree Duration: #{CaptionTime}# seconds{nl}Consumes Cryorite x#{SpendItemCount}#,,,,"[""var value = 5 + skill.Level * 1;"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cryomancer23\"")"", """", ""if (abil != null  &&  \""Cryomancer23\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,4,icon_wizar_attractpillar,False,False,False,False,[203021],643600,2003,Frost Pillar,0,45000,0,224,0,0,0.0,5,0.0,0.0,110.0,11.0,3.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20301,Psychokino_PsychicPressure,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Soul]{/}{/}{nl}Concentrate on the tip of your hand to inflict continuous damage with psychokinesis. Inflicts 50% more damage to Mutant-type enemies. Chance to stun enemies.{nl}{#00113F}If the skill hits an Ice Wall, the wall releases ice fragments.{/}",Skill Factor: #{SkillFactor}#%{nl}Targets: #{CaptionRatio}#{nl}Consumes #{CaptionRatio3}# SP per second{nl}50% chance of inflicting Stun,"[""return skill.Level + 4""]",,"[""var value = 42"", ""var bylvCorrect = pc.Lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""value = value * (1 + bylvCorrect)"", ""var abil = GetAbility(pc, 'Psychokino10')"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value * 1.2"", ""}"", """", ""return Math.floor(value)""]",,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Psychokino12\"")"", """", ""if (abil != null  &&  \""Psychokino12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,8,icon_wizar_psychicpressure,False,False,False,False,"[204004, 204017]",643601,2004,Psychic Pressure,0,25000,0,0,0,0,0.0,15,0.0,0.0,159.0,5.3,2.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20303,Psychokino_Swap,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Soul]{/}{/}{nl}Swaps your position with that of a selected enemy. The swapped enemy becomes immobilized.,Targets: #{CaptionRatio}#{nl}Maximum Distance: 20{nl}Debuff Duration: 2 seconds,"[""var value = skill.Level"", ""return value;""]",,,,,,,,,8,icon_wizar_swap,False,False,False,False,,643603,2004,Swap,0,20000,0,205,0,0,0.0,15,0.0,0.0,100.0,0.0,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20304,Psychokino_Teleportation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Soul]{/}{/}{nl}Teleport to a random location.,Maximum Teleport Distance: #{CaptionRatio}#,"[""return 100 + skill.Level * 10;""]",,,,,,,,,8,icon_wizar_teleportation,False,False,False,False,,643604,2004,Teleportation,2,10000,0,163,0,0,0.0,15,0.0,0.0,100.0,0.0,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20305,Psychokino_MagneticForce,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Strike]{/}{/}{nl}Inflict damage on multiple enemies by pulling them to a targeted area, causing them to collide with each other. Deals 50% additional damage to Mutant-type monsters.",Skill Factor: #{SkillFactor}#%{nl}Targets: 10,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Psychokino13\"")"", """", ""if (abil != null  &&  \""Psychokino13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_wizar_magneticforce,False,False,False,False,"[204011, 204007]",643605,2004,Magnetic Force,0,25000,0,193,0,0,0.0,15,0.0,0.0,421.0,13.9,12.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[1, 9]"
20306,Psychokino_Raise,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Soul]{/}{/}{nl}Lift nearby enemies up into the air. Enemies in the air are temporarily detected as a Flying-type and cannot evade attacks. Removes nearby [Heavy Gravity] tiles when casted.,Targets: #{CaptionRatio}#{nl}Duration: 5 seconds,"[""var value = skill.Level;"", ""return value;""]",,,,,,,,,8,icon_wizar_raise,False,False,False,False,,643606,2004,Raise,0,30000,0,187,0,0,0.0,10,0.0,0.0,100.0,0.0,5.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20307,Psychokino_GravityPole,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsPVPServer(pc) == 1) {"", ""    basicCoolDown = basicCoolDown + 15000;"", ""}"", """", ""return Math.floor(basicCoolDown);""]",{#993399}{ol}[Magic] - [Soul]{/}{/}{nl}Creates a gravity field in front of you in a line that pulls nearby enemies into it. Deals 50% additional damage to Mutant-type monsters.,Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Targets: #{CaptionRatio}#{nl}Consumes #{CaptionRatio3}# SP per second{nl}Maximum Duration: 10 seconds,"["""", ""if (IsPVPServer(pc) == 1) {"", ""    return skill.Level * 1"", ""}"", """", ""return 10 + skill.Level * 1""]",,"[""var value = 47"", ""var bylvCorrect = pc.Lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""value = value * (1 + bylvCorrect)"", ""var abil = GetAbility(pc, 'Psychokino20')"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value * 1.2"", ""}"", """", ""return Math.floor(value)""]",,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Psychokino8\"")"", """", ""if (abil != null  &&  \""Psychokino8\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,8,icon_wizar_gravity_pole,False,False,False,False,"[204010, 204012, 204015, 204018]",643607,2004,Gravity Pole,0,30000,0,0,0,0,0.0,5,0.0,0.0,163.0,16.299999,1.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20308,Psychokino_HeavyGravity,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Soul]{/}{/}{nl}Increases the gravitational force on the targeted area to inflict psychokinesis damage. Flying-type monsters within the affected area are changed to ground-type, and Raise tiles around the affected area are removed. Deals 50% additional damage to Mutant-type monsters.",Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Duration: 5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Psychokino21\"")"", """", ""if (abil != null  &&  \""Psychokino21\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,8,icon_wizar_heavygravity,False,False,False,False,"[204019, 204020]",,2004,Heavy Gravity,0,30000,0,205,0,0,0.0,10,0.0,0.0,111.0,5.6,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20601,Elementalist_Electrocute,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Lightning]{/}{/}{nl}Release a surge of electricity to attack enemies in front of you.{nl}{#00113F}Electrocute's number of targets is doubled if used within the range of Storm Calling.{/},Skill Factor: #{SkillFactor}#% x 4{nl}Targets: #{CaptionRatio}#,"[""var value = 1 + (2 + skill.Level * 0.5)"", ""return Math.floor(value);""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Elementalist20\"")"", """", ""if (abil != null  &&  \""Elementalist20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,5,icon_wizar_electrocute,False,False,False,False,[207007],643633,2011,Electrocute,0,10000,0,173,0,0,0.0,15,0.0,0.0,159.0,0.0,50.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20602,Elementalist_StoneCurse,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Temporarily petrifies an enemy. The petrified enemy takes additional damage from Fire and Psychokinesis property attacks and reduced damage from other properties.,Duration: #{CaptionTime}# seconds{nl}Number of Targets: #{CaptionRatio}#{nl}+50% increased damage from Fire and Psychokinesis property attack,"[""var value = 5;"", ""var abil = GetAbility(pc, 'Elementalist2')"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    value = value + abil.Level;"", ""}"", """", ""return value""]",,,"[""return 3 + 2 * skill.Level;""]",,,,,,6,icon_wizar_stonecurse,False,False,False,False,[207013],643634,2011,Stone Curse,0,60000,0,243,0,0,0.0,10,0.0,0.0,100.0,0.0,50.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20603,Elementalist_Hail,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Ice]{/}{/}{nl}Drop chunks of ice to continuously inflict damage on enemies.,Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionTime}# seconds,,,,"[""var value = 10"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Elementalist17\"")"", """", ""if (abil != null  &&  \""Elementalist17\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,4,icon_wizar_hail,False,False,False,False,"[207004, 207015]",643635,2011,Hail,0,50000,0,243,0,0,0.0,15,0.0,0.0,96.0,3.2,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20605,Elementalist_Meteor,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Drop a meteor on a targeted area to inflict damage on enemies.,Skill Factor: #{SkillFactor}#%{nl}Casting Time: 2 seconds{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Elementalist11\"")"", """", ""if (abil != null  &&  \""Elementalist11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,2,icon_wizar_meteor,False,False,False,False,"[207010, 207028]",643637,2011,Meteor,0,40000,0,224,0,0,0.0,5,0.0,0.0,1497.0,149.699997,30.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20609,Elementalist_StormDust,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Earth]{/}{/}{nl}Creates a sandstorm on the targeted area. Enemies in range of [Storm Dust] take continuous Earth-property damage. Flying-type enemies take half the damage.,Skill Factor: #{SkillFactor}#% per 0.3 seconds{nl}Targets: #{CaptionRatio2}#{nl}Duration: 5.4 seconds,,"[""return 12 + skill.Level * 2""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Elementalist27\"")"", """", ""if (abil != null  &&  \""Elementalist27\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,1,icon_wizar_stormdust,False,False,False,False,"[207025, 207026, 207027]",,2011,Storm Dust,0,20000,0,187,0,0,0.0,15,0.0,0.0,103.0,3.4,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20610,Elementalist_FireClaw,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Send out a wave of fire all around to attack your enemies.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Elementalist31\"")"", """", ""if (abil != null  &&  \""Elementalist31\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_wizar_fireclaw,False,False,False,False,[207029],643876,2011,Fire Claw,0,20000,0,194,0,0,0.0,15,0.0,0.0,232.0,7.7,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20611,Elementalist_ElementalEssence,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Fire]{/}{/}{nl}Grants a buff that increases the damage bonus of property attacks when attacking an enemy's weakness.,Offensive Property Effects: +#{CaptionRatio}#%{nl}Duration: 20 seconds,"[""var value = skill.Level * 10"", ""return value""]",,,,,,,,,2,icon_wizar_elementalessence,False,False,False,False,,643877,2011,Elemental Essence,0,20000,0,205,0,0,0.0,10,0.0,0.0,100.0,0.0,3.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20701,Sorcerer_Summoning,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Summon the devil of the card inserted in your grimoire. The attack and defense of the summoned devil will be set according to your character's level, and will increase by 5% for each star on the corresponding card. The grimoire can only equip Devil-type monster cards.",Summons a Devil-type boss monster{nl}Devil's Additional Attack: #{CaptionRatio}#%{nl}Devil's Additional Defense: #{CaptionRatio}#%{nl}Duration: 900 seconds,"[""var value = 5 + (skill.Level * 2);"", ""return value;""]",,,,,,,,,0,icon_wizar_summon,False,False,False,False,[208014],643608,2006,Summoning,0,60000,0,215,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20703,Sorcerer_Obey,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Ride the summoned devil from the Grimoire and take control of it. While mounted on the devil, your damage taken decreases.",Enables use of the devil's skills,,,,,,,,,,0,icon_wizar_abey,False,False,False,False,[208011],,2006,Riding,0,10000,0,74,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20704,Sorcerer_Morph,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Mutates the summoned devil from the Grimoire to the devil that is equipped as a secondary card in the Grimoire while maintaining its previous stats.,Transform to another Devil-type boss that is added to the Grimoire,,,,,,,,,,0,icon_wizar_morph,False,False,False,False,[208014],,2006,Morph,0,30000,0,187,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20706,Sorcerer_SummonFamiliar,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""basicCoolDown = basicCoolDown - (skill.Level * 1000)"", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Summon a familiar. The familiar rushes to an enemy that you attack or one that attacks you, and then explodes. The explosion deals damage based on the summon's attack.",Summon Skill Factor: #{SkillFactor}#%{nl}Summons 5 Familiars{nl}Duration: 60 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sorcerer11\"")"", """", ""if (abil != null  &&  \""Sorcerer11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_summonfamiliar,False,False,False,False,"[208001, 208002]",643609,2006,Summon Familiar,0,40000,0,209,0,0,0.0,15,0.0,0.0,62.0,2.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20707,Sorcerer_SummonSalamion,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Summon the fire devil Salamion. It follows its master and attacks enemies.,Salamion's Level: #{CaptionRatio2}#{nl}Salamion's Additional Attack: #{CaptionRatio}#%{nl}Salamion's Additional Defense #{CaptionRatio}#%{nl}Duration: 300 seconds,"[""var value = 5 + (skill.Level * 3);"", ""return value;""]","[""return pc.Lv""]",,,,,,,,0,icon_wizar_summonsalamion,False,False,False,False,"[208006, 208007, 208013]",643610,2006,Summon Salamion,0,60000,0,243,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20708,Sorcerer_SummonServant,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Summon a servant. The servant will grant beneficial effects while following its master. The number of buffs increases proportionally to the level of [Summon Servant].,Applies up to #{CaptionRatio}# times{nl}1st effect [+ AoE attack ratio]{nl}2nd effect [+ SP recovery speed]{nl}3rd effect [STA recovery]{nl}4th effect [+ Magic Defense]{nl}5th effect [+ Dark property attack]{nl}Consumes Empty Spellbook x#{SpendItemCount}#,"[""var value = skill.Level"", """", ""if (value > 5) {"", ""    value = 5"", ""}"", """", ""return value""]",,,,,,"[""return skill.SpendItemBaseCount;""]",,,0,icon_wizar_summonservant,False,False,False,False,[208009],,2006,Summon Servant,0,60000,0,233,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20709,Sorcerer_Evocation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Summons the demon from the secondary card equipped on the Grimoire to attack enemies. The damage inflicted is increased in proportion to the caster's SPR. The Evocation buff is applied to the demon created by Summoning when damage is dealt with Evocation, causing it to ignore 20% of enemy physical/magic defense.",Skill Factor: #{SkillFactor}#%{nl}Evocation Buff Duration: #{CaptionRatio2}# seconds,,"[""var value = 5 + 5 * skill.Level;"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sorcerer12\"")"", """", ""if (abil != null  &&  \""Sorcerer12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_evocation,False,False,False,False,[208008],643834,2006,Evocation,0,55000,0,226,0,0,0.0,5,0.0,0.0,553.0,55.299999,10.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20710,Sorcerer_Desmodus,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Earth]{/}{/}{nl}Summon and release blood-sucking bats against enemies to inflict damage. Affected enemies receive the Vampirism debuff, which increases the damage dealt by summons.",Skill Factor: #{SkillFactor}#% x 2{nl}Regular Summon Damage: +#{CaptionRatio}#%{nl}Summoning Demon Damage: +#{CaptionRatio2}#%{nl}{#339999}{ol}[Vampirism]{/}{/} Duration: 15 seconds,"[""var value = skill.Level * 4"", ""return value""]","[""var value = skill.Level * 6"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sorcerer14\"")"", """", ""if (abil != null  &&  \""Sorcerer14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,1,icon_wizar_desmodus,False,False,False,False,[208010],643835,2006,Desmodus,2,25000,0,166,0,0,0.0,10,0.0,0.0,206.0,10.3,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20802,Chronomancer_Samsara,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Manipulate time to make a monster reappear on the same spot it was defeated. You must use it near monsters for it to have effect. Reincarnated monsters cannot be reincarnated again.,Duration: #{CaptionTime}# seconds{nl}Consumes #{SpendItemCount}# Time Crystal Fragment,,,,"[""return 5 + skill.Level * 1""]",,,"[""return skill.SpendItemBaseCount;""]",,,6,icon_wizar_samsara,False,False,False,False,"[209003, 209012, 209016]",643617,2008,Reincarnate,0,120000,0,271,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,3,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20803,Chronomancer_Stop,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown  - ((skill.Level - 1) * 5000);"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Stops time of monsters within the targeted area. Enemies do not receive damage when time is stopped.,Magic Duration: 10 seconds{nl}Consumes Time Crystal Fragment x#{SpendItemCount}#,,,,,,,"[""return skill.SpendItemBaseCount;""]",,,6,icon_wizar_stop,False,False,False,False,"[209004, 209010]",643618,2008,Stop,0,100000,0,271,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20804,Chronomancer_Slow,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Controls time to decrease the movement speed of enemies.,Movement Speed: -#{CaptionRatio}#{nl}Magic Circle Duration: 10 seconds{nl}{#339999}{ol}[Slow]{/}{/} Duration: 10 seconds,"[""return Math.floor(8 + skill.Level * 1.5);""]",,,,,,,,,6,icon_wizar_slow,False,False,False,False,[209011],643619,2008,Slow,0,15000,0,187,0,0,0.0,15,0.0,0.0,100.0,0.0,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20806,Chronomancer_BackMasking,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Control time in an area, temporarily changing it back to its previous state.{nl}{#00113F}If you use Backmasking inside a magic circle, the circle's duration will rewind.{/}",Backmasking Range: #{CaptionRatio}#{nl}Unable to use Backmasking nearby for 10 seconds{nl}Consumes #{SpendItemCount}# Time Crystal,"[""return 50 + skill.Level * 10""]",,,,,,"[""return skill.SpendItemBaseCount;""]",,,6,icon_wizar_backmasking,False,False,False,False,,643621,2008,Backmasking,0,120000,0,308,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20807,Chronomancer_Pass,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Earth]{/}{/}{nl}Reduces the cooldown of your skills and those of your party members. The individual skill cooldowns cannot be reduced again until given the skill is used.,Cooldown: -#{CaptionTime}# seconds{nl}Consumes Time Crystal x#{SpendItemCount}#,,,,"[""var value = skill.Level * 5"", ""return value""]",,,"[""return skill.SpendItemBaseCount;""]",,,1,icon_wizar_pass,False,False,False,False,"[209009, 209013]",,2008,Pass,0,50000,0,280,0,0,0.0,5,100.0,10.0,100.0,0.0,4.0,10,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20808,Chronomancer_QuickCast,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Reduces skill casting time. The reduced casting time will not surpass 90% of the original casting time.,Casting Time: -#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""var value = 5 * skill.Level"", """", ""if (value > 90) {"", ""    value = 90"", ""}"", """", ""return value""]",,,"[""var value = 300"", ""return value;""]",,,,,,6,icon_wizar_quickcast,False,False,False,False,[209015],,2008,Quick Cast,0,60000,0,280,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20809,Chronomancer_TimeForward,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Earth]{/}{/}{nl}Increases the cooldown time of a random skill belonging an enemy within range.,Cooldown: +#{CaptionRatio}# seconds{nl}Targets: 5,"[""var value = skill.Level * 3"", ""return value;""]",,,,,,,,,1,icon_wizar_timeforward,False,False,False,False,[209014],643874,2008,Time Forward,0,50000,0,224,0,0,0.0,15,100.0,10.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20901,Necromancer_GatherCorpse,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic]{/}{/}{nl}Releases evil energy into your opponent. The corpse parts of monsters affected by the evil energy can be collected once defeated.,Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionRatio2}# seconds{nl}AoE Attack Ratio: #{SkillSR}#,,"[""var value = 5 + skill.Level"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Necromancer11\"")"", """", ""if (abil != null  &&  \""Necromancer11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_wizar_gathercorpse,False,False,False,False,[210001],643622,2009,Gather Corpse,3,10000,0,99,0,0,0.0,1,0.0,0.0,100.0,0.0,3.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20902,Necromancer_CreateShoggoth,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#DD5500}{ol}[Buff] - [Magic] - [Physical]{/}{/}{nl}Create a Shoggoth with stats based on the cards that are placed in the Necronomicon. The attack and defense of the Shoggoth are affected by the skill level. The Shoggoth's attack and defense increase by 5% for each star on the card. Only Beast, Plant and Mutant-type cards can be placed in the Necronomicon.",Shoggoth Attack: +#{CaptionRatio}#%{nl}Shoggoth Defense: +#{CaptionRatio2}#%{nl}Consumes Corpse Parts x#{CaptionTime}#{nl}Duration: 900 seconds,"[""var value = 10 + (skill.Level * 5);"", ""return Math.floor(value);""]","[""var value = 10 + (skill.Level * 5);"", ""return Math.floor(value);""]",,"[""var value = 30"", ""return value""]",,,,,,6,icon_wizar_shoggoth,False,False,False,False,"[210006, 210008, 210011]",,2009,Create Shoggoth,0,60000,0,215,0,0,0.0,5,0.0,0.0,100.0,0.0,50.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1, 6]"
20903,Necromancer_FleshCannon,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic]{/}{/}{nl}Throw corpse parts on a targeted area to attack nearby enemies. Affected enemies receive the Necromancer Bane debuff.,Skill Factor: #{SkillFactor}#% x 16{nl}AoE Attack Ratio: #{SkillSR}#{nl}#{CaptionRatio2}#% chance of applying 5 stacks of Necromancer Bane{nl}Consumes Corpse Parts x#{CaptionRatio}#,"[""var value = 15"", ""return value""]","[""var value = 25 + skill.Level * 5"", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Necromancer12\"")"", """", ""if (abil != null  &&  \""Necromancer12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_wizar_fleshcannon,False,False,False,False,"[210002, 210004]",643623,2009,Flesh Cannon,0,35000,0,191,0,0,0.0,5,0.0,0.0,76.0,3.8,5.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20904,Necromancer_FleshHoop,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic]{/}{/}{nl}Encircle yourself with corpse parts that damage nearby enemies. Grants a chance to deal additional damage to decaying enemies. Affected enemies receive the Necromancer Bane debuff.,Skill Factor: #{SkillFactor}#% x 15{nl}Necromancer Bane Debuff: #{CaptionRatio2}# stacks{nl}Duration: 15 seconds{nl}Consumes Corpse Parts x#{CaptionRatio}#,"[""var value = 5"", ""return value""]","[""var value = skill.Level"", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Necromancer15\"")"", """", ""if (abil != null  &&  \""Necromancer15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_wizar_fleshhoop,False,False,False,False,"[210003, 210005]",643624,2009,Flesh Hoop,0,25000,0,168,0,0,0.0,15,0.0,0.0,266.0,8.8,50.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
20906,Necromancer_Disinter,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Collect the corpse parts left over from where an enemy died.,Target Range: #{CaptionRatio}#,"[""var value = 70;"", ""return value""]",,,,,,,,,6,icon_wizar_disinter,False,False,False,False,,,2009,Disinter,3,24000,0,142,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
20908,Necromancer_CorpseTower,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#DD5500}{ol}[Buff] - [Magic] - [Physical]{/}{/}{nl}Build a cursed tower made of corpse parts on a targeted area. You can raise a maximum of one tower.,Summon Attack: #{CaptionRatio3}#%{nl}Corpse Tower Duration: 30 seconds{nl}Health: #{CaptionTime}#{nl}Consumes Corpse Parts x#{CaptionRatio2}#,,"[""var value = 7"", ""return Math.floor(value);""]","[""var value = 100 + (skill.Level * 4)"", ""return value;""]","[""var value = 30;"", ""return value""]",,,,,,6,icon_wizar_corpsetower,False,False,False,False,[210009],643626,2009,Corpse Tower,0,50000,0,196,0,0,0.0,10,0.0,0.0,100.0,0.0,5.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1, 6]"
20909,Necromancer_RaiseDead,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#DD5500}{ol}[Buff] - [Magic] - [Physical]{/}{/}{nl}Summon a skeleton soldier made from corpse parts. The skeleton soldier engages in combat and follows its master. You can summon a maximum of 5 skeletons (soldier, archer, mage).",Summons 1 Skeleton Soldier{nl}Summon Attack: #{CaptionRatio3}#%{nl}Consumes Corpse Parts x#{CaptionRatio2}#{nl}Duration: 300 seconds{nl}Maximum Level: 5,,"[""var value = 5"", ""return Math.floor(value);""]","[""var value = 100 + (skill.Level * 10)"", ""return value;""]",,,,,,,6,icon_wizar_raisedead,False,False,False,False,"[210010, 210017]",,2009,Raise Dead,5,60000,0,107,0,0,0.0,5,0.0,0.0,100.0,0.0,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1, 6]"
20911,Necromancer_RaiseSkullarcher,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#DD5500}{ol}[Buff] - [Magic] - [Physical]{/}{/}{nl}Summon a skeleton archer made from corpse parts. The archer engages in combat and follows its master. You can summon a maximum of 5 skeletons (soldier, archer, mage).",Summons 1 Skeleton Archer{nl}Summon Attack: #{CaptionRatio3}#%{nl}Consumes Corpse Parts x#{CaptionRatio2}#{nl}Duration: 300 seconds{nl}Maximum Level: 5,,"[""var value = 5"", ""return Math.floor(value);""]","[""var value = 100 + (skill.Level * 10)"", ""return value;""]",,,,,,,6,icon_wizar_raiseskullarcher,False,False,False,False,[210013],,2009,Raise Skull Archer,5,60000,0,107,0,0,0.0,5,0.0,0.0,100.0,0.0,5.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1, 6]"
20912,Necromancer_RaiseSkullwizard,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#DD5500}{ol}[Buff] - [Magic] - [Physical]{/}{/}{nl}Summon a skeleton mage made from corpse parts. The skeleton mage engages in combat and follows its master. You can summon a maximum of 5 skeletons (soldier, archer, mage).",Summons 1 Skeleton Mage{nl}Summon Attack: #{CaptionRatio3}#%{nl}Consumes Corpse Parts x#{CaptionRatio2}#{nl}Duration: 300 seconds{nl}Maximum Level: 5,,"[""var value = 5"", ""return Math.floor(value);""]","[""var value = 100 + (skill.Level * 10)"", ""return value;""]",,,,,,,6,icon_wizar_raiseskullwizard,False,False,False,False,[210022],643875,2009,Raise Skull Mage,5,60000,0,121,0,0,0.0,5,0.0,0.0,100.0,0.0,5.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1, 6]"
21001,Alchemist_Combustion,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Explodes an item registered in the Alchemy Workshop to damage nearby enemies.,Skill Factor: #{SkillFactor}#%{nl}Targets: 5,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Alchemist11\"")"", """", ""if (abil != null  &&  \""Alchemist11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_wizar_combustion,False,False,False,False,[211001],643837,2005,Combustion,0,32000,0,206,0,0,0.0,15,0.0,0.0,823.0,27.200001,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21002,Alchemist_Dig,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#DD5500}{ol}[Buff] - [Magic] - [Physical]{/}{/}{nl}Dig up the ground to collect materials required for alchemy.,Acquire #{CaptionRatio}# material(s){nl}The types of material obtained depends upon where [Dig] was used.,"[""var value = skill.Level;"", ""return value;""]",,,,,,,,,6,icon_wizar_dig,False,False,False,False,,,2005,Dig,0,15000,0,65,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1, 6]"
21003,Alchemist_Roasting,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#DD5500}{ol}[Buff] - [Magic] - [Physical]{/}{/}{nl}Opens a shop to roast and enhance gems. Reduces the penalty of an enhanced gem.,Gem Penalty Level Reduction: #{CaptionRatio}#,"[""var value = skill.Level * 1"", ""return value""]",,,,,,,,,6,icon_wizar_roasting,False,False,False,False,,,2005,Gem Roasting,0,0,0,0,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1, 6]"
21005,Alchemist_Tincturing,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#DD5500}{ol}[Buff] - [Magic] - [Physical]{/}{/}{nl}Extract fluid from herbs to create different potions.,Create a potion through a recipe,,,,,,,,,,6,icon_wizar_tincturing,False,False,False,False,"[211004, 211005, 211006]",,2005,Tincturing,0,0,0,0,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1, 6]"
21006,Alchemist_MagnumOpus,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#DD5500}{ol}[Buff] - [Magic] - [Physical]{/}{/}{nl}Use pluvial of alchemy to create a new item.,Possible Combination: #{CaptionRatio}#X#{CaptionRatio}#,"[""var value = 2 + skill.Level;"", """", ""if (value > 10) {"", ""    value = 10;"", ""}"", """", ""return Math.floor(value)""]",,,,,,,,,6,icon_wizar_magnumopus,False,False,False,False,,,2005,Magnum Opus,0,0,0,0,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1, 6]"
21007,Alchemist_ItemAwakening,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#DD5500}{ol}[Buff] - [Magic] - [Physical]{/}{/}{nl}Opens a shop to awaken hidden abilities in items. The items gain new stats, but they lose Potential.",Stats gained vary from weapon to weapon{nl}Max. level 1,,,,,,,,,,6,icon_wizar_itemawakening,False,False,False,False,,,2005,Item Awakening,0,60000,0,0,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1, 6]"
21008,Alchemist_AlchemisticMissile,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Soul]{/}{/}{nl}Concentrate magic energy and fire it at enemies.,Skill Factor: #{SkillFactor}#% x 2,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Alchemist9\"")"", """", ""if (abil != null  &&  \""Alchemist9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,8,icon_wizar_alchemisticmissile,False,False,False,False,[211008],,2005,Alchemistic Missile,3,15000,0,116,0,0,0.0,15,0.0,0.0,274.0,9.1,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21009,Alchemist_SprinkleHPPotion,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Sprinkle an HP Potion registered in the Alchemy Workshop around to restore your HP and that of your party members. You can only register Alchemist-made potions.,Recovery: #{CaptionRatio}#,"[""var numberArg1 = 395 // @rjgtav. using Lv 15 Condensed HP Potion"", ""var hpValue = numberArg1 * 7"", ""hpValue = hpValue * 8"", ""var sprinkleHP = hpValue * (skill.Level * 0.1)"", ""return sprinkleHP;""]",,,,,,,,,6,icon_wizar_sprinklehppotion,False,False,False,False,,643872,2005,Sprinkle HP Potion,0,30000,0,243,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21010,Alchemist_SprinkleSPPotion,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Sprinkle an SP Potion registered in the Alchemy Workshop around to restore your SP and that of your party members. You can only register Alchemist-made potions.,Recovery: #{CaptionRatio}#,"[""var numberArg1 = 131 // @rjgtav. using Lv 15 Condensed SP Potion"", ""var spValue = numberArg1 * 7"", ""spValue = spValue * 8"", ""var sprinkleSP = spValue * (skill.Level * 0.1)"", ""return sprinkleSP;""]",,,,,,,,,6,icon_wizar_sprinklesppotion,False,False,False,False,,643873,2005,Sprinkle SP Potion,0,30000,0,243,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21101,Featherfoot_BloodBath,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Poison]{/}{/}{nl}Stab the enemy with a bone knife. If the enemy is a Beast-, Devil- or Insect-type, or affected by the Enervation debuff, blood will spew out that recovers some of your HP.",Skill Factor: #{SkillFactor}#%{nl}{#339999}{ol}[Bleeding]{/}{/} Duration: 5 seconds{nl}Recovers #{CaptionRatio2}#% of damage,,"[""var value = 10"", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Featherfoot3\"")"", """", ""if (abil != null  &&  \""Featherfoot3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,7,icon_wizar_bloodbath,False,False,False,False,[213003],,2016,Blood Bath,0,30000,0,205,0,0,0.0,15,0.0,0.0,196.0,6.5,-99.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21102,Featherfoot_BloodSucking,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Poison]{/}{/}{nl}Attack and absorb the life force from a Beast-, Devil- or Insect-type enemy, or an enemy affected by the Enervation debuff, while recovering part of your HP.{nl}{#00113F}Blood Sucking affects cursed enemies of all types. To cursed enemies of the already-susceptible types, the effects increase by 20%.{/}",Skill Factor: #{SkillFactor}#%{nl}Blood Sucking: #{CaptionRatio2}#%{nl}Consumes #{CaptionTime}# SP per 0.4 seconds,,"[""var value = 50"", ""return value;""]",,"[""var value = 40 + skill.Level * 2"", ""return value;""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Featherfoot4\"")"", """", ""if (abil != null  &&  \""Featherfoot4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,7,icon_wizar_bloodsucking,False,False,False,False,[213004],,2016,Blood Sucking,0,60000,0,0,0,0,0.0,15,0.0,0.0,241.0,8.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21103,Featherfoot_BonePointing,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Poison]{/}{/}{nl}Summon a carved, pointed bone called a 'Kundela'. The Kundela points towards enemies in range, attacking them with bone shards and cursing them.",Skill Factor: #{SkillFactor}#%{nl}Bone Pointing Duration: #{CaptionRatio2}# seconds{nl}{#339999}{ol}[Curse]{/}{/} Duration: 7 seconds,,"[""var value = 35"", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Featherfoot5\"")"", """", ""if (abil != null  &&  \""Featherfoot5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,7,icon_wizar_bonepointing,False,False,False,False,[213005],,2016,Bone Pointing,0,50000,0,243,0,0,0.0,15,0.0,0.0,347.0,11.5,4.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21104,Featherfoot_Ngadhundi,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Poison]{/}{/}{nl}Stab an enemy with a cursed knife carved from a bone. Stabbed enemies are afflicted with [Corruption]. Enemies affected by Corruption receive additional damage from physical and Fire-property attacks.,Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionRatio2}# seconds{nl}AoE Attack Ratio: #{SkillSR}#,,"[""var value = 10 + skill.Level * 2"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Featherfoot7\"")"", """", ""if (abil != null  &&  \""Featherfoot7\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,7,icon_wizar_ngadhundi,False,False,False,False,[213007],,2016,Ngadhundi,0,10000,0,159,0,0,0.0,15,0.0,0.0,532.0,17.6,3.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21105,Featherfoot_Kurdaitcha,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Put on shoes made of hair and blood. Walk while leaving bloody footprints on the ground, dealing damage and temporarily cursing any enemies who come into contact with them.",Skill Factor: #{SkillFactor}#%{nl}Kurdaitcha Maximum Duration: #{CaptionRatio}# seconds{nl}Movement Speed: -#{CaptionRatio2}#{nl}{#339999}{ol}[Curse]{/}{/} Duration: 7 seconds,"[""var value = 10"", ""return value;""]","[""var value = 15"", ""var abil = GetAbility(pc, 'Featherfoot14')"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    value = value * (1 + abil.Level * 0.01);"", ""}"", """", ""return value;""]",,,"[""var sklFactor;"", """", ""if (skillOwner.ClassName == 'PC') {"", ""    var atkType = skill.AttackType;"", ""    var attribute = skill.Attribute;"", ""    var atkTypebyItem = GetSumOfEquipItem(skillOwner, atkType);"", ""    var attributebyItem = GetSumOfEquipItem(skillOwner, attribute);"", ""    sklFactor = skill.SklFactor + (skill.Level - 1) * skill.SklFactorByLevel + atkTypebyItem + attributebyItem;"", ""    return Math.floor(sklFactor);"", ""} else {"", ""    sklFactor = skill.SklFactor + (skill.Level - 1) * skill.SklFactorByLevel;"", ""    return Math.floor(sklFactor);"", ""}"", """"]",,,,,0,icon_wizar_kurdaitcha,False,False,False,False,[213014],,2016,Kurdaitcha,0,30000,0,205,0,0,0.0,10,0.0,0.0,181.0,9.1,4.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21106,Featherfoot_KundelaSlash,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Poison]{/}{/}{nl}Use the Kundela to attack enemies. Cursed enemies receive additional damage.{nl}{#00113F}If the skill hits an Ice Wall, the wall releases ice fragments.{/}",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}Increased damage to enemies under {#339999}{ol}[Curse]{/}{/},,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Featherfoot11\"")"", """", ""if (abil != null  &&  \""Featherfoot11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,7,icon_wizar_kundelaslash,False,False,False,False,"[213011, 213017]",,2016,Kundela Slash,3,15000,0,112,0,0,0.0,10,0.0,0.0,392.0,19.6,3.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21107,Featherfoot_Levitation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Buff] - [Magic] - [Poison]{/}{/}{nl}For a brief period of time, your character levitates. While levitating, you are immune to melee attacks but receive additional damage from missile attacks.{nl}{#00113F}When an Upper Level magic circle is beneath you, you levitate higher.{/}",Duration: #{CaptionRatio}# seconds{nl}Receives additional damage from missile attacks,"[""var value = 30;"", ""return value;""]",,,,,,,,,7,icon_wizar_levitation,False,False,False,False,[213018],,2016,Levitation,0,60000,0,280,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21109,Featherfoot_Enervation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Poison]{/}{/}{nl}Temporarily inflicts a curse spell on enemies within range to cause additional damage when hit. The additional damage is based on the Featherfoot's magic attack and Enervation skill factor.,Skill Factor: #{SkillFactor}#%{nl}Applies 10 times{nl}Duration: 30 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Featherfoot20\"")"", """", ""if (abil != null  &&  \""Featherfoot20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,7,icon_wizar_enervation,False,False,False,False,[213020],,2016,Enervation,0,30000,0,205,0,0,0.0,5,0.0,0.0,82.0,8.2,0.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21201,Warlock_PoleofAgony,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Summon a pillar of darkness that constantly inflicts pain on enemies who come in contact with it. Targets continue to receive momentary damage even after moving away from the pillar, but that damage weakens over time.",Skill Factor: #{SkillFactor}#% per 0.3 seconds{nl}Magic Circle Duration: 6.6 seconds{nl}Additional damage for #{CaptionRatio2}# seconds,,"[""var value = 14"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = 7"", ""}"", """", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Warlock2\"")"", """", ""if (abil != null  &&  \""Warlock2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_poleofagony,False,False,True,False,"[212002, 212017]",643838,2015,Pole of Agony,0,50000,0,243,0,0,0.0,10,0.0,0.0,149.0,7.5,4.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21202,Warlock_Invocation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Gain the Invocation buff, which allows you to summon evil spirits from the death of enemies. The summoned spirits remain in the field, damaging enemies who come into contact with them. You can summon a maximum of 10 spirits.",Spirit Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionTime}# seconds{nl}Spirit Duration: 35 seconds,,,,"[""var value = 40"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Warlock4\"")"", """", ""if (abil != null  &&  \""Warlock4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_invocation,False,False,False,False,[212014],643839,2015,Invocation,0,60000,0,247,0,0,0.0,15,0.0,0.0,243.0,8.1,4.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21203,Warlock_DarkTheurge,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Summon evil spirits to surround you, protecting you and attacking enemies upon contact. Deals increased damage to enemies under the Fear debuff.",Spirit Skill Factor: #{SkillFactor}#% x #{CaptionRatio2}#{nl}Duration: 30 seconds{nl}Increases damage to enemies under {#339999}{ol}[Fear]{/}{/} by 50%,,"[""var value = 1"", ""var abil = GetAbility(pc, \""Warlock18\"");"", """", ""if (abil != null  &&  TryGetProp(abil, \""ActiveState\"") == 1) {"", ""    value = value * 2"", ""}"", """", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Warlock7\"")"", """", ""if (abil != null  &&  \""Warlock7\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_darktheurge,False,False,False,False,"[212007, 212008, 212018]",643840,2015,Dark Theurge,0,20000,0,170,0,0,0.0,15,0.0,0.0,139.0,4.6,4.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21204,Warlock_Mastema,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Summon the devil of hatred to attack enemies. Enemies attacked by this magic are more likely to target you, and will temporarily take extra damage from Holy-property attacks.",Skill Factor: #{SkillFactor}#%{nl}Stigma Duration: 20 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Warlock9\"")"", """", ""if (abil != null  &&  \""Warlock9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_mastema,False,False,False,False,"[212009, 212010, 212013, 212017]",643841,2015,Mastema,0,40000,0,230,0,0,0.0,10,0.0,0.0,438.0,21.9,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21205,Warlock_EvilSacrifice,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Sacrifice the enemies in a targeted area to your evil spirits. The evil spirits will move towards the targeted area to attack the enemies.,Maximum Level: 1,,,,,,,,,,0,icon_wizar_evilsacrifice,False,False,False,False,,,2015,Evil Sacrifice,0,0,0,130,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21207,Warlock_Sabbath,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Make your summoned evil spirits follow you in a line. Their damage increases proportionally to the skill level.,Additional Evil Spirits Damage: #{CaptionRatio}#%{nl}Max Duration: 10 seconds{nl}Requires summoned Evil Spirits,"[""var value = TryGetProp(skill, \""Level\"") * 10;"", ""return value;""]",,,,,,,,,0,icon_wizar_sabath,False,False,False,False,,,2015,Ghastly Trail,0,20000,0,168,0,0,0.0,15,500.0,100.0,100.0,0.0,50.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21208,Warlock_DemonScratch,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Create a magic circle in front of you that summons the demon's arm. The summoned demon disappears after attacking forwards.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Warlock15\"")"", """", ""if (abil != null  &&  \""Warlock15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_demonscratch,False,False,False,False,"[212015, 212017]",,2015,Demon Scratch,2,20000,0,163,0,0,0.0,5,500.0,100.0,427.0,42.700001,50.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21301,RuneCaster_Hagalaz,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic]{/}{/}{nl}Inflicts powerful damage to enemies in the targeted area. Attacked enemies reflect magic, dealing additional damage to other enemies and reducing their magic defense. Deals 30% more damage to Slow enemies.",Skill Factor: #{SkillFactor}#%{nl}Magic Defense: -#{CaptionRatio}#%{nl}Consumes Rune Stone x1{nl}Casting Time: 2 seconds,"[""var value = skill.Level * 5"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""RuneCaster3\"")"", """", ""if (abil != null  &&  \""RuneCaster3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_wizar_hagalaz,False,False,False,False,[214003],,2017,Rune of Destruction,0,40000,0,215,0,0,0.0,10,0.0,0.0,703.0,70.300003,10.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21302,RuneCaster_Isa,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Ice]{/}{/}{nl}Throw an ice sphere to deal damage.{nl}{#00113F}Debuffed enemies attacked with Rune of Ice become frozen for 3 seconds.{/},Skill Factor: #{SkillFactor}#% x 2{nl}Consumes Rune Stone x1,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""RuneCaster9\"")"", """", ""if (abil != null  &&  \""RuneCaster9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,4,icon_wizar_isa,False,False,False,False,[214009],,2017,Rune of Ice,0,15000,0,166,0,0,0.0,15,0.0,0.0,442.0,14.6,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21303,RuneCaster_Thurisaz,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic]{/}{/}{nl}Turn you or an ally into a giant. Giant players are considered Large-type and have their HP and defense increased. Limited usage of skills.{nl}{#00113F}If there is a Shoggoth among your summons when using this skill, the Shoggoth also receives the effects of Rune of Giants for 30 seconds.{/}","Giant Size Duration: #{CaptionTime}# seconds{nl}Defense, Maximum HP: +#{CaptionRatio}#%{nl}Movement Speed: +#{CaptionRatio2}#{nl}Consumes Rune Stone x1{nl}Casting Time: 2 seconds","[""return 20""]","[""return 20""]",,"[""return 30 * skill.Level""]",,,,,,6,icon_wizar_thurisaz,False,False,False,False,,,2017,Rune of Giants,0,120000,0,327,0,0,0.0,15,0.0,0.0,100.0,0.0,4.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21304,RuneCaster_Tiwaz,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Charges a divine magic attack that is unleashed in a straight line.,Skill Factor: #{SkillFactor}#% x 5{nl}Consumes Rune Stone x1{nl}Casting Time: 2 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""RuneCaster5\"")"", """", ""if (abil != null  &&  \""RuneCaster5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_wizar_tiwaz,False,False,False,False,[214005],,2017,Rune of Justice,0,30000,0,196,0,0,0.0,15,0.0,0.0,178.0,5.9,10.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21305,RuneCaster_Algiz,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic]{/}{/}{nl}Applies an effect that reduces the damage you receive while casting skills.,Damage Taken While Casting: -#{CaptionRatio}#%{nl}Duration: 300 seconds{nl}Consumes Rune Stone x1{nl}Casting Time: 2 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""RuneCaster10\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""RuneCaster10\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 2"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return value;""]",,,,,,,,,6,icon_wizar_algiz,False,False,False,False,"[214010, 214011]",,2017,Rune of Protection,0,60000,0,271,0,0,0.0,10,0.0,0.0,100.0,0.0,4.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21306,RuneCaster_Stan,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Earth]{/}{/}{nl}Send five giant rocks falling from the sky to deal damage down below.,Skill Factor: #{SkillFactor}#%{nl}Consumes Rune Stone x1,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""RuneCaster12\"")"", """", ""if (abil != null  &&  \""RuneCaster12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,1,icon_wizar_stan,False,False,False,False,[214012],643878,2017,Rune of Rock,0,40000,0,224,0,0,0.0,5,0.0,0.0,277.0,13.9,30.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21401,Sage_Portal,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Memorize your current location or create a portal for you or your party members to be able to use. If a location is being saved, it records the coordinates of your current position before going on cooldown, you must wait for the cooldown to end before you are then able to open a portal.",Saveable Portals: #{CaptionRatio}#{nl}Portal Cooldown: #{CaptionTime}# minutes{nl}Portal Duration: 15 seconds,"[""var value = 3"", ""var abil = GetAbility(pc, \""Sage1\"")"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    value = value + abil.Level"", ""}"", """", ""return value;""]",,,"[""var value = 30 - (skill.Level - 1)"", ""return value;""]",,,,,,6,icon_wizar_portal,False,False,False,False,"[216001, 216016, 216017]",,2014,Portal,0,0,0,0,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21403,Sage_MicroDimension,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic]{/}{/}{nl}Distorts space into a small size to attack enemies. Deals 50% more damage to Slow enemies.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sage2\"")"", """", ""if (abil != null  &&  \""Sage2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_wizar_microdimension,False,False,False,False,"[216002, 216008, 216011]",,2014,Micro Dimension,3,15000,0,118,0,0,0.0,15,0.0,0.0,351.0,11.6,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21404,Sage_UltimateDimension,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic]{/}{/}{nl}Distorts space into a large size to deal damage on a targeted range. Deals 50% more damage to Slow enemies.,Skill Factor: #{SkillFactor}#%{nl}Duration: 1.5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sage3\"")"", """", ""if (abil != null  &&  \""Sage3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_wizar_ultimatedimension,False,False,False,False,"[216003, 216004, 216009, 216012]",,2014,Ultimate Dimension,0,40000,0,223,0,0,0.0,15,0.0,0.0,97.0,3.3,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21405,Sage_Blink,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Leave behind an apparition on your location and you get teleported randomly to a different place. The apparition remains for a period of time and receives damage from the monsters in your stead.,Apparition Duration: #{CaptionTime}# seconds,,,,"[""var value = skill.Level * 2;"", ""return value""]",,,,,,6,icon_wizar_blink,False,False,False,False,"[216005, 216014]",,2014,Blink,0,30000,0,224,0,0,0.0,15,0.0,0.0,100.0,0.0,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21408,Sage_MissileHole,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}For a period of time, grants an effect that can minimize damage from missile attacks and magic bullet attacks for you and your party members.",Duration: #{CaptionTime}# seconds,,,,"[""var value = 5 + (skill.Level * 0.5);"", ""return value""]",,,,,,6,icon_wizar_missilehole,False,False,False,False,[216013],,2014,Missile Hole,0,60000,0,299,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21409,Sage_PortalShop,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Set up a Portal Shop. By learning the Portal skill, allies can move to locations that you have saved.",Up to 3 saved locations may be used,,,,,,,,,,6,icon_wizar_portalshop,False,False,False,False,,,2014,Portal Shop,0,0,0,0,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21410,Sage_DimensionCompression,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic]{/}{/}{nl}Compresses the space around a single enemy, dealing damage. Quick Cast has no effect, but the longer the skill is charged, the more damage is dealt. Nearby enemies are pulled in. Deals 30% more damage to Slow enemies.",Skill Factor: #{SkillFactor}#% x 4{nl}Maximum Charge Time: 3 seconds{nl}Damage can be increased by up to 2x{nl}Gathers a maximum of 15 enemies,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sage10\"")"", """", ""if (abil != null  &&  \""Sage10\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_wizar_dimensioncompression,False,False,False,False,[216010],,2014,Dimension Compression,0,20000,0,171,0,0,0.0,5,0.0,0.0,194.0,9.7,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21411,Sage_HoleOfDarkness,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Summons a hole on the ground leading to another dimension. Enemies within range of the hole are momentarily sucked in and disappear. When the hole dissipates, enemies within range receive damage, with those that disappeared receiving additional damage.",Skill Factor: #{SkillFactor}#%{nl}Magic Circle Duration: 3 seconds{nl}Disappearing Targets: #{CaptionRatio}#{nl}#{CaptionRatio2}#% additional damage to disappearing targets,"[""var value = 10"", ""return Math.floor(value)""]","[""var value = 20"", ""return Math.floor(value)""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sage15\"")"", """", ""if (abil != null  &&  \""Sage15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_holeofdarkness,False,False,False,False,[216015],,2014,Hole of Darkness,0,60000,0,261,0,0,0.0,5,0.0,0.0,1064.0,106.400002,0.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21601,Shadowmancer_ShadowThorn,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Sharp thorns rise from within the shadow of an enemy, dealing damage. Shadow Thorn cannot be blocked or evaded.",Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Shadowmancer1\"")"", """", ""if (abil != null  &&  \""Shadowmancer1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_shadowthorn,False,False,False,False,"[217001, 217004]",,2019,Shadow Thorn,4,15000,0,90,0,0,0.0,15,0.0,0.0,357.0,11.8,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21602,Shadowmancer_ShadowConjuration,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Cast your shadow outwards, dealing damage to enemies within it.",Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Shadowmancer2\"")"", """", ""if (abil != null  &&  \""Shadowmancer2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_shadowconjuration,False,False,False,False,"[217002, 217005]",,2019,Shadow Conjuration,0,15000,0,178,0,0,0.0,15,0.0,0.0,515.0,17.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21603,Shadowmancer_ShadowPool,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Drift into the shadows and hide within the ground. Enemies cannot attack you while in this state.,Duration: #{CaptionTime}# seconds,,,,"[""var value = skill.Level * 2"", ""return value""]",,,,,,0,icon_wizar_shadowpool,False,False,False,False,[217009],,2019,Shadow Pool,0,50000,0,261,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21604,Shadowmancer_Hallucination,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Summon a shadow that looks exactly like you to take damage in your place. The shadow's HP is a set percentage of your maximum HP.,Shadow HP Percentage: #{CaptionRatio}#%{nl}Duration: 20 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Shadowmancer10\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Shadowmancer10\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 25 + (skill.Level * 5)"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value""]",,,,,,,,,0,icon_wizar_hallucination,False,False,False,False,[217010],,2019,Hallucination ,0,60000,0,280,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21605,Shadowmancer_ShadowCondensation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Extract shadows from surrounding enemies and compress them into small beads. The beads explode after 3 seconds and inflict damage to enemies.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Shadowmancer3\"")"", """", ""if (abil != null  &&  \""Shadowmancer3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_wizar_shadowcondensation,False,False,False,False,[217003],,2019,Shadow Condensation,0,40000,0,224,0,0,0.0,10,0.0,0.0,617.0,30.9,3.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21606,Shadowmancer_ShadowFatter,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Nail the shadow of enemies to the ground to prevent them from moving.,Duration: #{CaptionTime}# seconds,,,,"[""var value = 3 + skill.Level"", ""return value""]",,,,,,0,icon_wizar_shadowfatter,False,False,False,False,,,2019,Shadow Fetter,0,25000,0,177,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21607,Onmyoji_FireFoxShikigami,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Summon a Fire Fox Shikigami. The summoned Shikigami follows you while automatically attacking nearby enemies. Enemies attacking you will be targeted first by the Shikigami. Additional critical rate applies to your magic Fire-property attacks while the Shikigami is following you.,Skill Factor: #{SkillFactor}#%{nl}Critical Rate of Fire-property Magic: +#{CaptionRatio}#%{nl}Duration: 60 seconds{nl}Consumes Paper Doll x#{SpendItemCount}#,"[""var value = 20 + skill.Level * 5"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Onmyoji1\"")"", """", ""if (abil != null  &&  \""Onmyoji1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,2,icon_wizar_firefoxshikigami,False,False,False,False,"[218001, 218002, 218003]",,2020,Fire Fox Shikigami,0,60000,0,238,0,0,0.0,15,0.0,0.0,100.0,3.3,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21608,Onmyoji_GreenwoodShikigami,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Earth]{/}{/}{nl}Summon a Tree Shikigami. The summoned Shikigami sprouts from the ground, dealing continuous damage and pulling in nearby enemies. Once fully grown, the Shikigami disappears, slowing down enemies around it.{nl}{#00113F}Enemies hit by the Shikigami have their Slow debuff extended by 5 seconds.{/}",Skill Factor: #{SkillFactor}#% x 9{nl}Targets: 10{nl}Consumes Paper Doll x#{SpendItemCount}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Onmyoji4\"")"", """", ""if (abil != null  &&  \""Onmyoji4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""var count = skill.SpendItemBaseCount;"", ""var abil = GetAbility(pc, 'Onmyoji16')"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    count = count * 2;"", ""}"", """", ""return count;""]",,,1,icon_wizar_greenwoodshikigami,False,False,False,False,"[218004, 218005]",,2020,Greenwood Shikigami,0,35000,0,205,0,0,0.0,15,0.0,0.0,93.0,3.1,0.0,2,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21609,Onmyoji_WhiteTigerHowling,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic]{/}{/}{nl}Release the roar of the White Tiger (Metal Shikigami) to instill fear in nearby enemies. Enemies affected by the roar receive damage and become struck with [Fear]. Damage increases by 50% on Plant-type enemies.,Skill Factor: #{SkillFactor}#% x 3{nl}Targets: #{CaptionRatio}#{nl}Consumes Paper Doll x#{SpendItemCount}#,"[""var value = 4 + skill.Level"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Onmyoji6\"")"", """", ""if (abil != null  &&  \""Onmyoji6\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,6,icon_wizar_whitetigerhowling,False,False,False,False,"[218006, 218007, 218008]",,2020,Howling White Tiger,0,15000,0,165,0,0,0.0,15,0.0,0.0,284.0,9.4,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21610,Onmyoji_WaterShikigami,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]",{#993399}{ol}[Magic] - [Ice]{/}{/}{nl}Invoke the power of the Water Shikigami to summon strong water currents and attack your enemies.,Skill Factor: #{SkillFactor}#% x 5{nl}Consumes Paper Doll x#{SpendItemCount}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Onmyoji9\"")"", """", ""if (abil != null  &&  \""Onmyoji9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,4,icon_wizar_watershikigami,False,False,False,False,[218009],,2020,Water Shikigami,0,20000,0,177,0,0,0.0,15,0.0,0.0,179.0,6.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21611,Onmyoji_GenbuArmor,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Buff] - [Magic] - [Ice]{/}{/}{nl}Use the armor of Genbu (Water Shikigami) to generate a protective field. Attacks received consume SP instead of HP. If you are low on SP, the protective field disappears. Does not stack with Magic Shield. SP does not restore naturally while the skill is in use. Chance of neutralizing Ice-property attacks.",SP Consumption Ratio: #{CaptionRatio}#%{nl}Duration: #{CaptionRatio2}# seconds{nl}Consumes Paper Doll x#{SpendItemCount}#,"[""var value = 100 - ((skill.Level - 1) * 10)"", ""return value""]","[""var value = 60"", ""return value""]",,,,,"[""return skill.SpendItemBaseCount;""]",,,4,icon_wizar_genbuarmor,False,False,False,False,[218012],,2020,Genbu Armor,0,20000,0,0,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21612,Onmyoji_Toyou,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Earth]{/}{/}{nl}Invoke the power of the Earth Shikigami and unleash its force on the ground below your enemies, dealing damage. Knocked down enemies receive half the damage, but have a chance of being immobilized.",Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Duration: 3 seconds{nl}Targets: 15{nl}10% chance of inflicting {#339999}{ol}[Hold]{/}{/} on fallen enemies{nl}Consumes Paper Doll x#{SpendItemCount}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Onmyoji13\"")"", """", ""if (abil != null  &&  \""Onmyoji13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,1,icon_wizar_toyou,False,False,False,False,"[218013, 218015]",,2020,Toyou,0,20000,0,158,0,0,0.0,10,0.0,0.0,210.0,10.5,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21613,Shadowmancer_InfernalShadow,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Separates an enemy from their shadow. When the shadow is attacked, the enemy's body receives a portion of the damage dealt. This effect disappears when the shadow's HP reaches zero. If the target is a player character, the effect is removed if they touch their shadow. Damage transferred is reduced to 25% if the target is a boss.",Duration: #{CaptionTime}# sec{nl}Damage Ratio: #{CaptionRatio}#%,"[""return 20 + (skill.Level -1) * 20;""]",,,"[""return 5 + skill.Level * 2;""]",,,,,,0,icon_wizar_infernalshadow,False,False,False,False,,,2019,Infernal Shadow,0,30000,0,187,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21614,Onmyoji_YinYangConsonance,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Generates a strong energy from the harmony of Yin and Yang, which deals quick, alternating blows of Dark (Yin) and Holy (Yang) property damage. Casting of the skill cannot be interrupted, and the caster remains immune to knockback and knockdown while Yin and Yang are in harmony.",Skill Factor: #{SkillFactor}#% per 0.1 seconds{nl}Maximum Duration: 4 seconds{nl}Targets: 15{nl}Consumes Paper Doll x#{SpendItemCount}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Onmyoji19\"")"", """", ""if (abil != null  &&  \""Onmyoji19\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,0,icon_wizar_harmonyofyinandyang,False,False,False,False,"[218019, 218020]",,2020,Yin Yang Harmony,0,60000,0,280,0,0,0.0,5,0.0,0.0,81.0,8.1,-99.0,3,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21701,Bokor_Hexing,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Curse an enemy to decrease their magic defense and prevent recovery.,Magic Defense: -#{CaptionRatio}#%{nl}Hexing Duration: #{CaptionTime}# seconds,"[""var value = 3 + (skill.Level * 0.5)"", ""return value;""]",,,"[""var value = skill.Level * 1 + 14;"", ""return value;""]",,,,,,0,icon_cler_hexing,False,False,False,False,[404015],643737,2022,Hexing,0,10000,0,147,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21702,Bokor_Effigy,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Deals damage to cursed enemies from afar. Deals additional damage on every third casting if used in succession.,Skill Factor: #{SkillFactor}#%{nl}Attack bonus on 3rd hit: #{CaptionRatio}#x to #{CaptionRatio2}#x,"[""var value = 1.60 + 0.07 * (skill.Level-1);"", ""return value""]","[""var value = 2.3 + 0.09 * (skill.Level-1)"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Bokor11\"")"", """", ""if (abil != null  &&  \""Bokor11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_cler_effigy,False,False,False,False,"[404001, 404010]",643738,2022,Effigy,3,5000,0,108,0,0,0.0,15,0.0,0.0,288.0,9.6,2.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21703,Bokor_Tetmamakla,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Lure zombies by using the skull of a monkey to attack enemies for a period of time.,Requires a summoned zombie{nl}Maximum Level: 1,,,,,,,,,,0,icon_cler_tetmamakla,False,False,False,False,,,2022,Tet Mamak La,0,0,0,37,0,0,0.0,1,0.0,0.0,100.0,0.0,50.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21704,Bokor_Zombify,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Applies a debuff to nearby enemies. Debuffed enemies return as zombies after they die. Zombie stats are based on those of the killed enemy. Zombie HP and STR increase according to the caster's INT and SPR.,Summons up to 8 Zombies{nl}Zombie damage increases with level,,,,,,,,,,0,icon_cler_zombierize,False,False,False,False,"[404008, 404009]",643739,2022,Zombify,0,25000,0,177,0,0,0.0,15,0.0,0.0,100.0,0.0,50.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21705,Bokor_Mackangdal,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Dark]{/}{/}{nl}Throw a talisman to an ally that temporarily suppresses pain. The ally is invulnerable to any damage when the talisman is active, but receives the accumulated damage at once when the effect ends.",Invincibility Duration: #{CaptionTime}# seconds,,,,"[""var value = 10 + skill.Level"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = value * 0.7"", ""}"", """", ""return Math.floor(value);""]",,,,,,0,icon_cler_mackandal,False,False,False,False,,643740,2022,Mackangdal,0,60000,0,293,0,0,0.0,10,0.0,0.0,100.0,0.0,50.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
21706,Bokor_BwaKayiman,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Dark]{/}{/}{nl}Instruct your summoned zombies to celebrate. The zombies will deal little damage to anything they touch. The zombies' STR stat applies as additional damage.,Summon Skill Factor: #{SkillFactor}#%{nl}Maximum Duration: 10 seconds{nl}Requires summoned Zombies,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Bokor18\"")"", """", ""if (abil != null  &&  \""Bokor18\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_cler_bwakayiman,False,False,False,False,"[404005, 404013]",643741,2022,Bwa Kayiman,0,10000,0,168,0,0,0.0,10,0.0,0.0,139.0,7.0,50.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21707,Bokor_Samdiveve,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Dark]{/}{/}{nl}Plant a glyph on the ground symbolizing Baron Samedi, the loa of death. Increases the maximum HP and movement speed of you and your zombies nearby the glyph. Only half of the effect applies to you.",Maximum HP: +#{CaptionRatio}#{nl}Movement Speed: +#{CaptionRatio2}#{nl}Duration: #{CaptionTime}# seconds{nl}Glyph Duration: 15 seconds,"[""var value = (pc.MHP - pc.MHP_BM) * (0.05 * skill.Level)"", ""return Math.floor(value)""]","[""var value = 3 + skill.Level * 1"", """", ""if (IsPVPServer(pc) == 1  ||  zone == 'pvp_Mine') {"", ""    value = value * 0.5"", ""}"", """", ""return value""]",,"[""var value = 60 + skill.Level * 10"", ""return value""]",,,,,,0,icon_cler_samdiveve,False,False,False,False,,643742,2022,Samediveve,0,50000,0,263,0,0,0.0,5,0.0,0.0,100.0,0.0,50.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
21708,Bokor_Damballa,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Dark]{/}{/}{nl}Detonates zombies near the targeted area and deals damage to nearby enemies.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Bokor12\"")"", """", ""if (abil != null  &&  \""Bokor12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,0,icon_cler_damballa,False,False,False,False,"[404007, 404012]",643744,2022,Damballa,0,10000,0,174,0,0,0.0,5,0.0,0.0,447.0,44.700001,2.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21802,Daoshi_StormCalling,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic]{/}{/}{nl}Install a charm that calls upon a furious storm. It activates when coming in contact with an enemy, and the enemies within its range get attacked once, then receive additional damage from Lightning-property attacks.",Storm Skill Factor: #{SkillFactor}#%{nl}Lightning Attack Damage: +#{CaptionRatio2}#%{nl}Storm Duration: #{CaptionTime}# seconds{nl}Consumes Strange Yellow Paper x2,,"[""var value = skill.Level * 5"", ""return Math.floor(value)""]",,"[""var value = 3 + skill.Level"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Daoshi16\"")"", """", ""if (abil != null  &&  \""Daoshi16\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_stormcalling,False,False,False,False,"[416016, 416017]",,2021,Storm Calling,0,25000,0,185,0,0,0.0,10,0.0,0.0,303.0,10.0,1.0,2,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21803,Daoshi_BegoneDemon,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Instantly activates the spell contained inside the installed charm. Creeping Death and Tri-Disaster explode to attack nearby enemies.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Daoshi9\"")"", """", ""if (abil != null  &&  \""Daoshi9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_begonedemon,False,False,False,False,[416009],,2021,Begone Demon,0,10000,0,205,0,0,0.0,1,0.0,0.0,504.0,16.700001,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21804,Daoshi_TriDisaster,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Install a charm that increases vulnerability to Fire, Ice and Lightning properties. Enemies near the charm receive more damage from Fire, Ice and Lightning attacks. When the charm explodes, affected enemies receive damage of those three properties.","Charm Duration: #{CaptionTime}# seconds{nl}+#{CaptionRatio}#% damage received from Fire, Ice and Lightning properties{nl}Consumes Strange Yellow Paper x2","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Daoshi19\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Daoshi19\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 5"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return Math.floor(value);""]",,,"[""var value = 18 * skill.Level"", ""return value;""]",,,,,,6,icon_cler_threedisasters,False,False,False,False,[416019],,2021,Tri-disaster Charm,0,30000,0,177,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,2,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21805,Daoshi_CreepingDeath,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Lightning]{/}{/}{nl}Install a Creeping Death Charm that moves slowly forward. Creeping Death deals continuous damage to the targets coming in contact with it while moving. Deals additional damage when exploding via Begone Demon.,Skill Factor: #{SkillFactor}#% x #{CaptionRatio}#{nl}Consumes Strange Yellow Paper x2,"[""var value = skill.Level * 4"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Daoshi18\"")"", """", ""if (abil != null  &&  \""Daoshi18\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,5,icon_cler_energywave,False,False,False,False,[416018],,2021,Creeping Death Charm,3,35000,0,134,0,0,0.0,15,0.0,0.0,147.0,0.0,1.0,3,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21806,Daoshi_DivinePunishment,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Lightning]{/}{/}{nl}Deal damage to punish a single target. Damage increases proportionally to charging time.,Skill Factor: #{SkillFactor}#%{nl}Consumes Strange Yellow Paper x3,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Daoshi11\"")"", """", ""if (abil != null  &&  \""Daoshi11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,5,icon_cler_divinepunishment,False,False,False,False,"[416011, 416014]",,2021,Divine Punishment,0,50000,0,221,0,0,0.0,10,0.0,0.0,1639.0,82.0,1.0,3,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21807,Daoshi_ElevateMagicSquare,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Creates a magic circle which allows other magic circles in front of you to affect Flying-type enemies.,Duration: 12 seconds{nl}Consumes Strange Yellow Paper x3,,,,,,,,,,6,icon_cler_elevatemagicsquare,False,False,False,False,,,2021,Upper Level,3,20000,0,130,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,3,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
21808,Daoshi_PhantomEradication,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Lightning]{/}{/}{nl}Summon a group of talismans behind you and send them forward to attack your enemies.,Skill Factor: #{SkillFactor}#% x 8{nl}Targets: 15{nl}Consumes Strange Yellow Paper x3,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Daoshi13\"")"", """", ""if (abil != null  &&  \""Daoshi13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,5,icon_cler_phantomeradication,False,False,False,False,[416013],,2021,Eradication,3,30000,0,130,0,0,0.0,5,0.0,0.0,69.0,6.9,10.0,3,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
21809,Daoshi_LightningCharm,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Activate a charm containing the power of lightning. Every Taoist skill you use gains a chance of additional Lightning-property attack.,Additional Attack Damage: #{CaptionRatio}#%{nl}Duration: 30 seconds{nl}Requires Strange Yellow Paper x1{nl}Maximum Level: 1,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Daoshi15\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Daoshi15\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 50"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return value""]",,,,,,,,,6,icon_wizar_lightningcharm,False,False,False,False,[416015],,2021,Lightning Charm,0,30000,0,187,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
30001,Archer_Multishot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Quickly fires a number of arrows at the targeted area.,Skill Factor: #{SkillFactor}#% x #{CaptionRatio}#,"[""var value = 10;"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Archer11\"")"", """", ""if (abil != null  &&  \""Archer11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_doubleshot,False,False,False,False,[301001],643642,3001,Multi Shot,2,25000,0,117,0,0,0.0,5,0.0,0.0,68.0,2.3,0.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30004,Archer_SwiftStep,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Allows you to attack while moving quickly. Momentarily increases your movement speed and evasion when you attack.,Evasion: +#{CaptionRatio2}#%{nl}Duration: #{CaptionTime}# seconds,,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Archer33\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Archer33\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 3 * skill.Level;"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill));"", ""return value""]",,"[""return 300""]",,,,,,6,icon_arch_increaseaccuracy,False,False,False,False,[301024],643641,3001,Swift Step,0,60000,0,196,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30005,Archer_ObliqueShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fires an arrow that bounces off of the target to hit an adjacent enemy. Enemies hit by Oblique Shot have a chance of becoming afflicted with Slow.,Skill Factor: #{SkillFactor}#%{nl}{#339999}{ol}[Slow]{/}{/} Chance: #{CaptionRatio}#%{nl}{#339999}{ol}[Slow]{/}{/} Duration: 7 seconds,"[""var value = 50"", ""return Math.floor(value)""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Archer13\"")"", """", ""if (abil != null  &&  \""Archer13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_obliquestance,False,False,False,False,[301008],643644,3001,Oblique Shot,5,15000,0,58,0,0,0.0,5,0.0,0.0,241.0,8.0,-1.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""Musket"", ""Icon"": ""weapon_musket""}, {""Name"": ""TwoHandCannon"", ""Icon"": ""weapon_cannon""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30007,Archer_TwinArrows,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire two arrows simultaneously at the enemy.,Skill Factor: #{SkillFactor}#% x 2,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Archer28\"")"", """", ""if (abil != null  &&  \""Archer28\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_arch2,False,False,False,False,[301012],643647,3001,Twin Arrow,5,15000,0,56,0,0,0.0,5,0.0,0.0,166.0,5.5,-1.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30008,Archer_Concentration,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Concentrate to momentarily increase your critical rate.,Critical Rate: +#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Archer34\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Archer34\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 2 * skill.Level;"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return value;""]",,,"[""var value = 300"", ""return value;""]",,,,,,6,icon_arc_concentration,False,False,False,False,[301025],643879,3001,Concentration,0,60000,0,196,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30101,Ranger_Barrage,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire 5 arrows in an arc in front of you.{nl}Deals 50% additional damage to targets in [Fear].,Skill Factor: #{SkillFactor}#% x 5,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Ranger11\"")"", """", ""if (abil != null  &&  \""Ranger11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_barrage,False,False,False,False,"[302001, 302014]",643661,3004,Barrage,3,25000,0,94,0,0,0.0,15,0.0,0.0,148.0,4.9,5.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30102,Ranger_HighAnchoring,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Aim with the tip of your arrow and penetrate through enemies in front of you. Enemies hit by High Anchoring have their critical resistance reduced for 5 seconds.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}Enemy Critical Resistance: -10%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Ranger12\"")"", """", ""if (abil != null  &&  \""Ranger12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""return pc.SR + skill.SklSR + skill.Level * 1""]",,,,6,icon_arch_highanchoring,False,False,False,False,"[302004, 302021]",643662,3004,High Anchoring,2,15000,0,109,0,0,0.0,15,0.0,0.0,466.0,15.4,5.0,0,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30103,Ranger_CriticalShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire an arrow with a high chance of critical attack. Increases the caster's critical damage when a critical shot is landed.,Skill Factor: #{SkillFactor}#%{nl}Additional Critical Chance: 100%{nl}Maximum 5 stacks{nl}Critical damage increases 10% per stack,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Ranger25\"")"", """", ""if (abil != null  &&  \""Ranger25\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_criticalshot,False,False,False,False,[302008],643663,3004,Critical Shot,5,10000,0,52,0,0,0.0,10,0.0,0.0,226.0,11.3,-1.0,1,16,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30104,Ranger_SteadyAim,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Aim at an enemy in a steady posture. Increases the damage of Missile attacks, applying an even higher increase to Bow attacks.",Damage +#{CaptionRatio}#% on non-bow Missile attacks{nl}Damage +#{CaptionRatio2}#% on bow Missile attacks{nl}Duration: 300 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Ranger14\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Ranger14\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Ranger14\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Ranger14\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 1.5"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,,,,,,6,icon_arch_steadyaim,False,False,False,False,[302007],643664,3004,Steady Aim,0,60000,0,196,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30106,Ranger_BounceShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire an arrow that splits upon hitting a target to hit other adjacent enemies. Chance of inflicting Slow on enemies hit by Bounce Shot.,Skill Factor: #{SkillFactor}#%{nl}Targets: #{CaptionRatio}#{nl}{#339999}{ol}[Slow]{/}{/} Chances: #{CaptionRatio2}#%{nl}{#339999}{ol}[Slow]{/}{/} Duration: 7 seconds,"[""var value = 6;"", ""return value""]","[""var value = 50;"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Ranger13\"")"", """", ""if (abil != null  &&  \""Ranger13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_dividedarrow,False,False,False,False,[302013],643666,3004,Bounce Shot,3,20000,0,82,0,0,0.0,5,0.0,0.0,320.0,32.0,-1.0,1,31,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30107,Ranger_SpiralArrow,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fires a spiraling arrow that deals multiple hits to a target. Using multiple Spiral Arrows on an enemy increases the number of consecutive hits. Spiral Arrow also ignores part of the target's defense and has increased critical rate.{nl}Deals 50% additional damage to targets in Fear.,Skill Factor: #{SkillFactor}#% x #{CaptionRatio}#{nl}Critical Rate: +50%{nl}Ignores 20% of enemy defense,"[""return 6;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Ranger30\"")"", """", ""if (abil != null  &&  \""Ranger30\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_spiralarrow,False,False,False,False,[302017],643667,3004,Spiral Arrow,0,15000,0,113,0,0,0.0,10,0.0,0.0,110.0,5.5,-1.0,0,16,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30201,QuarrelShooter_DeployPavise,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Set up an upright shield to protect yourself from enemy attacks. Enemies without a target will attack the pavise instead. Enemies attacked during the installation become afflicted with Bleeding.,Skill Factor: #{SkillFactor}#%{nl}Stops #{CaptionRatio}# attacks{nl}Pavise Duration: #{CaptionTime}# seconds{nl}{#339999}{ol}[Bleeding]{/}{/} Duration: 5 seconds,"[""var value = 15 + skill.Level * 5;"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = 15;"", ""} else {"", ""    var abil = GetAbility(pc, 'QuarrelShooter24')"", """", ""    if (abil != null  &&  abil.ActiveState == 1) {"", ""        value = Math.ceil(value * 0.5)"", ""    }"", """", ""}"", """", ""return value;""]",,,"[""var value = 30;"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = 900;"", ""}"", """", ""var abil = GetAbility(pc, 'QuarrelShooter24')"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value * 0.5;"", ""}"", """", ""return Math.floor(value);""]","[""var sklFactor;"", """", ""if (skillOwner.ClassName == 'PC') {"", ""    var atkType = skill.AttackType;"", ""    var attribute = skill.Attribute;"", ""    var atkTypebyItem = GetSumOfEquipItem(skillOwner, atkType);"", ""    var attributebyItem = GetSumOfEquipItem(skillOwner, attribute);"", ""    sklFactor = skill.SklFactor + (skill.Level - 1) * skill.SklFactorByLevel + atkTypebyItem + attributebyItem;"", ""    return Math.floor(sklFactor);"", ""} else {"", ""    sklFactor = skill.SklFactor + (skill.Level - 1) * skill.SklFactorByLevel;"", ""    return Math.floor(sklFactor);"", ""}"", """"]",,,,,6,icon_arch_deploypavise,False,False,False,False,[303019],643655,3003,Deploy Pavise,2,35000,0,124,0,0,0.0,15,0.0,0.0,332.0,11.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
30202,QuarrelShooter_ScatterCaltrop,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Throw caltrops on the ground. The caltrops inflict damage to enemies that step on them and inflict Slow.,Skill Factor: #{SkillFactor}#%{nl}Throw Count: #{CaptionRatio2}#{nl}Caltrops Duration: #{CaptionTime}# seconds{nl}{#339999}{ol}[Slow]{/}{/}Duration: 7 seconds,,"[""var value = skill.Level;"", """", ""if (value > 15) {"", ""    value = 15"", ""}"", """", ""return value""]",,"[""var value = 20;"", ""var abil = GetAbility(pc, \""QuarrelShooter2\"")"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    value = value + abil.Level;"", ""}"", """", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""QuarrelShooter11\"")"", """", ""if (abil != null  &&  \""QuarrelShooter11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_scattercaltrop,False,False,False,False,[303001],643656,3003,Scatter Caltrops,0,30000,0,136,0,0,0.0,15,0.0,0.0,200.0,6.6,-9999.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
30204,QuarrelShooter_StoneShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire a stone bullet to push an enemy away. The target has a chance to become afflicted with Stun.{nl}Deals 50% additional damage to targets in Fear.,Skill Factor: #{SkillFactor}#%{nl}{#339999}{ol}[Stun]{/}{/} Chances: #{CaptionRatio}#%{nl}{#339999}{ol}[Stun]{/}{/} Duration: #{CaptionTime}# seconds,"[""var value = 50"", ""return value""]",,,"[""var value = 4;"", """", ""if (IsPVPServer(pc) == 1  ||  zone == 'pvp_Mine') {"", ""    value = value / 2"", ""}"", """", ""return value;""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""QuarrelShooter12\"")"", """", ""if (abil != null  &&  \""QuarrelShooter12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_stoneshot,False,False,False,False,[303004],643657,3003,Stone Shot,5,15000,0,52,0,0,0.0,15,0.0,0.0,215.0,7.1,0.0,0,1,0,"[{""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30205,QuarrelShooter_RapidFire,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Load multiple arrows into your crossbow and then fire them in quick succession at an enemy.{nl}Deals 50% additional damage to targets in Fear.,Skill Factor: #{SkillFactor}#% x no. of hits{nl}Maximum Loading Time: 1 second,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""QuarrelShooter13\"")"", """", ""if (abil != null  &&  \""QuarrelShooter13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_rapidfire,False,False,False,False,[303007],643658,3003,Rapid Fire,3,20000,0,85,0,0,0.0,15,0.0,0.0,90.0,3.0,10.0,0,1,0,"[{""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30206,QuarrelShooter_Teardown,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Dismantles statues and other obstacles in front of you while dealing damage to nearby enemies.{nl}Allows you to tear down the following:{nl}* Dievdirbys statues, except Vakarine{nl}* Ice Wall{nl}* Pavise, Stockade{nl}* Traps summoned by boss monsters",Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""QuarrelShooter20\"")"", """", ""if (abil != null  &&  \""QuarrelShooter20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_arch3,False,False,False,False,[303009],643659,3003,Teardown,3,45000,0,108,0,0,0.0,10,0.0,0.0,476.0,23.799999,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
30208,QuarrelShooter_Kneelingshot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Kneel down to improve your concentration. Increases your attack, attack speed and range. Using Kneeling Shot again will cancel your kneeling state.",Physical Damage: +#{CaptionRatio}#%{nl}Range: +35{nl}Basic Attack Speed: +250,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Archer14\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Archer14\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 15;"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return value;""]",,,,,,,,,6,icon_arch_kneeling_shot,False,False,False,False,"[312014, 301007]",643897,3003,Kneeling Shot,0,0,0,0,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30209,QuarrelShooter_BlockAndShoot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Increases your Block for a period of time. While the Block and Shoot buff is active, the first attack you perform after blocking another attack deals additional damage.",Block: +#{CaptionRatio}#%{nl}Damage: +50%{nl}Duration: 300 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""QuarrelShooter25\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""QuarrelShooter25\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 20"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value""]",,,,,,,,,6,icon_arc_blockandshot,False,False,False,False,[303020],643881,3003,Block and Shoot,0,60000,0,196,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30301,Sapper_StakeStockades,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Lay a defensive trap that damages any enemies that walk into it.,Skill Factor: #{SkillFactor}#% x 3{nl}Duration: #{CaptionTime}# seconds,,,,"[""var value = 15"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = 900"", ""}"", """", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sapper29\"")"", """", ""if (abil != null  &&  \""Sapper29\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_stakestockades,False,False,False,False,[304019],643668,3005,Stake Stockades,2,35000,0,131,0,0,0.0,15,0.0,0.0,195.0,6.5,50.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
30302,Sapper_Claymore,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Set up a trap in front of you that fires a buckshot. The trap is triggered when you re-use the skill.{nl}{#00113F}Claymore attacks apply as critical when used against enemies affected by Smoke Grenade.{/},Skill Factor: #{SkillFactor}#%{nl}Targets: #{CaptionRatio}#{nl}Consumes Trap Kit x#{SpendItemCount}#,"[""var value = 5"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sapper12\"")"", """", ""if (abil != null  &&  \""Sapper12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""var count = skill.SpendItemBaseCount;"", ""var abil = GetAbility(pc, 'Sapper33')"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    count = count * 2;"", ""}"", """", ""return count;""]",,,6,icon_arch_claymore,False,False,False,False,[304004],643670,3005,Claymore,0,20000,0,116,0,0,0.0,15,0.0,0.0,413.0,13.7,50.0,5,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
30303,Sapper_PunjiStake,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Set up a spring trap that activates once enemies step on it. When the trap is activated, it launches the enemies back far away.",Skill Factor: #{SkillFactor}#%{nl}Casting Time: 1.5 seconds{nl}Duration: #{CaptionRatio2}# seconds{nl}Consumes Trap Kit x#{SpendItemCount}#,,"[""var value = 30 + skill.Level * 5"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = 900"", ""}"", """", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sapper13\"")"", """", ""if (abil != null  &&  \""Sapper13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""var count = skill.SpendItemBaseCount;"", ""var abil = GetAbility(pc, 'Sapper32')"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    count = count - 1;"", ""}"", """", ""return count;""]",,,6,icon_arch_punjistake,False,False,False,False,[304007],643671,3005,Punji Stake,0,40000,0,150,0,0,0.0,15,0.0,0.0,1239.0,40.900002,50.0,10,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
30304,Sapper_DetonateTraps,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Detonates part of your installed traps, dealing damage to enemies.",Skill Factor: #{SkillFactor}#%{nl}Explosion Count: #{CaptionRatio}#,"[""var value = 4"", ""var abil = GetAbility(pc, \""Sapper4\"")"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    value = value + abil.Level;"", ""}"", """", ""return Math.floor(value)""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sapper14\"")"", """", ""if (abil != null  &&  \""Sapper14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_detonatetraps,False,False,False,False,"[304010, 304030]",643672,3005,Detonate Traps,0,20000,0,136,0,0,0.0,1,0.0,0.0,485.0,24.299999,50.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
30305,Sapper_Cover,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Hides traps to conceal them from the enemy. The duration time may decrease depending on objects.,Keeps hidden traps concealed until they disappear.,,,,,,,,,,6,icon_arch_hide,False,False,False,False,,643669,3005,Conceal,0,20000,0,144,0,0,0.0,1,0.0,0.0,100.0,0.0,50.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30306,Sapper_BroomTrap,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Set up a rotating trap that inflicts damage to enemies within a radius.,Skill Factor: #{SkillFactor}#% x no. of hits{nl}Trap Duration: 15 seconds{nl}Consumes Trap Kit x#{SpendItemCount}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sapper11\"")"", """", ""if (abil != null  &&  \""Sapper11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""var count = skill.SpendItemBaseCount;"", ""var abil = GetAbility(pc, 'Sapper34')"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    count = count + 1;"", ""}"", """", ""return count;""]",,,6,icon_arch_broom_trap,False,False,False,False,"[304001, 304016, 304031]",643673,3005,Broom Trap,0,45000,0,157,0,0,0.0,10,0.0,0.0,145.0,7.3,50.0,3,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
30308,Sapper_SpikeShooter,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Set up a trap in front of you that shoots arrows in regular intervals. As the skill level increases, the wire becomes longer and releases more arrows.",Skill Factor: #{SkillFactor}#% per 1.5 seconds{nl}Installation Length: #{CaptionRatio2}#{nl}Trap Duration: 40 seconds{nl}Consumes Trap Kit x#{SpendItemCount}#,,"[""return 5 + skill.Level * 7;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sapper26\"")"", """", ""if (abil != null  &&  \""Sapper26\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""var count = skill.SpendItemBaseCount;"", ""var abil = GetAbility(pc, 'Sapper35')"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    count = count * 2;"", ""}"", """", ""return count;""]",,,6,icon_arch_arch6,False,False,False,False,[304013],643675,3005,Spike Shooter,0,60000,0,176,0,0,0.0,5,0.0,0.0,293.0,0.0,50.0,5,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
30310,Sapper_SpringTrap,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Install a spring trap that shoots back whoever steps on it. Enemies caught in the trap become debuffed: they stop being shot back by the trap, receiving only damage from it.",Skill Factor: #{SkillFactor}#%{nl}Trap Duration: 35 seconds{nl}Debuff Duration: 30 seconds{nl}Consumes Trap Kit x#{SpendItemCount}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sapper38\"")"", """", ""if (abil != null  &&  \""Sapper38\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,6,icon_arc_springtrap,False,False,False,False,[304028],643882,3005,Spring Trap,2,40000,0,137,0,0,0.0,15,0.0,0.0,232.0,7.7,50.0,3,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
30311,Sapper_LegHoldTrap,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Install three traps to obstruct your enemies. Targets that step on the traps become unable to move. Detonate Traps does not apply to Leghold Trap.,Skill Factor: #{SkillFactor}#%{nl}Trap Duration: 20 seconds{nl}Targets are unable to move for 5 seconds{nl}Consumes Trap Kit x#{SpendItemCount}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sapper39\"")"", """", ""if (abil != null  &&  \""Sapper39\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,6,icon_arc_legholdtrap,False,False,False,False,[304029],643883,3005,Leghold Trap,3,35000,0,94,0,0,0.0,10,0.0,0.0,185.0,9.3,50.0,3,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
30401,Hunter_Coursing,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical]{/}{/}{nl}Your companion holds on to a target, immobilizing it. Deals Bleeding damage which decreases the target's physical and magic defense. (When the target is a character, the duration is reduced in half. Immobilizing effects do not apply to boss monsters.)",Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Physical and Magic Defense: -#{CaptionRatio}#%{nl}Duration: 5.5 seconds,"[""var value = 5 + skill.Level * 0.5;"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hunter9\"")"", """", ""if (abil != null  &&  \""Hunter9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_coursing,False,False,False,False,[305008],643648,3002,Coursing,2,35000,0,124,0,0,0.0,15,0.0,0.0,181.0,6.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
30403,Hunter_RushDog,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Order your companion to attack at the targeted location. Enemies hit by Rush Dog have a 50% chance of becoming stunned.,Skill Factor: #{SkillFactor}#% x 5{nl}Targets: 10{nl}Stun Duration: 4 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hunter11\"")"", """", ""if (abil != null  &&  \""Hunter11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_rushdog,False,False,False,False,[305010],643651,3002,Rush Dog,0,10000,0,118,0,0,0.0,15,0.0,0.0,72.0,2.4,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
30404,Hunter_Praise,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Temporarily increases your companion's stats. Increases attack, critical rate, accuracy and movement speed, while largely reducing the damage received from monsters (except bosses). Summons the companion to your character's location immediately and restores HP. (Also applies if the companion has fainted.)",Companion Attack: +#{CaptionRatio}#{nl}Companion Critical Rate: +#{CaptionRatio}#{nl}Companion Accuracy: +#{CaptionRatio}#{nl}Companion Movement Speed: +5{nl}Companion receives -95% damage{nl}(Excludes characters and boss monsters){nl}Duration: 5 minutes,"[""var value = 25 + 5 * (skill.Level - 1)"", ""return value;""]",,,,,,,,,6,icon_arch_praise,False,False,False,False,,,3002,Praise,0,10000,0,131,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30406,Hunter_Retrieve,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical]{/}{/}{nl}Order your companion to drag a target towards you. The target becomes unable to attack and suffers continuous damage. (If the enemy is a character, duration is cut in half. If it's a boss monster, it cannot be immobilized.){nl}Enemies attacked by Retrieve become afflicted with Fear after the end of the skill.",Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Duration: 5 seconds{nl}[Fear] Duration: 20 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Hunter12\"")"", """", ""if (abil != null  &&  \""Hunter12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_retrieve,False,False,False,False,"[305002, 305011]",643652,3002,Retrieve,2,25000,0,114,0,0,0.0,15,0.0,0.0,223.0,7.4,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
30407,Hunter_Hounding,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Enhances your companion's senses, allowing it to trace hidden objects. The companion finds concealed targets nearby and increases your looting chance. Revealed enemies become afflicted with Fear.",Looting Chance: +#{CaptionRatio}#{nl}Detects hidden enemies 5 times{nl}Hounding AI Duration: 90 seconds{nl}Fear Debuff Duration: 3 seconds,"[""var value = skill.Level * 100"", ""return value;""]",,,,,,,,,6,icon_arch_hounding,False,False,False,False,,643653,3002,Hounding,0,20000,0,144,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30408,Hunter_Growling,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Your companion growls to threaten enemies. Targets affected by Growling become unable to act (does not apply to boss monsters) and vulnerable to Missile attacks.{nl}Growling is canceled when the companion reaches a distance of 250 or more away from the caster.,Debuff Cooldown: 4 seconds{nl}Missile Attack Damage: +#{CaptionRatio}#%{nl}Growling AI Duration: 10 minutes,"[""var value = skill.Level * 1.5"", ""return value""]",,,,,,,,,6,icon_arch_growling,False,False,False,False,,643654,3002,Growling,0,45000,0,176,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30409,Hunter_Howling,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Your companion howls to threaten enemies. Debuffed targets have their critical resistance reduced.,Critical Resistance: -#{CaptionRatio}#%{nl}Duration: 15 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Hunter14\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Hunter14\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 4"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return Math.floor(value);""]",,,,,,,,,6,icon_arc_howling,False,False,False,False,[305013],643880,3002,Howling,0,30000,0,131,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30501,Wugushi_Detoxify,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Detoxifies a poisoned ally. If the poison is of a higher rank than the antidote, the duration will be reduced instead.",Duration: -#{CaptionRatio}# seconds{nl}Consumes #{SpendPoison}# Poison Pot Poison,"[""var value = 3"", ""return Math.floor(value)""]",,,,,,,"[""var lv = skill.Level;"", ""var lvUpSpendPoison = skill.LvUpSpendPoison;"", ""var basicSP = skill.BasicPoison + lvUpSpendPoison * (lv - 1);"", ""var abil = GetAbility(pc, \""SavePoison\"")"", """", ""if (abil != null) {"", ""    basicSP = basicSP - (basicSP * (abil.Level * 0.01))"", ""}"", """", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""return Math.floor(basicSP)""]",,6,icon_arch_detoxify,False,False,False,False,[306019],643676,3006,Detoxify,0,25000,10,157,0,1,0.0,1,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30504,Wugushi_WugongGu,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow] - [Poison]{/}{/}{nl}Fire a contagious poison arrow. The poisoned target spreads poison around to nearby enemies every time it is attacked. {nl},Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}{#339999}{ol}[Poison]{/}{/} Duration: #{CaptionRatio2}# seconds{nl}Consumes Poison Pot Poison x#{SpendPoison}#,,"[""var value = 10"", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Wugushi14\"")"", """", ""if (abil != null  &&  \""Wugushi14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,"[""var lv = skill.Level;"", ""var lvUpSpendPoison = skill.LvUpSpendPoison;"", ""var basicSP = skill.BasicPoison + lvUpSpendPoison * (lv - 1);"", ""var abil = GetAbility(pc, \""SavePoison\"")"", """", ""if (abil != null) {"", ""    basicSP = basicSP - (basicSP * (abil.Level * 0.01))"", ""}"", """", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""return Math.floor(basicSP)""]",,7,icon_arch_wugonggu,False,False,False,False,[306004],643679,3006,Wugong Gu,0,25000,7,131,0,0,0.0,15,0.0,0.0,125.0,4.2,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30505,Wugushi_ThrowGuPot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Poison]{/}{/}{nl}Create a poison puddle by throwing a pot filled with poison. Any enemy who comes into contact with the puddle is poisoned. Targets continue to receive damage for a moment after stepping away from the puddle.,Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}{#339999}{ol}[Residual Poison]{/}{/} Duration: 3.5 seconds{nl}Consumes Poison Pot Poison x#{SpendPoison}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Wugushi17\"")"", """", ""if (abil != null  &&  \""Wugushi17\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,"[""var lv = skill.Level;"", ""var lvUpSpendPoison = skill.LvUpSpendPoison;"", ""var basicSP = skill.BasicPoison + lvUpSpendPoison * (lv - 1);"", ""var abil = GetAbility(pc, \""SavePoison\"")"", """", ""if (abil != null) {"", ""    basicSP = basicSP - (basicSP * (abil.Level * 0.01))"", ""}"", """", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""return Math.floor(basicSP)""]",,7,icon_arch_throwgupot,False,False,False,False,[306007],643681,3006,Poison Pot,0,35000,23,144,0,0,0.0,15,0.0,0.0,125.0,4.2,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
30506,Wugushi_JincanGu,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Poison]{/}{/}{nl}Throw Jincan to attack enemies. Defeated enemies have a chance to be replaced with a poison insect that attacks other enemies.,Skill Factor: #{SkillFactor}#% per 2 seconds{nl}{#339999}{ol}[Jincan Gu]{/}{/} Duration: 60 seconds{nl}{#339999}{ol}[Poisonous Insect]{/}{/} Skill Factor: #{SkillFactor}#%{nl}{#339999}{ol}[Poisonous Insect]{/}{/} Count: max. #{CaptionRatio}#{nl}{#339999}{ol}[Poisonous Insect]{/}{/} Spawn Chances: 70%{nl}{#339999}{ol}[Poisonous Insect]{/}{/} Duration: 3 seconds{nl}Consumes Poison Pot Poison x#{SpendPoison}#,"[""var value = skill.Level"", """", ""if (value > 10) {"", ""    value = 10"", ""}"", """", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Wugushi28\"")"", """", ""if (abil != null  &&  \""Wugushi28\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,"[""var lv = skill.Level;"", ""var lvUpSpendPoison = skill.LvUpSpendPoison;"", ""var basicSP = skill.BasicPoison + lvUpSpendPoison * (lv - 1);"", ""var abil = GetAbility(pc, \""SavePoison\"")"", """", ""if (abil != null) {"", ""    basicSP = basicSP - (basicSP * (abil.Level * 0.01))"", ""}"", """", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""return Math.floor(basicSP)""]",,7,icon_arch_jincangu,False,False,False,False,[306023],643682,3006,Jincan Gu,0,40000,11,150,0,0,0.0,10,250.0,25.0,97.0,4.9,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
30507,Wugushi_Zhendu,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Applies a deadly poison to your weapon that damages enemies with attacks.{nl}Damage increases with STR.,Zhendu Duration: #{CaptionTime}# sec{nl}Poison Property Attack: #{CaptionRatio}#{nl}Add. Poison Property Damage: #{CaptionRatio2}#{nl}Consumes Poison Pot Poison x#{SpendPoison}#,"[""var value = 0"", """", ""if (pc != null) {"", ""    var minPATK = pc.MINPATK"", ""    var maxPATK = pc.MAXPATK"", ""    value = Math.floor(((minPATK + maxPATK) / 2) * 0.1)"", ""}"", """", ""return value""]","[""var skillLv = skill.Level;"", ""var value = 40 + (skillLv -1) * 7;"", """", ""if (pc != null) {"", ""    var STR = pc.STR"", ""    value = Math.floor(value + ((skillLv / 4)* (Math.pow((STR * 0.6) ,  0.9))));"", ""}"", """", ""return value""]",,"[""return  300""]",,,,"[""var lv = skill.Level;"", ""var lvUpSpendPoison = skill.LvUpSpendPoison;"", ""var basicSP = skill.BasicPoison + lvUpSpendPoison * (lv - 1);"", ""var abil = GetAbility(pc, \""SavePoison\"")"", """", ""if (abil != null) {"", ""    basicSP = basicSP - (basicSP * (abil.Level * 0.01))"", ""}"", """", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""return Math.floor(basicSP)""]",,6,icon_arch_zhendu,False,False,False,False,[306014],643680,3006,Zhendu,0,60000,100,189,0,0,0.0,15,100.0,10.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
30508,Wugushi_LatentVenom,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Bow] - [Poison]{/}{/}{nl}Fire a poisonous arrow that deals continuous damage for a long period of time. The stronger the poison, the higher the damage.{nl}",Skill Factor: #{SkillFactor}#% per second{nl}Skill Factor Increase: +#{CaptionRatio}#% per second{nl}Duration: #{CaptionRatio2}# seconds{nl}Consumes Poison Pot Poison x#{SpendPoison}#,"[""var value = 3"", ""return value;""]","[""var value = 100"", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Wugushi23\"")"", """", ""if (abil != null  &&  \""Wugushi23\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,"[""var lv = skill.Level;"", ""var lvUpSpendPoison = skill.LvUpSpendPoison;"", ""var basicSP = skill.BasicPoison + lvUpSpendPoison * (lv - 1);"", ""var abil = GetAbility(pc, \""SavePoison\"")"", """", ""if (abil != null) {"", ""    basicSP = basicSP - (basicSP * (abil.Level * 0.01))"", ""}"", """", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""return Math.floor(basicSP)""]",,7,icon_arch_latentvenom,False,False,False,False,[306018],,3006,Latent Venom,0,30000,7,142,0,0,0.0,15,0.0,0.0,71.0,2.4,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30509,Wugushi_WideMiasma,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Poison]{/}{/}{nl}Throw a vial of poison to the ground and break it. A toxic cloud forms around the broken vial, poisoning enemies within range and hiding the caster.",Skill Factor: #{SkillFactor}#% per second{nl}{#339999}{ol}[Poison]{/}{/} Duration: 15 seconds{nl}{#339999}{ol}[Stealth]{/}{/} Duration: 10 seconds{nl}Consumes Poison Pot Poison x#{SpendPoison}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Wugushi27\"")"", """", ""if (abil != null  &&  \""Wugushi27\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,"[""var lv = skill.Level;"", ""var lvUpSpendPoison = skill.LvUpSpendPoison;"", ""var basicSP = skill.BasicPoison + lvUpSpendPoison * (lv - 1);"", ""var abil = GetAbility(pc, \""SavePoison\"")"", """", ""if (abil != null) {"", ""    basicSP = basicSP - (basicSP * (abil.Level * 0.01))"", ""}"", """", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""return Math.floor(basicSP)""]",,7,icon_arch_widemiasma,False,False,False,False,[306022],,3006,Wide Miasma,0,45000,20,157,0,0,0.0,10,0.0,0.0,222.0,11.1,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
30510,Wugushi_CrescendoBane,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Poison]{/}{/}{nl}Amplifies the toxicity of poisons running through enemy veins. The duration of poisons decreases, but the debuff cycles accelerate.",{#339999}{ol}[Poison Debuff]{/}{/}Duration Reduction: #{CaptionRatio}#%{nl}{#339999}{ol}[Poison Debuff]{/}{/}Cycle Increase: #{CaptionRatio}#%{nl}Add. Poison Property Damage x2{nl}Consumes Poison Pot Poison x#{SpendPoison}#,"[""var value = 10 * skill.Level"", ""return value;""]",,,,,,,"[""var lv = skill.Level;"", ""var lvUpSpendPoison = skill.LvUpSpendPoison;"", ""var basicSP = skill.BasicPoison + lvUpSpendPoison * (lv - 1);"", ""var abil = GetAbility(pc, \""SavePoison\"")"", """", ""if (abil != null) {"", ""    basicSP = basicSP - (basicSP * (abil.Level * 0.01))"", ""}"", """", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""return Math.floor(basicSP)""]",,7,icon_arch_crescendobane,False,False,False,False,,,3006,Crescendo Bane,0,50000,25,150,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
30801,Fletcher_BroadHead,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire a wide broadhead arrow. Inflicts Bleeding on the enemy hit.{nl}{#00113F}Bleeding enemies are inflicted with Excessive Bleed when attacked again.{/},Skill Factor: #{SkillFactor}#%{nl}Bleeding Duration: #{CaptionTime}# seconds{nl}Consumes Broadhead Arrow x1,,,,"[""return 5 + skill.Level * 0.5""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fletcher11\"")"", """", ""if (abil != null  &&  \""Fletcher11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_broadhead,False,False,False,False,[309001],643701,3011,Broadhead,0,15000,0,99,0,0,0.0,15,0.0,0.0,294.0,9.8,-1.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30802,Fletcher_BodkinPoint,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire a high-penetration bodkin arrow at an enemy. Lowers the defense of struck enemies and nullifies any protective magic.,Skill Factor: #{SkillFactor}#%{nl}Physical Defense: -#{CaptionRatio}#%{nl}Consumes Bodkin Point Arrow x1,"[""var value = skill.Level * 1"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fletcher14\"")"", """", ""if (abil != null  &&  \""Fletcher14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_bodkinpoint,False,False,False,False,[309003],643702,3011,Bodkin Point,0,20000,0,106,0,0,0.0,15,0.0,0.0,536.0,17.700001,0.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30803,Fletcher_BarbedArrow,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire a barbed arrowhead. Deals a number of hits depending on an enemy's defense type.,Skill Factor: #{SkillFactor}#%{nl}Cloth Armor Targets: 5 hits{nl}Leather Armor Targets: 3 hits{nl}Plate Armor Targets: 1 hit{nl}Ghost Armor Targets: null{nl}Consumes Barbed Arrow x1,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fletcher17\"")"", """", ""if (abil != null  &&  \""Fletcher17\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_barbedarrow,False,False,False,False,[309005],643703,3011,Barbed Arrow,5,15000,0,50,0,0,0.0,15,0.0,0.0,117.0,3.9,0.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30804,Fletcher_CrossFire,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire an arrow that, upon hitting an enemy, creates a cross-shaped explosion.",Skill Factor: #{SkillFactor}#%{nl}Explosion Attack: #{CaptionRatio}#%{nl}Consumes 1 Hail Mary Arrow,"[""return 75 + skill.Level * 5;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fletcher20\"")"", """", ""if (abil != null  &&  \""Fletcher20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_crossfire,False,False,False,False,[309007],643704,3011,Crossfire,5,20000,0,58,0,0,0.0,10,0.0,0.0,155.0,7.8,0.0,1,16,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30805,Fletcher_MagicArrow,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire an arrow, igniting flames that inflict damage over time on enemies entering the targeted area. Targets that step on the flames receive continuous damage.",Skill Factor: #{SkillFactor}#% x #{CaptionRatio2}#{nl}Duration: 10 seconds{nl}Consumes Magic Arrow x1,,"[""var value = 5 + skill.Level * 2"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fletcher23\"")"", """", ""if (abil != null  &&  \""Fletcher23\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_magicarrow,False,False,False,False,"[309009, 309014]",643705,3011,Magic Arrow,0,5000,0,92,0,0,0.0,5,0.0,0.0,76.0,0.0,-1.0,1,31,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
30806,Fletcher_Singijeon,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fires an arrow with explosives attached. Upon hitting its target, the arrow explodes after an amount of time and causes collateral damage.{nl}{#00113F}Enemies affected by the Burn Debuff receive an additional 50% damage from the Divine Machine Arrow explosion.{/}",Skill Factor: #{SkillFactor}#%{nl}Explosion Attack: #{SkillFactor}#%{nl}+50% damage to enemies affected by Burn{nl}Duration: 1.5 seconds{nl}Consumes Divine Machine Arrow x1,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Fletcher25\"")"", """", ""if (abil != null  &&  \""Fletcher25\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_singijon,False,False,False,False,[309010],643706,3011,Divine Machine Arrow,3,25000,0,80,0,0,0.0,10,0.0,0.0,531.0,26.6,-1.0,1,16,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
31002,Falconer_BuildRoost,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Set up a roost where the hawk can sit. When the hawk starts flying again, all Falconer skills except Roost have their cooldown times reset.",Maximum Level: 1{nl}Roost Duration: 5 seconds{nl}Resets the cooldown of all Falconer skills except Roost,,,,,,,,,,6,icon_arch_roost,False,False,False,False,,643707,3014,Roost,0,90000,0,131,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31003,Falconer_Circling,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}The Hawk flies, following you. AoE defense ratio of the target is fixed to 1.",AoE defense ratio is fixed to 1{nl}Duration: #{CaptionRatio}# sec,"[""var value = 10 + skill.Level"", ""return value""]",,,,,,,,,6,icon_arch_circling,False,False,False,False,[310011],643708,3014,Circling,0,45000,0,176,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31005,Falconer_Pheasant,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Throw a training doll and have your hawk attack the targeted area. Attacked enemies become momentarily stunned. Deals additional damage to Beast-type enemies.,Skill Factor: #{SkillFactor}#%{nl}Targets: 15{nl}+50% damage to Beast-type enemies{nl}{#339999}{ol}[Stun]{/}{/} Chance: 50%{nl}{#339999}{ol}[Stun]{/}{/} Duration: 3 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Falconer6\"")"", """", ""if (abil != null  &&  \""Falconer6\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_dummypheasant,False,False,False,False,"[310006, 310017]",643710,3014,Pheasant,0,30000,0,149,0,0,0.0,15,0.0,0.0,479.0,15.9,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
31006,Falconer_HangingShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Move while hanging from your hawk. Prevents damage from melee attacks and allows you to damage enemies with basic attacks while hanging.{nl}(Does not allow for automatic weapon swap.),Duration: #{CaptionRatio}# seconds,"[""return 14 + skill.Level""]",,,,,,,,,6,icon_arch_falconer1,False,False,False,False,,643711,3014,Hanging Shot,0,100000,0,222,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}, {""Name"": ""Bow"", ""Icon"": ""weapon_tbow""}, {""Name"": ""BowAndDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""BowAndShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31008,Falconer_BlisteringThrash,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Command your hawk to divebomb enemies multiple times in the targeted area. The target is likely to be afflicted with [Blind]. Deals additional damage to Beast-type enemies.,Skill Factor: #{SkillFactor}#% x 6{nl}[Blind] Debuff Chances: 50%{nl}[Blind] Debuff Duration: 7 seconds{nl}+50% damage to Beast enemies,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Falconer8\"")"", """", ""if (abil != null  &&  \""Falconer8\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_blisteringthrash,False,False,False,False,"[310008, 310010]",643846,3014,Sonic Strike,0,35000,0,148,0,0,0.0,10,0.0,0.0,144.0,7.2,5.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
31011,Falconer_Aiming,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical] - [Piercing]{/}{/}{nl}Enemies you target in an area around your hawk can be attacked from outside normal range. This range increases with the skill level.,Duration: #{CaptionTime}# seconds,,,,"[""var value = 10 + (skill.Level * 5);"", ""return value;""]",,,,,,6,icon_arch_aiming,False,False,False,False,,,3014,Aiming,0,75000,0,216,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6, 7]"
31012,Falconer_FirstStrike,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}The hawk automatically attacks enemies near its master with a sonic wave. Pre-Emptive Strike deals less damage than regular Sonic Strike, but the same debuff applies. Continuously consumes SP, and the effect cancels if low on SP.",Consumes #{CaptionRatio}# SP per 5 seconds{nl}Deals 25% of Sonic Strike's damage (must be previously learned){nl}Maximum Level: 1,"[""var lv = pc.Lv"", ""var bylvCorrect = lv - 300"", ""var spendSP = 90"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var spendSP = spendSP * (1 + bylvCorrect)"", ""return Math.floor(spendSP)""]",,,,,,,,,6,icon_arch_firststrike,False,False,False,False,,,3014,Pre-Emptive Strike,0,0,0,26,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
31013,Falconer_Tomahawk,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}The hawk glides over a spot the ground, causing a large explosion. Enemies caught in the explosion become affected with the Burn debuff.",Skill Factor: #{SkillFactor}#%{nl}{#339999}{ol}[Burn Debuff]{/}{/} Duration: 6 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Falconer22\"")"", """", ""if (abil != null  &&  \""Falconer22\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arc_birdmissile,False,False,False,False,[310022],643885,3014,Tomahawk,0,50000,0,170,0,0,0.0,5,0.0,0.0,755.0,75.5,20.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
31101,Cannoneer_CannonShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Cannon]{/}{/}{nl}Fire your cannon to attack.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cannoneer2\"")"", """", ""if (abil != null  &&  \""Cannoneer2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var skillSR = skill.SklSR;"", """", ""if (IsBuffApplied(pc, 'Bazooka_Buff') == 'YES') {"", ""    skillSR = Math.floor(skillSR * 2);"", ""}"", """", ""var value = pc.SR + skillSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_arch_cannonshot,False,False,False,False,"[312002, 312017, 312021]",643712,3015,Cannon Shot,3,5000,0,69,0,0,0.0,15,0.0,0.0,327.0,10.8,5.0,1,1,0,"[{""Name"": ""TwoHandCannon"", ""Icon"": ""weapon_cannon""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 4]"
31103,Cannoneer_SiegeBurst,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Cannon]{/}{/}{nl}Fire a howitzer to the ground. Deals 5 times the damage to enemy structures. While using Siege Burst, your character cannot be knocked back or knocked down.",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}Full Charging Time: #{CaptionRatio2}# seconds{nl}Critical Chance: 50%,,"[""var value = skill.Level * 0.1"", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cannoneer4\"")"", """", ""if (abil != null  &&  \""Cannoneer4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var skillSR = skill.SklSR;"", """", ""if (IsBuffApplied(pc, 'Bazooka_Buff') == 'YES') {"", ""    skillSR = Math.floor(skillSR * 2);"", ""}"", """", ""var value = pc.SR + skillSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_arch_siegeburst,False,False,False,False,"[312004, 312007, 312011, 312021]",643714,3015,Siege Burst,0,10000,0,123,0,0,0.0,15,0.0,0.0,715.0,23.6,15.0,1,1,0,"[{""Name"": ""TwoHandCannon"", ""Icon"": ""weapon_cannon""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 4]"
31104,Cannoneer_CannonBlast,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Cannon]{/}{/}{nl}Fire a cannonball that spreads out to target all enemies in front of you. Chance of destroying the armor of enemies with Plate armor.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}50% chance of destroying Plate armor{nl}Duration: 3 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cannoneer5\"")"", """", ""if (abil != null  &&  \""Cannoneer5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var skillSR = skill.SklSR;"", """", ""if (IsBuffApplied(pc, 'Bazooka_Buff') == 'YES') {"", ""    skillSR = Math.floor(skillSR * 2);"", ""}"", """", ""var value = pc.SR + skillSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_arch_cannonblast,False,False,False,False,"[312005, 312021]",643715,3015,Cannon Blast,2,25000,0,117,0,0,0.0,15,0.0,0.0,654.0,21.6,10.0,1,1,0,"[{""Name"": ""TwoHandCannon"", ""Icon"": ""weapon_cannon""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 4]"
31105,Cannoneer_CannonBarrage,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var abilCannoneer20 = GetAbility(pc, 'Cannoneer20');"", """", ""if (abilCannoneer20 != null  &&  abilCannoneer20.ActiveState == 1) {"", ""    var abilCoolDownRate = 1 - (abilCannoneer20.Level * 0.1);"", ""    basicCoolDown = basicCoolDown * abilCoolDownRate;"", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Cannon]{/}{/}{nl}Repeatedly fire your cannon at a selected target. Chance to stun attacked enemies.,Skill Factor: #{SkillFactor}#% x 3{nl}AoE Attack Ratio: #{SkillSR}#{nl}Stun Chance: 30%{nl}Stun Duration: 3 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cannoneer9\"")"", """", ""if (abil != null  &&  \""Cannoneer9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var skillSR = skill.SklSR;"", """", ""if (IsBuffApplied(pc, 'Bazooka_Buff') == 'YES') {"", ""    skillSR = Math.floor(skillSR * 2);"", ""}"", """", ""var value = pc.SR + skillSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_arch_cannonade,False,False,False,False,"[312009, 312020, 312021]",,3015,Cannon Barrage,2,30000,0,123,0,0,0.0,10,0.0,0.0,236.0,11.8,5.0,1,16,0,"[{""Name"": ""TwoHandCannon"", ""Icon"": ""weapon_cannon""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 4]"
31106,Cannoneer_SmokeGrenade,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Missile] - [Cannon]{/}{/}{nl}Throw a smoke grenade at a selected area and blind your enemies. Reveals hidden enemies within range.,Smoke Grenade Duration: #{CaptionTime}# seconds{nl}AoE Attack Ratio: #{SkillSR}#,,,,"[""var value = 7 + skill.Level"", ""return value""]",,"[""var skillSR = skill.SklSR;"", """", ""if (IsBuffApplied(pc, 'Bazooka_Buff') == 'YES') {"", ""    skillSR = Math.floor(skillSR * 2);"", ""}"", """", ""var value = pc.SR + skillSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_arch_smokegrenade,False,False,False,False,,,3015,Smoke Grenade,0,25000,0,124,0,0,0.0,15,0.0,0.0,100.0,0.0,10.0,1,1,0,"[{""Name"": ""TwoHandCannon"", ""Icon"": ""weapon_cannon""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 2, 4]"
31107,Cannoneer_Bazooka,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Crouch down to concentrate and steady the cannon's aim. Increases the cannon's shooting speed, range, and damage on basic attacks, and increases the attack distance and AoE attack ratio of all cannon attacks.{nl}{#00113F}If a pavise belonging to you or an ally is nearby, you become immune to knockback and knockdown.{/}",Increases cannon basic attack speed{nl}50% additional damage with basic cannon attacks{nl}Increases basic cannon attack range by 50%{nl}Increases basic cannon attack distance by #{CaptionRatio2}#{nl}Increases the AoE attack ratio of cannon attacks by 2x,,"[""var value = 80"", ""return value""]",,,,,,,,6,icon_arch_bazooka,False,False,False,False,,,3015,Bazooka,0,0,0,0,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""TwoHandCannon"", ""Icon"": ""weapon_cannon""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31108,Cannoneer_SweepingCannon,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Cannon]{/}{/}{nl}Create a turret in front of you. You can assemble your cannon with the turret to damage a wide range of enemies.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cannoneer15\"")"", """", ""if (abil != null  &&  \""Cannoneer15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var skillSR = skill.SklSR;"", """", ""if (IsBuffApplied(pc, 'Bazooka_Buff') == 'YES') {"", ""    skillSR = Math.floor(skillSR * 2);"", ""}"", """", ""var value = pc.SR + skillSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_arch_sweepingcannon,False,False,False,False,"[312015, 312021]",,3015,Sweeping Cannon,0,40000,0,157,0,0,0.0,5,0.0,0.0,1085.0,108.5,20.0,0,31,0,"[{""Name"": ""TwoHandCannon"", ""Icon"": ""weapon_cannon""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 4]"
31201,Musketeer_CoveringFire,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Fire blindly at the targeted area to attack multiple enemies. Applies 50% additional damage to enemies that are slowed down or unable to move.,Skill Factor: #{SkillFactor}#% x 11,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Musketeer2\"")"", """", ""if (abil != null  &&  \""Musketeer2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_coveringfire,False,False,False,False,[313002],643847,3016,Covering Fire,2,20000,0,114,0,0,0.0,15,0.0,0.0,69.0,2.3,7.0,1,1,0,"[{""Name"": ""Musket"", ""Icon"": ""weapon_musket""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
31202,Musketeer_HeadShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Aim accurately at the head of an enemy to attack. The attacked enemy will have its INT and SPR temporarily reduced. Inflicts Bleeding for 10 seconds and also stuns enemies.{nl}{#00113F}Headshot attacks apply as critical to enemies affected by Coursing.{/},Skill Factor: #{SkillFactor}#%{nl}Reduces INT and SPR by #{CaptionRatio2}#{nl}Bleeding Duration: 10 seconds{nl}Stun Duration: 2 seconds,,"[""var value = 5 * skill.Level"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = (5 * skill.Level) + (pc.HR * 0.1)"", ""}"", """", ""return value;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Musketeer3\"")"", """", ""if (abil != null  &&  \""Musketeer3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_headshot,False,False,False,False,[313003],643848,3016,Headshot,0,30000,0,133,0,0,0.0,15,0.0,0.0,914.0,30.200001,-99.0,1,1,0,"[{""Name"": ""Musket"", ""Icon"": ""weapon_musket""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
31203,Musketeer_Snipe,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Aim and fire at an enemy far away. The usual range of fire is increased and heavily damages a single enemy. Attacking a bleeding enemy deals additional damage. Attacked enemies have a chance of becoming stunned, with nearby enemies also receiving damage. Snipe does not allow for block or evasion.{nl}{#00113F}Snipe attacks apply as critical to enemies affected by Coursing.{/}",Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Musketeer4\"")"", """", ""if (abil != null  &&  \""Musketeer4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_snipe,False,False,False,False,[313004],643849,3016,Snipe,0,35000,0,140,0,0,0.0,5,0.0,0.0,994.0,99.400002,0.0,1,31,0,"[{""Name"": ""Musket"", ""Icon"": ""weapon_musket""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
31204,Musketeer_PenetrationShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Fire continuously in a straight line in front of you until the maximum range of fire. Attacked enemies may be pushed back. Penetration Shot can be used while in the Kneeling Shot state.,Skill Factor: #{SkillFactor}#% x 5,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Musketeer5\"")"", """", ""if (abil != null  &&  \""Musketeer5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_penetrationshot,False,False,False,False,"[313005, 313025]",643850,3016,Penetration Shot,0,20000,0,127,0,0,0.0,15,0.0,0.0,239.0,7.9,2.0,1,1,0,"[{""Name"": ""Musket"", ""Icon"": ""weapon_musket""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
31207,Musketeer_Volleyfire,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Fire repeatedly at the enemy. Applies 50% additional damage to enemies that are slowed down or unable to move.,Skill Factor: #{SkillFactor}#% x4{nl}Targets: 8,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Musketeer11\"")"", """", ""if (abil != null  &&  \""Musketeer11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_volleyfire,False,False,False,False,[313011],,3016,Volleyfire,2,15000,0,110,0,0,0.0,10,0.0,0.0,122.0,6.1,-9999.0,1,16,0,"[{""Name"": ""Musket"", ""Icon"": ""weapon_musket""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
31209,Musketeer_SnipersSerenity,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Missile]{/}{/}{nl}Collect yourself before the combat. The longer the charging time, the more your minimum attack increases. At full charge, your minimum attack values become equal to your maximum attack. Your movement speed decreases and you become unable to perform basic attacks while moving. The buff's duration goes down by 1 second every time you are hit by an enemy.{nl}(Does not allow for automatic weapon swap.)","Full Charge: #{CaptionRatio}# seconds{nl}Duration: 30 seconds{nl}At full charge, minimum attack becomes equal to maximum attack{nl}Critical damage +50% when fully charged{nl}Movement speed fixed to 10","[""var value = 4 - ((skill.Level - 1) * 0.4)"", """", ""if (value < 0.4) {"", ""    value = 0.4"", ""}"", """", ""return value;""]",,,,,,,,,6,icon_arch_snipersserenity,False,False,False,False,[313022],,3016,Sniper's Serenity,0,0,0,117,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""Musket"", ""Icon"": ""weapon_musket""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 2]"
31210,Musketeer_PrimeAndLoad,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var abilMusketeer29 = GetAbility(pc, \""Musketeer29\"")"", """", ""if (abilMusketeer29 != null  &&  abilMusketeer29.ActiveState == 1) {"", ""    basicCoolDown = basicCoolDown - (abilMusketeer29.Level * 1000);"", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Missile]{/}{/}{nl}Resets the cooldown of certain Musketeer attack skills. The cooldown of Prime and Load increases in proportion to the skills reset. Cooldown reduction effects cannot be applied to Prime and Load.,Additional cooldown per skill{nl}Covering Fire +5 seconds{nl}Penetration Shot +5 seconds{nl}Volleyfire +5 seconds{nl}Headshot +10 seconds{nl}Snipe +10 seconds,,,,,,,,,,6,icon_arch_primeandload,False,False,False,False,,,3016,Prime and Load,0,25000,0,150,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,1,31,0,"[{""Name"": ""Musket"", ""Icon"": ""weapon_musket""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 2]"
31211,Musketeer_GroovingMuzzle,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Strengthens your musket, increasing the effectiveness of basic attacks.{nl}Provides a chance of dealing a set of 3 consecutive critical hits while Grooving Muzzle is active.{nl}(Does not allow for automatic weapon swap.)",Accuracy: +10%{nl}Ignores enemy defense by 30%{nl}30% chance of 3 consecutive hits{nl}100% chance of critical attack on the 3 consecutive hits{nl}Duration: 60 seconds,,,,,,,,,,6,icon_arch_groovingmuzzle,False,False,False,False,,643851,3016,Grooving Muzzle,0,60000,0,196,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""Musket"", ""Icon"": ""weapon_musket""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31401,Mergen_Unload,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire five arrows at once to attack enemies within range. Enemies near the attacked target receive ricochet damage.{nl}Deals 50% additional damage to targets in [Fear].,Skill Factor: #{SkillFactor}#% x 5,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Mergen2\"")"", """", ""if (abil != null  &&  \""Mergen2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_spreadshot,False,False,False,False,[315002],,3017,Spread Shot,3,20000,0,83,0,0,0.0,15,0.0,0.0,81.0,2.7,3.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
31402,Mergen_FocusFire,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Aim straight at the enemy and fire multiple arrows.,Skill Factor: #{SkillFactor}#% x 5,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Mergen3\"")"", """", ""if (abil != null  &&  \""Mergen3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_koochaksal,False,False,False,False,"[315003, 315012]",,3017,Homing Arrow,2,25000,0,118,0,0,0.0,15,0.0,0.0,277.0,9.4,-1.0,0,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
31404,Mergen_TrickShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Shoot three exploding arrows with a chance of exploding on the target and dealing additional damage.,Skill Factor: #{SkillFactor}#% x 3{nl}Chance of Explosion: 50%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Mergen5\"")"", """", ""if (abil != null  &&  \""Mergen5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_triplearrow,False,False,False,False,"[315013, 315005]",,3017,Triple Arrow,2,20000,0,109,0,0,0.0,15,0.0,0.0,187.0,6.2,1.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
31405,Mergen_ArrowRain,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Shoot multiple arrows up in the air to create a storm of arrows. Targets in its AoE receive damage every time they are hit.,Skill Factor: #{SkillFactor}#% x no. of hits{nl}Arrow Rain Duration: 3 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Mergen6\"")"", """", ""if (abil != null  &&  \""Mergen6\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_arrowsprinkle,False,False,False,False,[315006],,3017,Arrow Sprinkle,0,40000,0,157,0,0,0.0,10,0.0,0.0,82.0,4.1,-1.0,1,16,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
31406,Mergen_JumpShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Jump backward and fire arrows straight ahead, damaging enemies.",Skill Factor: #{SkillFactor}#%{nl}Backward Movement Distance: #{CaptionRatio}#,"[""var value = 6 * skill.Level;"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Mergen7\"")"", """", ""if (abil != null  &&  \""Mergen7\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_jumpshot,False,False,False,False,[315007],,3017,Jump Shot,2,25000,0,117,0,0,0.0,10,0.0,0.0,175.0,8.8,3.0,1,16,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
31408,Mergen_DownFall,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Fire several arrows into the air to rain down on a single designated enemy. You will stop inflicting damage if you and the enemy are too far from each other.,Skill Factor: #{SkillFactor}#% per 0.2 seconds{nl}Duration: #{CaptionRatio}# seconds,"[""var value = 3 + skill.Level * 0.5;"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Mergen11\"")"", """", ""if (abil != null  &&  \""Mergen11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_downfall,False,False,False,False,"[315011, 315014]",,3017,Down Fall,2,20000,0,111,0,0,0.0,15,0.0,0.0,83.0,0.0,1.0,1,1,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
31409,Mergen_Zenith,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Shoot a stream of arrows in a circle all around to attack enemies within range. Enemies closer to you receive more hits.,Skill Factor: #{SkillFactor}#% x max. 10,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Mergen15\"")"", """", ""if (abil != null  &&  \""Mergen15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_zenith,False,False,False,False,[315015],,3017,Zenith,2,35000,0,131,0,0,0.0,5,0.0,0.0,126.0,12.6,3.0,1,31,0,"[{""Name"": ""TwoHandBow"", ""Icon"": ""weapon_bow""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
31501,Appraiser_Apprise,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Set up a shop to identify unidentified items. The higher the skill level, the higher the chances of applying additional stats to the item.",Increased chances of additional item stats,,,,,,,,,,6,icon_arch_apprise,False,False,False,False,,,3013,Identify,0,60000,0,0,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31502,Appraiser_Overestimate,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Increases the enhancement values of your main weapon.,Enhancement: +#{CaptionRatio}#{nl}Duration: 300 seconds,"[""return skill.Level + 2""]",,,,,,,,,6,icon_arch_overestimate,False,False,False,False,,,3013,Overestimate,0,60000,0,209,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31503,Appraiser_Forgery,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Creates a forgery of the accessory your character is wearing. Only party members can use the forgery and receive its effects. The Appraiser will not receive the effects of the accessory when the forgery is used.,Forgery Duration: 30 seconds{nl}Buff Duration: #{CaptionRatio2}# seconds,,"[""var value = 75 + (skill.Level * 15);"", ""return value""]",,,,,,,,6,icon_arch_forgery,False,False,False,False,,,3013,Forgery,0,300000,0,235,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31504,Appraiser_Devaluation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Provides a chance to turn all enemy equipment enhancement and transcendence values to 0. When the enemy is a monster, reduces physical and magic attack and defense. This amount is reduced by half if the enemy is a boss monster.",Chance of Devaluation: 50%{nl}Targets: #{CaptionRatio}#{nl}Monster Physical/Magic Attack: -#{CaptionRatio2}#%{nl}Monster Physical/Magic Defense: -#{CaptionRatio3}#%{nl}Monster Duration: 120 seconds{nl}Character Duration: 20 seconds,"[""var value = skill.Level;"", ""return value""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Appraiser4\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Appraiser4\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 15"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Appraiser4\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Appraiser4\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 15"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value""]",,,,,,,6,icon_arch_devaluation,False,False,False,False,"[316002, 316004]",,3013,Devaluation,0,30000,0,131,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31505,Appraiser_Blindside,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Bow]{/}{/}{nl}Use a magnifying glass to find the enemy's blind side and attack. Foes around the attacked enemy will have a higher chance of being critically attacked.{nl}(The effects of Blindside and the character's critical rate apply separately.),Skill Factor: #{SkillFactor}#%{nl}Increases minimum critical chance by #{CaptionRatio2}#%{nl}Duration: #{CaptionRatio}# seconds,"[""return 10 + (skill.Level * 2);""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Appraiser3\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Appraiser3\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 5 + skill.Level"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Appraiser3\"")"", """", ""if (abil != null  &&  \""Appraiser3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_blindside,False,False,False,False,[316003],,3013,Blindside,3,40000,0,96,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 3]"
31506,Appraiser_Insurance,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Activates an insurance which reduces the penalties applied when you become incapable of combat.,Durability Penalty: -#{CaptionRatio}#%{nl}Silver Penalty: -#{CaptionRatio2}#%{nl}Blessed Shard Penalty: -#{CaptionRatio3}#%{nl}Duration: 300 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Appraiser5\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Appraiser5\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 6"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value;""]","[""var value = skill.Level * 5"", ""return value;""]","[""var value = skill.Level * 5"", ""return value;""]",,,,,,,6,icon_arc_insurance,False,False,False,False,[316005],643884,3013,Insurance,0,60000,0,209,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31701,PiedPiper_Dissonanz,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile]{/}{/}{nl}Play the flute to stun nearby enemies. If used against hidden enemies, the hiding effects are canceled and they become stunned. Enemies under the Dissonanz debuff receive damage every second for 6 seconds.",Attack: 100%{nl}Range: 160{nl}Stun Duration: 5 seconds{nl}Maximum Level: 1,,,,,,,,,,6,icon_arch_dissonanz,False,False,False,False,,,3012,Dissonanz,0,50000,0,170,0,0,0.0,1,13.0,0.0,318.0,10.5,-99.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[2]
31702,PiedPiper_Wiegenlied,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Piercing]{/}{/}{nl}Play the flute to lull nearby enemies to sleep. Sleeping enemies cannot evade or block, and the damage they receive applies as critical. When enemies wake or the duration ends, they have their accuracy momentarily lowered by the Drowsy debuff.",Duration: 10 seconds{nl}Maximum 1 Lullaby attack{nl}Drowsy Duration: #{CaptionRatio}# seconds{nl}Accuracy: -#{CaptionRatio2}#,"[""var value = 5 + skill.Level"", ""return value;""]","[""var value = 5 + (skill.Level * 2)"", ""return value;""]",,,,,,,,6,icon_arch_wiegenlied,False,False,False,False,,,3012,Wiegenlied,0,45000,0,150,0,0,0.0,15,13.0,0.0,100.0,0.0,-99.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6, 7]"
31703,PiedPiper_HypnotischeFlote,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Piercing]{/}{/}{nl}Play the flute to hypnotize nearby monsters. Hypnotized monsters will follow your character and become unable to evade or block. Applies only to regular monsters. Your character cannot be knocked back or knocked down during Hypnotische Floete. After the skill, affected enemies become confused.",Targets: #{CaptionRatio}#{nl}Confusion Debuff Duration: 3 seconds{nl}Maximum Duration: 10 seconds,"[""var value = 3 + skill.Level"", ""return value;""]",,,,,,,,,6,icon_arch_fluting,False,False,False,False,[318006],,3012,Hypnotische Floete,0,50000,0,157,0,0,0.0,15,13.0,0.0,100.0,0.0,-99.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6, 7]"
31704,PiedPiper_HamelnNagetier,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}When casting certain Pied Piper skills, summons a mouse and applies the Hameln Nagetier buff. You can have a maximum of 5 mice at any time. After the mice are summoned, you can use the Hameln Nagetier skill again to have the mice attack a designated spot. All mice disappear when the Hameln Nagetier buff is canceled.",Skill Factor: #{SkillFactor}#%{nl}Mouse-summoning skills:{nl}- Dissonanz{nl}- Wiegenlied{nl}- Hypnotische Floete{nl}- Friedenslied{nl}- Marschierendeslied,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""PiedPiper11\"")"", """", ""if (abil != null  &&  \""PiedPiper11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_hamelnnagetier,False,False,False,False,"[318011, 318013]",,3012,Hameln Nagetier,0,35000,0,138,0,0,0.0,15,13.0,0.0,177.0,5.9,-99.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
31705,PiedPiper_Friedenslied,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Piercing]{/}{/}{nl}Play the flute to make allies and enemies dance together for 1 seconds. Dancing allies receive no damage, while dancing enemies have one of their Lv. 1-3 buffs removed.{nl}{#00113F}Accelerates the cycle of the Burn Debuff on affected dancing enemies.{/}",Targets: #{CaptionRatio}#{nl}Max. Duration: 5 sec,"[""var value = 4 + skill.Level"", ""return value;""]",,,,,,,,,6,icon_arch_friedenslied,False,False,False,False,,,3012,Friedenslied,0,40000,0,144,0,0,0.0,10,13.0,0.0,100.0,0.0,-99.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6, 7]"
31706,PiedPiper_Marschierendeslied,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Applies a buff that makes you and your party members immune to knockback and knockdown. The buff count decreases with each attack received. Movement speed is increased for 5 seconds, and you receive additional defense counts if at least one party member is a Swordsman tree character.",Block Count: #{CaptionRatio}#{nl}Increases +15 movement speed for 5 seconds{nl}Duration: 60 seconds,"[""var value = 10 + skill.Level"", ""return value;""]",,,,,,,,,6,icon_arch_marschierendeslied,False,False,False,False,,,3012,Marschierendeslied,0,60000,0,209,0,0,0.0,10,13.0,0.0,100.0,0.0,-99.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31707,PiedPiper_LiedDerWeltbaum,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Applies a buff that increases both the damage dealt and the damage received by you and your party members. Nullifies a set number of enemy attacks. Nearby enemies attack those under the buff.{nl}{#00113F}While the buff is active, Mergen attack skills have their AoE attack ratio increased by +2.{/}",Damage Dealt: +#{CaptionRatio}#%{nl}Damage Received: +#{CaptionRatio2}#%{nl}Ignores 3 attacks{nl}Duration: #{CaptionTime}# seconds,"[""var value = 50 + (skill.Level * 10)"", ""return value;""]","[""var value = 50 + (skill.Level * 10)"", ""return value;""]",,"[""var value = 10"", ""var abil = GetAbility(pc, \""PiedPiper15\"")"", """", ""if (abil != null  &&  TryGetProp(abil, \""ActiveState\"") == 1) {"", ""    value = value + TryGetProp(abil, \""Level\"")"", ""}"", """", ""return value;""]",,,,,,6,icon_arch_liedderweltbaum,False,False,False,False,[318015],,3012,Lied des Weltbaum,0,50000,0,196,0,0,0.0,5,13.0,0.0,100.0,0.0,-99.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
31708,PiedPiper_Improvisation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Play the flute to deploy one Pied Piper skill at random from the list of skills you have learned. The skill will be activated even if you fail to play the flute, but its effects will be reduced. Stegreifspiel does not affect the cooldown of the skills it activates.","Castable Skills{nl}* Dissonanz{nl} : If failed, duration reduces 50%{nl}* Wiegenlied{nl} : If failed, Drowsy effects reduce by 50%{nl}* Marschierendeslied{nl} : If failed, duration reduces 50%{nl}* Lied des Weltbaum{nl} : If failed, duration reduces 50%{nl}Maximum Level: 1",,,,,,,,,,6,icon_arch_improvisation,False,False,False,False,[318016],,3012,Stegreifspiel,0,70000,0,183,0,0,0.0,1,13.0,0.0,100.0,0.0,-99.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
40001,Cleric_Heal,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Restores the HP of a selected target. The amount of HP restored depends on the caster's Healing stat.,Heal Factor: #{CaptionRatio2}#%,,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Cleric12\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Cleric12\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 588 + (skill.Level - 1) * 103"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value);""]",,,,,,,,3,icon_cler_heal,False,False,False,False,"[401004, 401021]",643716,4001,Heal,2,10000,0,124,0,0,0.0,5,0.0,0.0,0.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40002,Cleric_Cure,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Cure allies with a Lv. 1 status ailment or inflict damage on enemies.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Cleric11\"")"", """", ""if (abil != null  &&  \""Cleric11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_cure,False,True,False,False,[401001],643717,4001,Cure,2,20000,0,157,0,0,0.0,5,0.0,0.0,76.0,2.6,6.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40006,Cleric_Fade,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Erases the threat of monsters making them stop any attacks on you.,Duration: #{CaptionTime}# seconds,,,,"[""var value = 10 + skill.Level * 2"", ""return Math.floor(value);""]",,,,,,3,icon_cler_fade,False,False,False,False,,643721,4001,Fade,0,30000,0,180,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40007,Cleric_PatronSaint,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Increases the caster's Healing ability.,Guardian Saint Duration: 60 sec{nl}Healing: +#{CaptionRatio}#%,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Cleric23\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Cleric23\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 5"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value;""]",,,,,,,,,3,icon_cler_patronsaint,False,False,False,False,[401022],643722,4001,Guardian Saint,0,60000,0,225,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40008,Cleric_Smite,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Strike down enemies with a powerful attack. Deals additional damage to Mutant- and Demon-type enemies.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Paladin14\"")"", """", ""if (abil != null  &&  \""Paladin14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_cler_smite,False,False,False,False,[407002],643898,4001,Smite,5,12000,0,65,0,0,0.0,5,0.0,0.0,257.0,8.5,4.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
40101,Kriwi_Aukuras,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Fire]{/}{/}{nl}Summon a holy torch. Standing near the torch reduces the duration of harmful effects, and adds Fire property damage to your close-range magic attacks.",Torch Duration: 60 seconds{nl}Additional Fire Damage on Magic Attacks: #{CaptionRatio2}#,,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Kriwi14\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Kriwi14\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 100 + (skill.Level * 45)"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return Math.floor(value)""]",,,,,,,,2,icon_cler_aukuras,False,True,False,False,[402004],643731,4003,Aukuras,0,30000,0,172,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40102,Kriwi_Zalciai,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Creates a magic circle that increases the critical abilities of allies or decreases the critical abilities of enemies.,Ally Physical and Magic Critical Attack: +#{CaptionRatio}#%{nl}Enemy Critical Resistance: -#{CaptionRatio2}#%,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Kriwi17\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Kriwi17\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return value""]","[""var value = skill.Level"", ""return value""]",,,,,,,,3,icon_cler_zalciai,False,True,False,False,"[402013, 402018, 402019]",643732,4003,Zalciai,0,30000,0,195,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40103,Kriwi_Daino,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Increases your accuracy.,Accuracy: +#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""var value = skill.Level * 5"", ""return value;""]",,,"[""var value = 10 + (skill.Level * 2);"", ""return value;""]",,,,,,3,icon_cler_daino,False,True,False,False,,643733,4003,Daino,0,50000,0,210,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40104,Kriwi_Zaibas,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Lightning]{/}{/}{nl}Create a magic circle that calls down bolts of lightning on an enemy using the power of the God of Thunder.,Skill Factor: #{SkillFactor}#% per 0.3 seconds{nl}Number of Hits: #{CaptionRatio}#{nl}Magic Circle Duration: 5 seconds,"[""return 4 + skill.Level * 1;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Kriwi11\"")"", """", ""if (abil != null  &&  \""Kriwi11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,5,icon_cler_zaibas,False,False,False,False,[402001],643734,4003,Zaibas,3,20000,0,94,0,0,0.0,15,0.0,0.0,56.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40105,Kriwi_DivineStigma,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Engrave a stigma on the enemy and deal Fire magic damage. The stigmatized enemy receives additional damage, and after they are defeated your STR and INT increase momentarily.",Skill Factor: #{SkillFactor}#%{nl}STR and INT: +#{CaptionRatio}#%{nl}Effect Duration: #{CaptionTime}# seconds{nl}Stigma Duration: 15 seconds{nl}Damage to Enemies: +#{CaptionRatio2}#%{nl}Stigma Targets: 5,"[""var value = skill.Level"", ""return value""]","[""var value = skill.Level * 5"", ""return value""]",,"[""var value = 60;"", ""var abil = GetAbility(pc, \""Kriwi9\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + (abil.Level * 6);"", ""}"", """", ""return Math.floor(value);""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Kriwi20\"")"", """", ""if (abil != null  &&  \""Kriwi20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_cler_divinestigma,False,False,False,False,"[402011, 402015, 402016]",643735,4003,Divine Stigma,0,30000,0,195,0,0,0.0,10,0.0,0.0,236.0,11.8,2.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40106,Kriwi_Melstis,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Applies a buff that extends the duration of beneficial effects on yourself. The amount of time that effects are extended by will not surpass 20 seconds. Does not apply to invincibility effects.,Duration +#{CaptionRatio2}#%{nl}Consumes Holy Powder x5,,"[""var value = skill.Level * 20"", ""return value""]",,,,,,,,6,icon_cler_melstis,False,False,False,False,,643736,4003,Melstis,0,90000,0,270,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,5,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40201,Priest_Aspersion,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Sprinkle holy water to help increase the physical defense of you and your allies.,Physical Defense: +#{CaptionRatio}#%{nl}Targets: 10{nl}Duration: #{CaptionTime}# seconds{nl}Consumes Holy Water x1,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Priest11\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Priest11\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var pcLevel = pc.Lv"", ""var pcMNA = pc.MNA"", ""var mnaRate = (pcMNA / (pcMNA + pcLevel) * 2) + 0.15"", ""var skillValue = skill.Level"", ""var value = skillValue * mnaRate"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,"[""return 300;""]",,,,,,3,icon_cler_aspersion,False,False,False,False,[403001],643723,4002,Aspersion,0,20000,0,172,0,0,0.0,15,0.0,0.0,100.0,0.0,10.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40202,Priest_Monstrance,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Reduces the evasion of enemies in front of you.,Enemy Evasion: -#{CaptionRatio2}#%{nl}Duration: 30 seconds,,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Priest27\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Priest27\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 5 + skill.Level * 3"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,,,,,,3,icon_cler_monstrance,False,True,False,False,[403016],643724,4002,Monstrance,0,20000,0,180,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40203,Priest_Blessing,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Gives a blessing granting additional damage to the attacks of your party members and allies.,Additional Damage: +#{CaptionRatio}#{nl}Allies Affected: #{CaptionTime}#{nl}Duration: 300 seconds{nl}Consumes 1 Holy Powder,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Priest13\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Priest13\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var pcMNA = pc.MNA"", ""var pcLevel = pc.Lv"", ""var pcLevelRate = (pcLevel / 7) + 10"", ""var baseDamageValue = 180 + (skill.Level - 1) * pcLevelRate"", ""var pcMnaRate = (pcMNA / (pcMNA + pcLevel) * 2) + 0.15"", ""var value = baseDamageValue * pcMnaRate"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value);""]",,,"[""var value = 2"", ""var Priest6_abil = GetAbility(pc, 'Priest6');"", """", ""if (Priest6_abil != null  &&  1 == Priest6_abil.ActiveState) {"", ""    value = value + Priest6_abil.Level"", ""}"", """", ""return value""]",,,,,,3,icon_cler_blessing,False,False,False,False,"[403004, 403008]",643725,4002,Blessing,0,35000,0,195,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40204,Priest_Resurrection,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Resurrects a target that has been defeated in combat.{nl}In Team Battle League, allows for 1 resurrection per round.",Restores #{CaptionRatio}#% HP after resurrecting target,"[""var value = skill.Level * 10"", ""return value""]",,,,,,,,,3,icon_cler_resurrection,False,False,False,False,,,4002,Resurrection,0,30000,0,180,0,0,0.0,5,0.0,0.0,100.0,0.0,20.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40205,Priest_Sacrament,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Temporarily grants the Holy property to your and your party member's attacks.{nl}Targets under the Last Rites buff will not receive the Sacrament buff.,Holy Property Attack: +#{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds{nl}Consumes 1 Gyslotis,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Priest29\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Priest29\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var pcLevel = pc.Lv"", ""var pcMNA = pc.MNA"", ""var pcLevelRate = (pcLevel / 7) + 10"", ""var baseDamageValue = 180 + (skill.Level - 1) * pcLevelRate"", ""var pcMnaRate = (pcMNA / (pcMNA + pcLevel) * 2) + 0.15"", ""var value = baseDamageValue * pcMnaRate"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value)""]",,,"[""return 200 + skill.Level * 20;""]",,,,,,3,icon_cler_sacrament,False,False,False,False,"[403009, 403018]",643726,4002,Sacrament,0,90000,0,262,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40206,Priest_Revive,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Prevents one from becoming Incapable of Combat once.,HP Recovery: #{CaptionRatio}#%{nl}Invincibility: #{CaptionRatio2}# seconds{nl}Duration: #{CaptionTime}# seconds,"[""var value = 10 * skill.Level"", ""return value""]","[""return skill.Level;""]",,"[""var value = 90"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = 30"", ""}"", """", ""var Priest21_abil = GetAbility(pc, 'Priest21')"", """", ""if (Priest21_abil != null  &&  1 == Priest21_abil.ActiveState  &&  IsPVPServer(pc) == 0) {"", ""    value = value + Priest21_abil.Level * 7"", ""}"", """", ""return value""]",,,,,,3,icon_cler_protection,False,False,False,False,[403011],643727,4002,Revive,0,120000,0,270,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40209,Priest_MassHeal,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Restores the HP of nearby allies.,Heal Factor: #{CaptionRatio}#%,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Priest26\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Priest26\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 1058 + (skill.Level - 1) * 211"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value""]",,,,,,,,,3,icon_cler_massheal,False,False,False,False,[403015],643728,4002,Mass Heal,0,15000,0,150,0,0,0.0,5,0.0,0.0,0.0,0.0,1.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40211,Priest_TurnUndead,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Inflicts Holy-property magic damage to enemies all around, with a chance of defeating Mutant or Demon enemies instantly (does not apply to characters or boss monsters).{nl}{#00113F}Mutant and Demon enemies under the Malleus Maleficarum debuff that survive Turn Undead become stunned for 3 seconds.{/}{nl}{#00113F}While Engkrateia is active, the AoE attack ratio of Turn Undead increases by 50%.{/}",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Priest28\"")"", """", ""if (abil != null  &&  \""Priest28\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = 8 + skill.Level"", """", ""if (IsBuffApplied(pc, \""Engkrateia_Buff\"") == \""YES\"") {"", ""    value = Math.floor(value * 1.5)"", ""}"", """", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,3,icon_cler_turnundead,False,True,False,False,[403017],643899,4002,Turn Undead,0,15000,0,142,0,0,0.0,15,0.0,0.0,328.0,10.9,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40401,Dievdirbys_CarveVakarine,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Carve a statue of Vakarine, the Goddess of the Evening Star. You may warp to other areas through the Goddess Statue.",Allows 10 warps{nl}Statue Duration: 60 seconds{nl}Consumes Sculpting Wood x3{nl}Maximum Level: 1,,,,,,,,,,6,icon_cler_cravevakarine,False,False,False,False,,643755,4007,Statue of Goddess Vakarine,0,85000,0,217,0,0,0.0,1,0.0,0.0,100.0,0.0,50.0,3,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
40402,Dievdirbys_CarveZemina,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Carve a statue of Zemyna, the goddess of the earth. Decreases the SP cost and SP recovery time when using skills for nearby allies who are within the radius of the Goddess Statue.",SP: -#{CaptionRatio}#%{nl}SP recovery shortened by 5 seconds{nl}Statue Duration: #{CaptionRatio2}# seconds{nl}Consumes Sculpting Wood x3,"[""var value = 1.5 * skill.Level"", ""return value""]","[""var value = 15 + (skill.Level * 2)"", ""return value""]",,,,,,,,6,icon_cler_cravezemyna,False,False,False,False,,643756,4007,Statue of Goddess Zemyna,0,60000,0,187,0,0,0.0,15,0.0,0.0,100.0,0.0,50.0,3,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
40403,Dievdirbys_CarveLaima,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Carve a statue of Laima, the Goddess of Fate. Within range of the statue, party members have their skill cooldown reduced, while enemies have theirs increased. The statue also reduces enemies' movement speed.",Ally Cooldown: -#{CaptionRatio}#%{nl}Enemy Cooldown: -20%{nl}Enemy Movement Speed: -#{CaptionTime}#%{nl}Statue Duration: 60 seconds{nl}Consumes Sculpting Wood x3,"[""var value = skill.Level * 2"", ""return value""]",,,"[""var value = 10"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = Math.floor(value * 0.5);"", ""}"", """", ""return value;""]",,,,,,6,icon_cler_cravelaima,False,False,False,False,,643757,4007,Statue of Goddess Laima,0,50000,0,172,0,0,0.0,10,0.0,0.0,100.0,0.0,50.0,3,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
40404,Dievdirbys_Carve,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Attack the target using a carving knife. Plant-type monsters take additional bonus damage.,Skill Factor: #{SkillFactor}#% x 5{nl}+#{CaptionRatio}# additional damage to Plant monsters{nl}AoE Attack Ratio: 1,"[""var value = skill.Level * 5"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Dievdirbys11\"")"", """", ""if (abil != null  &&  \""Dievdirbys11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_woodcarve,False,False,False,False,"[405001, 405012]",643758,4007,Carve Attack,5,35000,0,84,0,0,0.0,15,0.0,0.0,78.0,2.6,-1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
40405,Dievdirbys_CarveOwl,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic]{/}{/}{nl}Carve an Owl Sculpture to watch over you, attacking enemies nearby.",Summon Skill Factor: #{SkillFactor}#%{nl}Defense Count: #{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds{nl}Consumes Sculpting Wood x3,"[""var value = 50;"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = 25;"", ""}"", """", ""return value""]",,,"[""var value = 20 + skill.Level * 2;"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Dievdirbys12\"")"", """", ""if (abil != null  &&  \""Dievdirbys12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_craveowl,False,False,False,False,[405004],643759,4007,Carve Owl,0,15000,0,120,0,0,0.0,15,0.0,0.0,36.0,1.2,50.0,3,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40406,Dievdirbys_CarveAustrasKoks,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Strike] - [Physical]{/}{/}{nl}Carve a divine World Tree that silences nearby enemies and reduces their evasion.,Enemy Evasion: -#{CaptionRatio2}#%{nl}Statue Duration: #{CaptionRatio}# seconds{nl}Consumes Sculpting Wood x3,"[""var value = 15 + skill.Level * 2"", ""return value""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Dievdirbys19\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Dievdirbys19\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 4"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return value""]",,,,,,,,6,icon_cler_craveaustraskoks,False,False,False,False,[405013],643760,4007,Carve World Tree,0,60000,0,187,0,0,0.0,10,0.0,0.0,100.0,0.0,50.0,3,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 9, 6]"
40407,Dievdirbys_CarveAusirine,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Strike] - [Physical]{/}{/}{nl}Carve a statue of Ausrine, Goddess of the Morning Star. The statue amplifies the stats of other statues installed nearby.",Goddess Zemyna{nl}- The buff remains for #{CaptionRatio}# seconds even after moving away from the statue{nl}Goddess Laima{nl}- The buff remains for #{CaptionRatio}# seconds even after moving away from the statue{nl}Owl Sculpture{nl}- Shortens the damage cycle by 0.2 seconds{nl}Statue Duration: 20 seconds{nl}Consumes Sculpting Wood x5,"[""var value = skill.Level * 60"", ""return value""]",,,,,,,,,6,icon_cler_craveausirine,False,False,False,False,,643761,4007,Statue of Goddess Ausrine,0,70000,0,202,0,0,0.0,5,0.0,0.0,100.0,0.0,50.0,5,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 9, 6]"
40501,Sadhu_OutofBody,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Soul]{/}{/}{nl}Move your spirit out of your body. The spirit can only move near your body. Your evasion increases while the spirit is outside your body.,Astral Basic Attack Skill Factor: #{SkillFactor}#%{nl}Astral Movement Range: #{CaptionRatio}#{nl}Evasion: +#{CaptionRatio2}#%{nl}Astral Movement Speed: 55,"[""return 180""]","[""var value = skill.Level"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sadhu23\"")"", """", ""if (abil != null  &&  \""Sadhu23\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,8,icon_cler_oobe,False,False,False,False,[406017],643751,4006,Out of Body,0,0,0,0,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40502,Sadhu_Prakriti,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic] - [Soul]{/}{/}{nl}Move towards your astral body and unite with it, generating a magic circle on the spot that attacks enemies. Can only be used when you are out of body.",Skill Factor: #{SkillFactor}#% per second{nl}Magic Circle Duration: #{CaptionRatio}# seconds,"[""var value = 3 + skill.Level * 0.3"", ""return value""]",,,,"[""var sklFactor;"", """", ""if (skillOwner.ClassName == 'PC') {"", ""    var atkType = skill.AttackType;"", ""    var attribute = skill.Attribute;"", ""    var atkTypebyItem = GetSumOfEquipItem(skillOwner, atkType);"", ""    var attributebyItem = GetSumOfEquipItem(skillOwner, attribute);"", ""    sklFactor = skill.SklFactor + (skill.Level - 1) * skill.SklFactorByLevel + atkTypebyItem + attributebyItem;"", ""    return Math.floor(sklFactor);"", ""} else {"", ""    sklFactor = skill.SklFactor + (skill.Level - 1) * skill.SklFactorByLevel;"", ""    return Math.floor(sklFactor);"", ""}"", """"]",,,,,8,icon_cler_prakriti,False,False,False,False,[406009],,4006,Prakriti,0,20000,0,165,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40503,Sadhu_VashitaSiddhi,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Soul]{/}{/}{nl}Split your spirit into multiple parts near your body and detonate them to deal damage.{nl}{#00113F}30% of Vashita Siddhi's damage is added as Holy-property attack when the skill is used on enemies affected by Aqua Benedicta.{/},Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sadhu25\"")"", """", ""if (abil != null  &&  \""Sadhu25\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,8,icon_cler_hamasiddhi,False,False,False,False,[406019],643753,4006,Vashita Siddhi,0,40000,0,180,0,0,0.0,10,0.0,0.0,649.0,32.5,15.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40504,Sadhu_AstralBodyExplosion,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Soul]{/}{/}{nl}Inflict damage on nearby enemies by separating your soul from your body to cause an explosion. Attacked enemies receive a percentage of Psychokinesis magic damage for 5 seconds.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sadhu11\"")"", """", ""if (abil != null  &&  \""Sadhu11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,8,icon_cler_oobe_destruct,False,False,False,False,"[406001, 406018]",643752,4006,Astral Body Explosion,0,20000,0,150,0,0,0.0,15,0.0,0.0,228.0,7.6,10.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40505,Sadhu_Possession,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Soul]{/}{/}{nl}Bind an enemy to stop them from moving and inflict damage.,Skill Factor: #{SkillFactor}#% per 0.3 seconds{nl}Targets: #{CaptionRatio2}#{nl}Maximum Duration: 4 seconds,,"[""var value = skill.Level * 1 + 4;"", ""return Math.floor(value)""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Sadhu12\"")"", """", ""if (abil != null  &&  \""Sadhu12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,8,icon_cler_possession,False,False,False,False,[406005],643754,4006,Possession,0,20000,0,150,0,0,0.0,10,0.0,0.0,114.0,5.7,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40506,Sadhu_TransmitPrana,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Grants additional Psychokinesis damage to magic attacks in proportion to your minimum magic attack value. Psychokinesis-property skill attacks you use are granted additional damage, but you receive more damage when you are hit by attacks of that same property.",Duration: #{CaptionTime}# seconds{nl}#{CaptionRatio}#% additional Psychokinesis property damage in proportion to magic attack{nl}#{CaptionRatio2}#% additional damage applied to Psychokinesis property attacks{nl}Additional #{CaptionRatio3}#% damage received from Psychokinesis attacks,"[""var value = 5 + (skill.Level * 3)"", ""return Math.floor(value)""]","[""var value = skill.Level * 15"", ""return value""]","[""var value = 50 - (skill.Level * 5)"", ""return value""]","[""var value = 30"", ""return value""]",,,,,,6,icon_cler_transmitprana,False,False,False,False,,,4006,Prana,0,60000,0,240,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40602,Paladin_Restoration,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Activate your aura to heal yourself and allies nearby.{nl}{#00113F}The amount of HP recovered increases by 10% when the Guardian Saint buff is active.{/},Heal Factor: #{CaptionRatio}#% per 3 seconds{nl}Aura Duration: 60 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Paladin25\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Paladin25\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 107 + (skill.Level - 1) * 6.2"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,,,,,,,3,icon_cler_restoration,False,True,False,False,[407020],643781,4011,Restoration,0,60000,0,217,0,0,0.0,15,0.0,0.0,0.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40603,Paladin_ResistElements,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Momentarily increases Fire, Ice, Lightning, Poison and Earth property resistance for you and your party members, reducing the damage received from attacks of those properties.",Property Damage Taken: -#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Paladin26\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Paladin26\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 10 + skill.Level * 2"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,"[""var value = 45"", ""return Math.floor(value)""]",,,,,,3,icon_cler_resistelements,False,False,False,False,[407021],643782,4011,Resist Elements,0,90000,0,270,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40606,Paladin_Barrier,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Push enemies away and create a barrier of protection which doesn't allow others to enter for some time. Increases the magic defense of allies who are inside the barrier.,Magic Defense: +#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds{nl}Consumes Holy Water x10,"[""var value = 10 * skill.Level"", ""return value""]",,,"[""var value = skill.Level * 4"", ""return Math.floor(value)""]",,,,,,3,icon_cler_barrier,False,True,False,False,[407016],643785,4011,Barrier,0,30000,0,187,0,0,0.0,5,0.0,0.0,100.0,0.0,50.0,10,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40607,Paladin_Conviction,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Attack an enemy, marking them as a traitor. Increases the Fire, Ice, Lightning, Earth and Poison damage taken by the enemy that receives the attack. Deals additional damage to stunned enemies.{nl}{#00113F}Enemies under Death Sentence that are killed with Conviction deal damage to other nearby enemies when they're defeated.{/}",Skill Factor: #{SkillFactor}#% x 2{nl}AoE Attack Ratio: #{SkillSR}#{nl}+#{CaptionRatio2}#% damage received from property attacks when affected by {#339999}{ol}[Conviction]{/}{/}{nl}{#339999}{ol}[Conviction]{/}{/} Duration: #{CaptionTime}# seconds{nl}20% additional damage dealt to enemies afflicted with {#339999}{ol}[Stun]{/}{/},,"[""var value = skill.Level * 2;"", ""return value""]",,"[""var value = 20"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Paladin17\"")"", """", ""if (abil != null  &&  \""Paladin17\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_cler_conviction,False,False,False,False,[407011],643786,4011,Conviction,5,25000,0,76,0,0,0.0,15,0.0,0.0,169.0,5.6,4.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
40608,Paladin_Sanctuary,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Increases allies' physical defense and magic defense within the range. Also deals additional Holy property damage equivalent to the increased defense value.,Physical Defense: +#{CaptionRatio}#%{nl}Magic Defense: +#{CaptionRatio2}#%{nl}Maximum Duration: 10 seconds {nl}Consumes Holy Water x#{SpendItemCount}# {nl}Consumes #{CaptionRatio3}# SP per second,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Paladin27\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Paladin27\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 3 * skill.Level"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]","[""var MDEF = pc.MDEF;"", ""var mdefRate = MDEF * (0.1 * skill.Level)"", ""return Math.floor(mdefRate)""]","[""var value = 30"", ""var level = pc.Lv"", ""var bylvCorrect = level - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""value = value * (1 + bylvCorrect)"", ""return Math.floor(value)""]",,,,"[""return skill.SpendItemBaseCount;""]",,,3,icon_cler_sanctuary,False,False,False,False,[407022],643854,4011,Sanctuary,0,40000,0,0,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,10,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordShield"", ""Icon"": ""weapon_shield""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40609,Paladin_Demolition,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Strike the enemy hard with a two-handed blunt weapon. Deals additional damage to enemies under the Conviction debuff.,Skill Factor: #{SkillFactor}#% x 7{nl}AoE Attack Ratio: #{SkillSR}#{nl}Deals #{CaptionRatio}#% additional damage to enemies affected by Conviction,"[""var value = skill.Level * 2;"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Paladin21\"")"", """", ""if (abil != null  &&  \""Paladin21\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_cler_demolition,False,False,False,False,"[407017, 407018]",643855,4011,Demolition,0,25000,0,162,0,0,0.0,10,0.0,0.0,97.0,4.9,12.0,1,16,0,"[{""Name"": ""TwoHandMace"", ""Icon"": ""weapon_tmace""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
40610,Paladin_StoneSkin,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Strengthen your skin to reduce the damage received from physical and magic attacks.,Damage Taken: -#{CaptionRatio}#%{nl}Duration: 300 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Paladin24\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Paladin24\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 0.4"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,,,,,,,3,icon_cler_stoneskin,False,False,False,False,[407019],643900,4011,Stone Skin,0,40000,0,165,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40701,Monk_IronSkin,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Temper your skin to become hard as steel and momentarily reduce the damage you receive from enemy physical attacks.,Physical Damage Taken: -#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""var value = skill.Level * 0.5"", ""return value""]",,,"[""return 300;""]",,,,,,6,icon_cler_ironskin,False,False,False,False,,643767,4009,Iron Skin,0,60000,0,225,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40702,Monk_DoublePunch,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Use your trained fists to attack an enemy in quick succession. Basic attacks apply as two-handed.,Skill Factor: #{SkillFactor}#% x 2{nl}Basic Attack Speed: +#{CaptionRatio}#,"[""var value = skill.Level * 20"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Monk12\"")"", """", ""if (abil != null  &&  \""Monk12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_doublepunch,False,False,False,False,[408001],643768,4009,Double Punch,0,0,0,0,0,0,0.0,15,0.0,0.0,50.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
40703,Monk_PalmStrike,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Use your trained fingertips to attack the enemy by inflicting an internal injury. Ignores part of the enemy's defense.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}Ignores #{CaptionRatio}#% of enemy defense,"[""var value = 0.5 * skill.Level"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Monk15\"")"", """", ""if (abil != null  &&  \""Monk15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_cler_palmstrike,False,False,False,False,[408003],643769,4009,Palm Strike,4,20000,0,86,0,0,0.0,15,0.0,0.0,346.0,11.5,6.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
40704,Monk_HandKnife,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Strike with a powerful hand knife to deal damage on an enemy. Hand Knife can be used after Palm Strike. Deals additional damage proportional to the enemy's SPR (additional damage does not exceed your character's maximum attack).,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Monk18\"")"", """", ""if (abil != null  &&  \""Monk18\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_cler_handknife,False,False,False,False,"[408005, 408012]",643770,4009,Hand Knife,0,0,0,111,0,0,0.0,1,0.0,0.0,428.0,14.2,10.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
40705,Monk_1InchPunch,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Extend your fist from a close distance to destroy the enemy from the inside. The attacked enemy will steadily lose HP and SP.,Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionTime}# seconds,,,,"[""return 5 + skill.Level * 1;""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Monk21\"")"", """", ""if (abil != null  &&  \""Monk21\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_inchpunch,False,False,False,False,"[408007, 408013]",643772,4009,One Inch Punch,4,20000,0,84,0,0,0.0,10,0.0,0.0,177.0,8.9,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
40706,Monk_EnergyBlast,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Holy]{/}{/}{nl}Harness energy and release it in front of you, dealing damage and pushing back all enemies in your path.{nl}{#00113F}Enemies under the Divine Stigma debuff receive twice the hits from Energy Blast.{/}",Skill Factor: #{SkillFactor}#% per hit{nl}Consumes #{CaptionRatio3}# SP per second,,,"[""var value = 35 + skill.Level * 1;"", ""return value;""]",,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Monk23\"")"", """", ""if (abil != null  &&  \""Monk23\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_energyblast,False,False,False,False,"[408008, 408015]",643771,4009,Energy Blast,0,20000,0,0,0,0,0.0,10,0.0,0.0,150.0,7.5,25.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
40707,Monk_God_Finger_Flicking,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Throw a coin by using the tip of your finger to inflict damage on an enemy. The target receives additional Strike damage for 10 seconds.,Skill Factor: #{SkillFactor}#%{nl}Strike Damage: +50%{nl}Consumes #{SpendItemCount}# Silver,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Monk24\"")"", """", ""if (abil != null  &&  \""Monk24\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,6,icon_cler_godfingerflicking,False,False,False,False,[408009],643773,4009,God Finger Flick,4,25000,0,80,0,0,0.0,10,0.0,0.0,309.0,15.5,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
40708,Monk_Golden_Bell_Shield,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Use to reset the cooldown time and momentarily increase the damage of Monk skills.,Monk Skill Damage: +#{CaptionRatio}#%{nl}Duration: 10 seconds,"[""var value = 10 * skill.Level;"", ""return value""]",,,,,,,,,6,icon_cler_glodenbellshield,False,False,False,False,,643774,4009,Golden Bell Shield,0,60000,0,225,0,0,0.0,5,7.2,0.0,100.0,0.0,50.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
40801,Pardoner_Simony,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Create a scroll out of one of your skills, allowing others to use it. You can only craft scrolls of maximum-level skills (Divine Might effects do not apply).",Scrolls disappear after use.,,,,,,,,,,6,icon_cler_simony,False,False,False,False,,643775,4010,Simony,0,0,0,0,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40802,Pardoner_Indulgentia,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Applies the Indulgentia buff to nearby allies. While the buff is active, targets recover HP in regular intervals.{nl}{#00113F}The amount of HP recovered increases by 10% when the Guardian Saint buff is active.{/}",Healing Factor: #{CaptionRatio2}#%{nl}Heals #{CaptionRatio}# allies{nl}Duration: 10 seconds,"[""var value = 3 + skill.Level"", ""return value""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Pardoner1\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Pardoner1\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 64 + (skill.Level - 1) * 8.5"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,,,,,,3,icon_cler_indulgentia,False,False,False,False,[409001],643776,4010,Indulgentia,0,30000,0,142,0,0,0.0,15,0.0,0.0,0.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40803,Pardoner_DiscernEvil,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Extends the duration of harmful effects applied to enemies. Once the duration has been increased, the debuff doesn't increase again.{nl}{#00113F}Enemies affected by Discerning Evil who enter an area of Holy-property attack transfer their debuff to other nearby enemies.{/}",Skill Factor: #{SkillFactor}#%{nl}Extends the remaining duration of debuffs by #{CaptionRatio}#%,"[""var value = 25 + skill.Level * 5"", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Pardoner10\"")"", """", ""if (abil != null  &&  \""Pardoner10\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_amplify,False,False,False,False,[409010],643777,4010,Discerning Evil,0,15000,0,127,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40804,Pardoner_Oblation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Open an Offering Box to receive donations from allies. Can only be opened near Goddess Statues in fields (not in cities).,Maximum Donations: #{CaptionRatio}#,"[""var value = 100 * skill.Level"", ""return value""]",,,,,,,,,6,icon_cler_oblation,False,False,False,False,,643779,4010,Oblation,0,0,0,0,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40805,Pardoner_SpellShop,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Open a shop to sell Grace buffs to other characters. Shop prices increase when installed in a map with a dungeon.,Buffs you can sell:{nl} * Grace: Additional Holy Hits{nl} * Grace: Additional Holy Damage{nl} * Grace: Increase Magic Defense{nl} * Grace: Increase Physical Defense{nl}Buff Duration: #{CaptionRatio}# minutes,"[""var value = 6 * skill.Level"", ""var abil = GetAbility(pc, \""Pardoner4\"")"", """", ""if (abil != null  &&  1 == abil.ActiveState) {"", ""    value = value + (abil.Level * 2);"", ""}"", """", ""return value""]",,,,,,,,,6,icon_cler_spellshop,False,False,False,False,[409005],,4010,Spell Shop,0,0,0,0,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
40808,Pardoner_IncreaseMagicDEF,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Temporarily increases the magic defense of you and your party members. The increase applies in proportion to the caster's SPR.,Magic Defense: +#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds{nl}Consumes Holy Water x#{SpendItemCount}#,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Pardoner11\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Pardoner11\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 1.5"", ""var pcStat = TryGetProp(pc, \""MNA\"", 1)"", ""var pcLevel = TryGetProp(pc, \""Lv\"", 1)"", ""var casterMnaRate = (pcStat / (pcStat + pcLevel) * 2) + 0.15"", ""value = value * casterMnaRate"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,"[""var value = 300"", ""var abil = GetAbility(pc, \""Pardoner6\"")"", ""var ActiveState = TryGetProp(abil, \""ActiveState\"")"", """", ""if (abil != null  &&  ActiveState == 1) {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var abilValue = abilLevel * 20"", ""    value = value + abilValue"", ""}"", """", ""return value""]",,,"[""return skill.SpendItemBaseCount;""]",,,3,icon_cler_increasemagicdef,False,False,False,False,[409011],643778,4010,Increase Magic Defense,0,87000,0,262,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40809,Pardoner_Dekatos,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Attack an enemy with money collected as offerings.,Skill Factor: #{SkillFactor}#%{nl}Consumes #{SpendItemCount}# Silver,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Pardoner7\"")"", """", ""if (abil != null  &&  \""Pardoner7\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,"[""return skill.SpendItemBaseCount;""]",,,6,icon_cler_dekatos,False,False,False,False,[409008],643856,4010,Dekatos,3,20000,0,92,0,0,0.0,10,0.0,0.0,512.0,25.6,0.0,300,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
40902,Druid_Carnivory,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}After defeating an enemy under the effects of Rash due to Chortasmata, you can generate carnivorous plants in the same spot. Corpse Flower stats depend on the level of the defeated enemy.",Summons up to #{CaptionRatio}# Corpse Flowers{nl}Corpse Flower Damage: +#{CaptionRatio2}#%{nl}Corpse Flower Duration: 20 seconds{nl}Buff Duration: 30 seconds,"[""var value = 1 + ((skill.Level * 1) / 2)"", ""return Math.ceil(value)""]","[""var value = (skill.Level * 10)"", ""return Math.floor(value)""]",,,,,,,,6,icon_cler_carrivory,False,False,False,False,,643746,4005,Carnivory,0,30000,0,187,0,0,0.0,15,0.0,0.0,118.0,3.9,50.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40903,Druid_ShapeShifting,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Transform into a monster of the Animal-type, Plant-type or Insect-type in front of you for a given duration.",Able to use the monster's skill{nl}Maximum Duration: #{CaptionTime}# seconds{nl}Maximum Level: 1,,,,"[""var value = 50 + skill.Level * 10"", ""return value""]",,,,,,6,icon_cler_shapeshifting,False,False,False,False,[410020],643749,4005,Shape Shifting,0,120000,0,255,0,0,0.0,1,0.0,0.0,100.0,0.0,50.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40904,Druid_Transform,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Transform back into the monster that you last shape shifted to.,Able to use the monster's skill{nl}Maximum Duration: #{CaptionTime}# seconds{nl}Maximum Level: 1,,,,"[""var value = 50 + skill.Level * 10"", ""return value""]",,,,,,6,icon_cler_transform,False,False,False,False,[410020],643748,4005,Transform,0,120000,0,255,0,0,0.0,1,0.0,0.0,100.0,0.0,50.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40905,Druid_StereaTrofh,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Increase your combat power through the heat of nature. Your physical and magic critical damage increase while the Sterea Trofh buff is active.,Physical Critical Damage: +#{CaptionRatio}#%{nl}Magic Critical Damage: +#{CaptionRatio}#%{nl}Duration: 15 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Druid11\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Druid11\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 7"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,,,,,,,6,icon_cler_steratrofh,False,False,False,False,[410001],643747,4005,Sterea Trofh,0,45000,0,240,0,0,0.0,10,0.0,0.0,100.0,0.0,50.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40906,Druid_Chortasmata,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (basicCoolDown < skill.MinCoolDown) {"", ""    return skill.MinCoolDown;"", ""}"", """", ""return basicCoolDown;""]","{#993399}{ol}[Magic] - [Poison]{/}{/}{nl}Grass temporarily grows on the targeted area. Monsters within the targeted area become Plant-type monsters. Allies who step on the area receive the Floral Scent buff and have their HP restored. Enemies on the area receive the Rash debuff and continuous damage.{nl}{#00113F}If the Statue of Goddess Zemyna buff is active, Floral Scent restores 10% more HP.{/}",Skill Factor: #{SkillFactor}#%{nl}Floral Scent Healing Factor: #{CaptionRatio}#%{nl}Magic Circle Duration: #{CaptionTime}# seconds{nl}{#339999}{ol}Rash{/}{/}Duration: #{CaptionRatio2}# seconds,"[""var value = 41 + (7.6 * (skill.Level - 1));"", ""return value""]","[""var value = 10 + skill.Level * 0.6"", ""return value""]",,"[""var value = 5 + skill.Level * 0.6"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Druid15\"")"", """", ""if (abil != null  &&  \""Druid15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,7,icon_cler_chortasmata,False,False,False,False,"[410015, 410021]",643745,4005,Chortasmata,0,20000,0,172,0,0,0.0,15,0.0,0.0,94.0,3.2,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40908,Druid_Lycanthropy,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Temporarily transform into a wolf. Upon transforming, nearby enemies are threatened, with additional threat applied when using wolf skills. When transformed, you cannot use your character's skills and your SP is continuously consumed. In wolf form, some of your stats increase, and you restore 2% of your max. HP every 8 seconds.",Wolf skills activated{nl}Additional Damage: +#{CaptionRatio}#%{nl}Critical Rate: +#{CaptionRatio2}#%{nl}Base Movement Speed: +10{nl}Maximum HP: +100%{nl}Physical and Magic Defense: +50%{nl}Block Penetration: +10%{nl}Maximum Duration: 30{nl}Consumes 3% SP per second,"[""var value = skill.Level * 10"", ""return value;""]","[""var value = skill.Level * 10"", ""var abilDruid20 = GetAbility(pc, \""Druid20\"");"", """", ""if (abilDruid20 != null  &&  TryGetProp(abilDruid20, 'ActiveState') == 1) {"", ""    value = value + 10"", ""}"", """", ""return value;""]",,,,,,,,6,icon_cler_lycanthropy,False,False,False,False,"[410014, 410018, 410020]",,4005,Lycanthropy,0,90000,0,0,0,0,0.0,5,0.0,0.0,100.0,0.0,50.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40909,Druid_HengeStone,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Summon the Henge Stone. Increases the skill level of magic circle and installation skills from Cleric-tree classes within range by 1. Increases the damage of Druid skills and changes the SP consumed during Lycanthropy to 0.,Duration: #{CaptionTime}# seconds{nl}Druid Skill Damage: +10%,,,,"[""var value = 20"", ""return Math.floor(value)""]",,,,,,6,icon_cler_hengestone,False,False,False,False,,,4005,Henge Stone,0,25000,0,142,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
40910,Druid_Seedbomb,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic]{/}{/}{nl}Applies a seed buff to allies. If the ally is attacked while the buff is active or the buff expires, magic damage is dealt to nearby enemies.",Skill Factor: #{SkillFactor}#%{nl}Seed Buff Duration: 5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Druid16\"")"", """", ""if (abil != null  &&  \""Druid16\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_seedbomb,False,False,False,False,[410016],,4005,Seed Bomb,0,25000,0,157,0,0,0.0,15,0.0,0.0,582.0,19.299999,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
40911,Druid_ThornVine,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic]{/}{/}{nl}Throw thorny vines at enemies in front of you to deal continuous damage and make them unable to move.,Skill Factor: #{SkillFactor}#% x 11{nl}Enemies become unable to move for 3 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Druid17\"")"", """", ""if (abil != null  &&  \""Druid17\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_celr_thorn,False,False,False,False,"[410017, 410019]",,4005,Thorn,0,20000,0,150,0,0,0.0,10,0.0,0.0,62.0,3.1,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41002,Oracle_ArcaneEnergy,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Applies the Arcane Energy buff to you and your party members. The buff records your current SP and STA, and if the amount of SP and STA consumed during the buff is higher than the one recorded, at the end of the buff all the SP and STA you consumed are restored.",Duration: #{CaptionTime}# seconds,,,,"[""var value = skill.Level"", ""var Oracle7_abil = GetAbility(pc, \""Oracle7\"")"", """", ""if (Oracle7_abil != null  &&  1 == Oracle7_abil.ActiveState) {"", ""    value = value + Oracle7_abil.Level"", ""}"", """", ""return value""]",,,,,,6,icon_cler_acaneenergy,False,True,False,False,"[411001, 411007]",643762,4008,Arcane Energy,0,60000,0,0,0,0,0.0,15,0.0,0.0,100.0,0.0,50.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41004,Oracle_Clairvoyance,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Predict and show which item the monster will drop in advance.,Applied instantly{nl}after using Resetting{nl}Maximum Level: 1,,,,,,,,,,6,icon_cler_clairvoyance,False,True,False,False,,,4008,Clairvoyance,0,20000,0,165,0,0,0.0,1,0.0,0.0,100.0,0.0,50.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41005,Oracle_CounterSpell,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Removes enemy magic circles nearby, and summons another magic circle that reduces the damage taken from enemy magic attacks.",Magic Damage Taken: -#{CaptionRatio}#%{nl}Removes nearby enemy magic circles{nl}Magic Circle Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Oracle15\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Oracle15\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 5 + skill.Level * 2;"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return Math.floor(value);""]",,,"[""var value = 25;"", ""var abil = GetAbility(pc, \""Oracle16\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + abil.Level"", ""}"", """", ""return value;""]",,,,,,6,icon_cler_counterspell,False,False,False,False,"[411015, 411016]",643764,4008,Counter Spell,0,50000,0,180,0,0,0.0,15,0.0,0.0,100.0,0.0,50.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41007,Oracle_Ressetting,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Change the item dropped from an enemy to a different item. You will be notified when an item is changed.,Changes a dropped item{nl}Maximum Level: 1,,,,,,,,,,6,icon_cler_changedropitem,False,False,False,False,,,4008,Resetting,2,150000,0,223,0,0,0.0,1,0.0,0.0,100.0,0.0,50.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41008,Oracle_DeathVerdict,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic]{/}{/}{nl}Announce your enemy's death, largely increasing the damage received by them. If the target is a boss monster, duration and damage-increasing effects are cut in half.",Damage: +#{CaptionRatio}#%{nl}Targets: #{CaptionRatio2}#{nl}Duration: #{CaptionRatio3}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Oracle19\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Oracle19\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 5"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return value;""]","[""var value = 5 + skill.Level"", ""return value""]","[""var value = 25"", ""var abil = GetAbility(pc, \""Oracle18\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = 15"", ""}"", """", ""return value""]",,,,,,,6,icon_cler_deathsverdict,False,False,False,False,"[411008, 411018, 411019]",,4008,Death Sentence,0,30000,0,180,0,0,0.0,10,0.0,0.0,100.0,0.0,50.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41009,Oracle_Prophecy,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Grants a temporary effect preventing Lv. 1 status ailments and crowd control effects from affecting nearby party members.,Cooldown: 30 seconds{nl}Maximum Level: 1,,,,,,,,,,6,icon_cler_prophecy,False,False,False,False,[411012],643766,4008,Prophecy,0,60000,0,240,0,0,0.0,1,0.0,0.0,100.0,0.0,50.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41010,Oracle_SwitchGender,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Set up a shop that can change a character's gender. 'Mirror of Truth' x1 is required to perform each gender change.,Maximum Level: 1,,,,,,,,,,3,icon_cler_switchgender,False,False,False,False,,,4008,Gender Switch,2,0,0,0,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41011,Oracle_Foretell,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Perform a spell to summon a magic circle that protects against enemy attacks. As long as you are inside the magic circle, you will not receive damage from enemy attacks.",Maximum Duration: #{CaptionRatio}# seconds,"[""var value = 5 + skill.Level"", ""return value""]",,,,,,,,,6,icon_cler_foretell,False,False,False,False,[411017],,4008,Foretell,0,40000,0,195,0,0,0.0,5,0.0,0.0,100.0,0.0,50.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41012,Oracle_TwistOfFate,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic]{/}{/}{nl}Deal a fixed amount of damage to the selected target based on its maximum HP. The target gradually recovers HP, with the total amount recovered matching double the amount lost by the attack. Only half of the damage is applied to boss monsters, and the skill does not apply to field boss monsters. Cannot be used inside the Guild Hangout.",Reduces #{CaptionRatio}#% - #{CaptionRatio2}#% of maximum HP{nl}Duration: #{CaptionTime}# seconds,"[""var value = (skill.Level * 8) - 7"", ""return value""]","[""var value = skill.Level * 8"", ""return value""]",,"[""var value = 30"", ""return value""]",,,,,,6,icon_cler_twistoffate,False,False,False,False,[411021],,4008,Twist of Fate,0,35000,0,187,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41013,Oracle_DivineMight,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Temporarily increases the skill levels of you and your party members by 1.,Applies #{CaptionRatio}# times{nl}Duration: 60 seconds,"[""var value = skill.Level"", ""var abil = GetAbility(pc, \""Oracle20\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + abil.Level"", ""}"", """", ""return value""]",,,,,,,,,6,icon_cler_divinemight,False,False,False,False,[411020],643901,4008,Divine Might,0,25000,0,187,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41101,PlagueDoctor_HealingFactor,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", """", ""if (IsPVPServer(pc) == 1) {"", ""    basicCoolDown = basicCoolDown + 20000;"", ""}"", """", ""return Math.floor(basicCoolDown);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Grants the target regenerative abilities. The target recovers HP up to how much HP was left when they received the buff.,Heal Factor: #{CaptionRatio}#% per 0.5 seconds{nl}Duration: 45 seconds,"[""var value = 102 + (skill.Level - 1) * 12.5"", ""return Math.floor(value);""]",,,,,,,,,3,icon_cler_healingfactor,False,False,False,False,,643857,4014,Healing Factor,0,45000,0,195,0,0,0.0,15,0.0,0.0,0.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41102,PlagueDoctor_Incineration,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Fire]{/}{/}{nl}Incinerates enemies affected by debuffs. The duration of Incineration's effects increases depending on the enemies' number of applied debuffs.,Skill Factor: #{SkillFactor}#% per 0.4 seconds{nl}Base Duration: #{CaptionRatio2}# seconds,,"[""var value = 10"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""PlagueDoctor2\"")"", """", ""if (abil != null  &&  \""PlagueDoctor2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_cler_incineration,False,False,False,False,"[412002, 412013, 412015]",643858,4014,Incineration,2,15000,0,124,0,0,0.0,15,0.0,0.0,92.0,3.1,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41104,PlagueDoctor_Fumigate,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Spray a cloud of antidote that cures the debuffs of an ally. Allies within the effect will be cured of debuffs of rank 3 and below.,Removes debuffs of rank 3 and below{nl}Applies a maximum of #{CaptionRatio}# times,"[""var value = 2 + skill.Level"", ""return value;""]",,,,,,,,,3,icon_cler_fumigate,False,False,False,False,[412006],643860,4014,Fumigate,0,45000,0,217,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41105,PlagueDoctor_Pandemic,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Spread all the debuffs of enemies within range to other nearby enemies.,Applies a maximum of #{CaptionRatio}# times,"[""var value = 3 + skill.Level * 2"", ""return value;""]",,,,,,,,,3,icon_cler_pandemic,False,False,False,False,[412014],643861,4014,Pandemic,0,25000,0,142,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41106,PlagueDoctor_BeakMask,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Equip the Bird Beak Mask. The front side of the mask contains a special drug that prevents debuffs of rank 3 or below from affecting you.,Duration: #{CaptionTime}# seconds{nl}100% immunity to rank 3 and below,,,,"[""var value = 60"", """", ""if (IsPVPServer(pc) == 1  ||  IsPVPField(pc) == 1) {"", ""    value = value / 3"", ""}"", """", ""return Math.floor(value);""]",,,,,,3,icon_cler_beakmask,False,False,False,False,,643862,4014,Beak Mask,0,60000,0,225,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41107,PlagueDoctor_PlagueVapours,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic] - [Poison]{/}{/}{nl}Spread Black Death Steam around and deal continuous damage. The affected targets infect other targets nearby. When using Incinerate on the target, it receives additional damage.",Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Duration: #{CaptionTime}# seconds,,,,"[""var value = 15"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""PlagueDoctor9\"")"", """", ""if (abil != null  &&  \""PlagueDoctor9\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,7,icon_cler_plaguevapours,False,False,False,False,[412009],,4014,Black Death Steam,0,20000,0,150,0,0,0.0,10,0.0,0.0,56.0,2.8,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41109,PlagueDoctor_Methadone,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Grants an effect that provides knockdown, knockback, and casting interruption immunity for you and your party members. Blocks debuffs of rank 2 and below.",Duration: #{CaptionTime}# seconds,,,,"[""var value = 5 + skill.Level"", ""return value""]",,,,,,3,icon_cler_methadone,False,False,False,False,,,4014,Methadone,0,30000,0,195,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41110,PlagueDoctor_Modafinil,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Momentarily increases movement speed for you and your party members. An additional ratio is applied to those under the Modafinil buff, depending on the target's character level and the caster's SPR (maximum +100%).",Movement Speed: +#{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""PlagueDoctor17\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""PlagueDoctor17\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 3 + skill.Level * 0.5;"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""var casterMNA = pc.MNA;"", ""var baseLv = pc.Lv;"", ""var addRate = casterMNA / baseLv;"", """", ""if (addRate <= 0) {"", ""    addRate = 0;"", ""} else if (addRate >= 1) {"", ""    addRate = 1;"", ""}"", """", ""value = Math.floor(value * (1 + addRate));"", ""return value;""]",,,"[""var value = 20 + skill.Level * 4;"", """", ""if (IsPVPServer(pc) == 1  ||  IsPVPField(pc) == 1) {"", ""    value = value / 3"", ""}"", """", ""return Math.floor(value)""]",,,,,,6,icon_cler_modafinil,False,False,False,False,[412017],643910,4014,Modafinil,0,45000,0,217,0,0,0.0,10,0.0,0.0,100.0,0.0,5.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41201,Kabbalist_RevengedSevenfold,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Use the power of the goddess to take revenge on enemy attacks by returning back their power multiplied by 7. Does not to apply to some boss monsters.{nl}{#00113F}If the Omikuji buff is active, Revenged Sevenfold inflicts the Great Curse debuff on the enemy when triggered.{/}",Duration: #{CaptionTime}# seconds{nl}Additional Damage: #{CaptionRatio}#% x7,"[""var value = 10 * skill.Level"", ""return value""]",,,"[""var value = 60"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = 7"", ""}"", """", ""return value""]",,,,,,3,icon_cler_revengedsevenfold,False,False,False,False,[413002],643863,4015,Revenged Sevenfold,0,25000,0,142,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41202,Kabbalist_Nachash,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Use the power of Kabbalah to summon serpents that attack your enemies.,Skill Factor: #{SkillFactor}#%{nl}Targets: 10{nl}Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Kabbalist3\"")"", """", ""if (abil != null  &&  \""Kabbalist3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_celr_nachash,False,False,False,False,[413003],,4015,Nachash,0,30000,0,165,0,0,0.0,10,0.0,0.0,70.0,3.5,-99.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41203,Kabbalist_Ayin_sof,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Momentarily increases the target's maximum HP by a large amount.,Duration: #{CaptionTime}# seconds{nl}Maximum HP: +#{CaptionRatio}#%,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Kabbalist26\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Kabbalist26\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 30"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,"[""var value = 20 + skill.Level * 4"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = value * 0.5"", ""}"", """", ""return value""]",,,,,,3,icon_cler_ayinsof,False,False,False,False,"[413018, 413023, 413025]",643864,4015,Ein Sof,0,60000,0,240,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41204,Kabbalist_Merkabah,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Send out the wagon of the goddess to deal damage along the way and explode at a designated spot, attacking nearby enemies. Standing near the wagon momentarily grants Holy property and increases magic defense.",Skill Factor: #{SkillFactor}#%{nl}100% magic damage on collision{nl}100% additional damage on Demon targets{nl}Maximum 30 collisions,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Kabbalist8\"")"", """", ""if (abil != null  &&  \""Kabbalist8\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_merkabah,False,False,False,False,"[413008, 413011]",,4015,Merkabah,0,35000,0,172,0,0,0.0,5,0.0,0.0,92.0,3.1,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41205,Kabbalist_Gematria,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Divide the numbers of an enemy's name and calculate a new number.,Maximum Targets: #{CaptionRatio}#{nl}Maximum Level: 1,"[""var value = 10;"", ""var abilKabbalist14 = GetAbility(pc, \""Kabbalist14\"");"", """", ""if (abilKabbalist14 != null  &&  abilKabbalist14.ActiveState == 1) {"", ""    value = value + abilKabbalist14.Level;"", ""}"", """", ""return value;""]",,,,,,,,,3,icon_cler_gematria,False,False,False,False,,,4015,Gematria,0,1000,0,31,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41206,Kabbalist_Notarikon,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Calculate a new number from the first and the last letter of an enemy's name.,Maximum Targets: #{CaptionRatio}#{nl}Maximum Level: 1,"[""var value = 10;"", ""var abilKabbalist14 = GetAbility(pc, \""Kabbalist14\"");"", """", ""if (abilKabbalist14 != null  &&  abilKabbalist14.ActiveState == 1) {"", ""    value = value + abilKabbalist14.Level;"", ""}"", """", ""return value;""]",,,,,,,,,3,icon_cler_notarikon,False,False,False,False,,,4015,Notarikon,0,1000,0,31,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41209,Kabbalist_Clone,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Clone a selected monster based on the number calculated from the formula. Cloned monsters will not yield EXP, but items can still be dropped. Furthermore, the original monster and the copy cannot be further cloned.",Cloned Monster Duration: [calculated result x 2] + #{CaptionTime}# seconds,,,,"[""var value = skill.Level * 3"", ""return value""]",,,,,,3,icon_cler_clone,False,False,False,False,,,4015,Clone,0,120000,0,225,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41210,Kabbalist_Gevura,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Triggers an effect based on the numbers calculated on enemies. Enemies attacked while under the effect of Gevura receive additional damage proportional to the number of enemies and the calculated number.,Duration: 30 seconds{nl}Damage Increase: #{CaptionRatio}#%,"[""var value = skill.Level * 20"", ""return value""]",,,,,,,,,3,icon_cler_gevura,False,False,False,False,[413020],,4015,Gevura,0,30000,0,150,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41211,Kabbalist_TheTreeOfSepiroth,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Invoke a magic circle in the shape of the Tree of Sepiroth which continuously restores the HP of allies.,Duration: #{CaptionTime}# seconds{nl}Restores #{CaptionRatio}#% of maximum HP every 0.5 seconds{nl}Consumes Holy Water x10,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Kabbalist25\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Kabbalist25\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,"[""var value = 10 + skill.Level;"", ""return value;""]",,,,,,3,icon_celr_thetreeofsepiroth,False,False,False,False,[413024],,4015,Tree of Sepiroth,0,45000,0,187,0,0,0.0,5,0.0,0.0,0.0,0.0,0.0,10,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41301,Chaplain_LastRites,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Applies the Holy property to your basic attacks, allowing them to temporarily deal an additional Holy attack. The effect intensifies when your HP is at 40% or below.",Holy Property Attack: +#{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds{nl}Consumes 1 Gyslotis,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Chaplain13\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Chaplain13\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var pcLevel = pc.Lv"", ""var pcMNA = pc.MNA"", ""var pcLevelRate = (pcLevel / 6.5) + 15"", ""var baseDamageValue = 200 + (skill.Level - 1) * pcLevelRate"", ""var pcMnaRate = (pcMNA / (pcMNA + pcLevel) * 2) + 0.15"", ""var value = baseDamageValue * pcMnaRate"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value)""]",,,"[""var value = 150 + skill.Level * 30"", ""return value""]",,,,,,3,icon_cler_lastrites,False,False,False,False,"[414008, 414001]",,4012,Last Rites,0,40000,0,202,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41302,Chaplain_BuildCappella,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Deploy a temporary sacellum with a wrapped cloak. Increases the damage of Holy-property attacks for allies near the cappella.,Cappella Duration: #{CaptionRatio}# seconds{nl}Holy Damage: +#{CaptionRatio2}#%{nl}Consumes Cape x1,"[""var value = 30"", ""return value""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Chaplain15\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Chaplain15\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 10"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,,,,,,3,icon_cler_buildcappella,False,False,False,False,[414010],,4012,Deploy Cappella,0,65000,0,240,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41304,Chaplain_Aspergillum,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Fill your equipped weapon with holy water and make it splash with every attack.,Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionTime}# seconds{nl}Consumes Holy Water x1,,,,"[""var value = skill.Level * 60"", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Chaplain12\"")"", """", ""if (abil != null  &&  \""Chaplain12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_aspergillum,False,False,False,False,[414007],,4012,Aspergillum,0,60000,0,232,0,0,0.0,15,98.0,21.0,90.0,3.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41305,Chaplain_Binatio,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Temporarily accelerates your attacks. While the Binatio buff is active, your basic attack speed increases.",Attack Speed: +#{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Chaplain14\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Chaplain14\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 55 + skill.Level * 15;"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value)""]",,,"[""var value = 30;"", ""return value""]",,,,,,3,icon_cler_binatio,False,False,False,False,[414009],643886,4012,Binatio,0,40000,0,195,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41306,Chaplain_ParaclitusTime,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Become resistant to knockback and knockdown through prayer.,Duration: #{CaptionTime}# seconds,,,,"[""var value = 10 + skill.Level * 2"", ""return value""]",,,,,,3,icon_cler_paraclitustime,False,False,False,False,,643887,4012,Paraclitus Time,0,30000,0,180,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41307,Chaplain_VisibleTalent,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown  - ((skill.Level - 1) * 1000);"", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic] - [Holy]{/}{/}{nl}Temporarily manifests your hidden potential. During the buff, any damage you deal with basic attacks is accumulated, then inflicted onto the enemy with your first basic attack after the buff. Cooldown time reduces with skill level.",Damage accumulates for 10 seconds,,,,,,,,,,3,icon_cler_visibletalent,False,False,False,False,,643888,4012,Visible Talent,0,40000,0,195,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41401,Inquisitor_IronMaiden,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Piercing]{/}{/}{nl}Summon an Iron Maiden to trap a medium or small sized enemy, excluding boss monsters. Trapped enemies cannot move for a certain amount of time while Demon type enemies take constant damage.",Duration: #{CaptionTime}# sec{nl}Reduces Devil enemy HP by a min. of 1%{nl}Consumes Torture Tools x1,,,,"[""var value = 4 + skill.Level * 0.5"", ""return value""]",,,,,,6,icon_cler_ironmaiden,False,False,False,False,[415018],,4016,Iron Maiden,0,30000,0,142,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6, 7]"
41404,Inquisitor_PearofAnguish,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Install a Pear of Anguish on the ground that deals damage to incoming enemies. If a magic-using enemy is detected, it flies over to it and deals even greater damage.",Skill Factor: #{SkillFactor}#%{nl}Maximum Installations: #{CaptionRatio2}#{nl}Consumes Torture Tools x1,,"[""var value = 5;"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Inquisitor6\"")"", """", ""if (abil != null  &&  \""Inquisitor6\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_pearofanguish,False,False,False,False,[415006],,4016,Pear of Anguish,2,30000,0,127,0,0,0.0,15,0.0,0.0,224.0,7.4,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
41406,Inquisitor_BreakingWheel,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Summon a wheel that inflicts damage to surrounding enemies.,Skill Factor: #{SkillFactor}#% per 0.3 seconds{nl}Duration: #{CaptionTime}# seconds{nl}Consumes Torture Tools x2,,,,"[""var value = 10;"", ""var abil = GetAbility(pc, \""Inquisitor20\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + abil.Level"", ""}"", """", ""return value""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Inquisitor13\"")"", """", ""if (abil != null  &&  \""Inquisitor13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_breakingwheel,False,False,False,False,"[415008, 415013, 415020]",,4016,Breaking Wheel,0,45000,0,172,0,0,0.0,15,0.0,0.0,109.0,3.6,1.0,2,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
41407,Inquisitor_GodSmash,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Lift your weapon high up in the air above your head and smash it down. Deals additional damage when using a Blunt weapon (one or two-handed). Partially ignores enemy defense.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}Ignores 50% of enemy defense,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Inquisitor10\"")"", """", ""if (abil != null  &&  \""Inquisitor10\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_cler_godsmash,False,False,False,False,"[415010, 415012]",,4016,God Smash,3,15000,0,90,0,0,0.0,15,0.0,0.0,414.0,13.7,4.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
41408,Inquisitor_MalleusMaleficarum,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic]{/}{/}{nl}Release the power of a spellbook to attack. The attacked enemy will have their INT and SPR halved, and will receive additional damage in proportion to their own magic attack. Doubles the SP consumption of magic attacks.",Skill Factor: #{SkillFactor}#% x 7{nl}Additional damage equal to #{CaptionRatio}#% of the target's magic attack{nl}Duration: 10 seconds{nl}Maximum Targets: 7,"[""var value = 6 + (skill.Level -1)* 6;"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Inquisitor14\"")"", """", ""if (abil != null  &&  \""Inquisitor14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_malleusmaleficarum,False,False,False,False,"[415011, 415014]",,4016,Malleus Maleficarum,0,28000,0,147,0,0,0.0,15,0.0,0.0,120.0,4.0,-99.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41409,Inquisitor_Judgment,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Changes the type of enemies within range to Demon. Changed targets take 10% additional Holy damage.,Duration: #{CaptionTime}# sec{nl}Targets: 10,,,,"[""var value = 15 + skill.Level"", ""return value""]",,,,,,6,icon_cler_judgment,False,False,False,False,[415015],,4016,Judgment,0,40000,0,165,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41410,Inquisitor_BreastRipper,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Summon a pair of gigantic scissors to continuously attack enemies in front of you. The skill does not cancel even if you are attacked and it deals increased damage to Demon-type enemies.,Skill Factor: #{SkillFactor}#%{nl}Targets: #{CaptionRatio}#{nl}Consumes Torture Tools x2,"[""var value = 5"", ""var STR = pc.STR"", ""var strValue = STR / 50"", """", ""if (strValue <= 0) {"", ""    strValue = 0"", ""}"", """", ""value = value + strValue"", ""return Math.floor(value)""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Inquisitor16\"")"", """", ""if (abil != null  &&  \""Inquisitor16\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_cler_breastripper,False,False,False,False,"[415016, 415019]",,4016,Ripper,0,55000,0,187,0,0,0.0,5,0.0,0.0,296.0,29.6,0.0,2,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
41601,Miko_Gohei,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Swing a gohei made of a wooden stick and white paper. Removes one harmful effect of rank 1 or below on allies and one beneficial effect of rank 1 or lower on enemies in front of you.,Skill Factor: #{SkillFactor}#% x 2,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Miko1\"")"", """", ""if (abil != null  &&  \""Miko1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_gohei,False,False,False,False,[417002],,4018,Gohei,4,8000,0,69,0,0,0.0,15,0.0,0.0,123.0,4.1,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41602,Miko_HoukiBroom,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Sweeps the floor with a purified, divine broom. The sweeped area becomes a magic circle that increases the skill level of other magic circle skills that are cast while standing at that location for a period of time.",Max. Sweeping Duration: #{CaptionTime}# seconds{nl}Magic Circle Duration: #{CaptionRatio}# seconds,"[""var value = 5 + skill.Level"", ""return Math.floor(value)""]",,,"[""var value = 5"", ""return Math.floor(value)""]",,,,,,6,icon_cler_houkibroom,False,False,False,False,,,4018,Sweeping,0,35000,0,187,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41603,Miko_Hamaya,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Hold an arrow in your hand and throw it to a designated location. Inflicts a great amount of Holy-property damage to enemies for a short time.,Skill Factor: #{SkillFactor}#% per 0.3 seconds{nl}Maximum Targets: 10{nl}Duration: #{CaptionRatio2}# seconds,,"[""var value = 8"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Miko3\"")"", """", ""if (abil != null  &&  \""Miko3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_hamaya,False,False,False,False,[417004],,4018,Hamaya,0,35000,0,172,0,0,0.0,15,0.0,0.0,83.0,2.8,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41604,Miko_Kasiwade,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Clap your hands twice. Increases duration for some installations nearby.,Duration: +#{CaptionRatio}# seconds,"[""var value = skill.Level * 5"", ""return value;""]",,,,,,,,,6,icon_cler_kasiwade,False,False,False,False,,,4018,Clap,0,35000,0,187,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41605,Miko_KaguraDance,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Dance to bless allies around you. Enemies affected by the skill receive more damage from magic attacks. Active while holding the skill button.,Maximum Duration: #{CaptionTime}# seconds{nl}Consumes #{CaptionRatio}# SP per second{nl}Magic Damage: +#{CaptionRatio2}#%,"[""var value = 70 + skill.Level * 2"", ""var abil = GetAbility(pc, \""Miko5\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value * 1.1"", ""}"", """", ""return Math.floor(value)""]","[""var value = 10 * skill.Level"", ""return Math.floor(value)""]",,"[""var value = 5 + 5 * skill.Level;"", ""return Math.floor(value)""]",,,,,,6,icon_cler_kaguradance,False,False,False,False,,,4018,Kagura,0,60000,0,0,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41606,Miko_Omikuji,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Tell your fortune and apply a buff according to the result. Possible results and their corresponding chances are as follows.{nl}* Great Blessing: 5%{nl}* Middle Blessing: 20%{nl}* Small Blessing: 50%{nl}* Small Curse: 20%{nl}* Great Curse: 5%,Duration: #{CaptionTime}# seconds{nl}Great Blessing: Critical Rate +#{CaptionRatio}#%{nl}Middle Blessing: Critical Rate +#{CaptionRatio2}#%{nl}Small Blessing: Critical Rate +#{CaptionRatio3}#%{nl}Small Curse: No effect{nl}Great Curse: Critical Resistance -50%{nl},"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Miko7\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Miko7\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 20 * skill.Level"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value)""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Miko7\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Miko7\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 10 * skill.Level"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value)""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Miko7\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Miko7\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 5 * skill.Level"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value)""]","[""var value = 10"", ""return Math.floor(value)""]",,,,,,6,icon_cler_omikuji,False,False,False,False,[417008],643889,4018,Omikuji,0,45000,0,217,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41701,Zealot_Invulnerable,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Become immune to knockback and knockdown.,Duration: #{CaptionTime}# seconds,,,,"[""var value = 20 + skill.Level"", ""return value""]",,,,,,6,icon_cler_invulnerable,False,False,False,False,,,4019,Invulnerable ,0,50000,0,210,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41702,Zealot_Immolation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Fire]{/}{/}{nl}Sets enemies on fire, inflicting Fire-property damage. Your own body also catches on fire, reducing your HP. Your character will not become incapable of combat from this damage.",Reduces 1% HP every 0.5 seconds{nl}#{SkillFactor}#% Fire damage every 0.5 seconds{nl}Fire Property Resistance: +#{CaptionRatio}#{nl}Duration: 5 seconds,"[""var value = 0"", ""var abil = GetAbility(pc, \""Zealot4\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = abil.Level * 300"", ""}"", """", ""return value""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Zealot2\"")"", """", ""if (abil != null  &&  \""Zealot2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_cler_immolation,False,False,False,False,"[418001, 418002, 418004, 418009]",,4019,Immolation,2,40000,0,144,0,0,0.0,15,0.0,0.0,126.0,4.2,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[6]
41703,Zealot_BeadyEyed,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Buff] - [Magic]{/}{/}{nl}Move to the back of the enemy in an instant. Your critical rate increases after using Beady Eyed.,Maximum Distance: #{CaptionTime}#{nl}Critical Rate: +#{CaptionRatio}#%{nl}Duration: 5 seconds,"[""var value = skill.Level * 3"", ""return value""]",,,"[""var value = 100 + (skill.Level * 5);"", ""return value""]",,,,,,6,icon_cler_beadyeyed,False,False,False,False,[418008],,4019,Beady Eyed,0,10000,0,150,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 1]"
41704,Zealot_Fanaticism,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Lose the ability to recover HP while increasing damage dealt to enemies.,Duration 15 sec{nl}Increased damage by #{CaptionRatio}#%{nl}Does not stack with Healing Factor,"[""var value = 10 + ((skill.Level - 1) * 5)"", ""return value""]",,,,,,,,,3,icon_cler_fanaticism,False,False,False,False,[418010],,4019,Fanaticism ,0,30000,0,180,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41705,Zealot_FanaticIllusion,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Lightning]{/}{/}{nl}Envelop your body in lightning, dealing damage to nearby enemies. Continuously consumes SP, and cancels if SP runs out. Increases your Lightning-property resistance.",Skill Factor: #{SkillFactor}#% per second{nl}Duration: 15 seconds{nl}Consumes #{CaptionRatio}# SP per second{nl}Lightning Property Resistance: +#{CaptionRatio2}#%,"[""var basicSP = 25;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", ""value = value + (value * abilAddSP);"", ""var zeminaLv = GetExProp(pc, \""ZEMINA_BUFF_LV\"");"", """", ""if (zeminaLv > 0) {"", ""    decsp = 4 + (zeminaLv * 4);"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[""var value = skill.Level * 10"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Zealot3\"")"", """", ""if (abil != null  &&  \""Zealot3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,5,icon_cler_fanaticillusion,False,False,False,False,"[418003, 418006]",,4019,Fanatic Illusion,0,30000,0,0,0,0,0.0,10,0.0,0.0,202.0,10.1,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[6]
41706,Zealot_BlindFaith,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical] - [Holy]{/}{/}{nl}Consumes 50% of your remaining SP to deal additional Holy-property damage.,Duration: 40 seconds{nl}Additional Attack: consumed SP x #{CaptionRatio}#%{nl}Maximum 20 attacks,"[""var value = 20 + ((skill.Level - 1) * 20)"", ""return value""]",,,,,,,,,3,icon_cler_blindfaith,False,False,False,False,[418007],,4019,Blind Faith,0,40000,0,0,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
41707,Zealot_EmphasisTrust,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical] - [Holy]{/}{/}{nl}Applies a debuff to nearby enemies that causes them to take additional Holy-property damage every time they are attacked.,Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionRatio}# seconds{nl}Maximum 10 attacks{nl}Targets: 10,"[""return 15 + skill.Level*2;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Zealot11\"")"", """", ""if (abil != null  &&  \""Zealot11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_emphasistrust,False,False,False,False,[418011],,4019,Emphatic Trust,0,30000,0,165,0,0,0.0,5,0.0,0.0,73.0,7.3,0.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
41801,Exorcist_Rubric,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Read commandments imbued with the power of the Goddesses to deal Holy-property damage and reduce the enemy's movement speed. When used against Demon-type enemies, the skill deals additional hits and its movement speed reducing effects are amplified.",Skill Factor: #{SkillFactor}#% per 0.#{CaptionRatio2}# seconds{nl}{nl}Targets: #{CaptionRatio}#{nl}Maximum Duration: #{CaptionRatio3}# seconds,"[""var value = 5;"", ""var abilExorcist2 = GetAbility(pc, \""Exorcist2\"");"", """", ""if (abilExorcist2 != null  &&  TryGetProp(abilExorcist2, \""ActiveState\"") == 1) {"", ""    value = value + abilExorcist2.Level;"", ""}"", """", ""return value;""]","[""var value = 5"", ""var abilExorcist3 = GetAbility(pc, \""Exorcist3\"");"", """", ""if (abilExorcist3 != null  &&  TryGetProp(abilExorcist3, \""ActiveState\"") == 1) {"", ""    value = 25"", ""}"", """", ""return value;""]","[""var value = 6"", ""var abilExorcist3 = GetAbility(pc, \""Exorcist3\"");"", """", ""if (abilExorcist3 != null  &&  TryGetProp(abilExorcist3, \""ActiveState\"") == 1) {"", ""    value = 4"", ""}"", """", ""return value;""]",,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Exorcist1\"")"", """", ""if (abil != null  &&  \""Exorcist1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_rubric,False,False,False,False,"[419002, 419003, 419001]",,4020,Rubric,0,15000,0,142,0,0,0.0,15,0.0,0.0,277.0,9.2,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41802,Exorcist_Entity,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Make hidden entities nearby reveal themselves with a powerful command. Revealed entities take a designated amount of damage.{nl}{#00113F}Entity amplifies Hamaya.{/},Skill Factor: #{SkillFactor}#%{nl}Targets: 10,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Exorcist4\"")"", """", ""if (abil != null  &&  \""Exorcist4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_entity,False,False,False,False,[419004],,4020,Entity,3,30000,0,111,0,0,0.0,15,0.0,0.0,396.0,13.1,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41803,Exorcist_AquaBenedicta,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Sprinkle Holy Water on the ground to purify it. Enemies in the purified area receive continuous damage. Flying enemies that don't step on the purified ground are not attacked.,Skill Factor: #{SkillFactor}#% per 0.4 seconds{nl}Maximum Targets: 8{nl}Duration: 6 seconds{nl}Consumes Holy Water x1,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Exorcist6\"")"", """", ""if (abil != null  &&  \""Exorcist6\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_aquabenedicta,False,False,False,False,[419006],,4020,Aqua Benedicta,0,20000,0,150,0,0,0.0,15,0.0,0.0,90.0,3.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41804,Exorcist_Engkrateia,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Holy]{/}{/}{nl}Exercise your strong restraint by praying to the Goddesses. During the prayer, you receive less damage and become immune to knockback and knockdown. Additional reduction applied to damage received from Demon type enemies.",Damage Taken: -#{CaptionRatio}#%{nl}Duration: #{CaptionRatio2}# sec,"[""return skill.Level * 5""]","[""var value = 3;"", ""var abilExorcist8 = GetAbility(pc, \""Exorcist8\"");"", """", ""if (abilExorcist8 != null  &&  TryGetProp(abilExorcist8, \""ActiveState\"") == 1) {"", ""    value = value + abilExorcist8.Level;"", ""}"", """", ""return value;""]",,,,,,,,3,icon_cler_engkrateia,False,False,False,False,"[419009, 419008]",,4020,Engkrateia,0,30000,0,180,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
41805,Exorcist_Gregorate,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Send out a wave of divine energy through you and your allies to overthrow the forces of evil. Nearby enemies receive Holy-property damage. If the skill is applied to a zombie, the zombie is killed.",Skill Factor: #{SkillFactor}#%{nl}Targets: 8,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Exorcist10\"")"", """", ""if (abil != null  &&  \""Exorcist10\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_gregorate,False,False,False,False,[419010],,4020,Gregorate,0,30000,0,167,0,0,0.0,10,0.0,0.0,594.0,29.700001,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41806,Exorcist_Koinonia,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Consolidate the faith of your party members into a display of divine energy capable of overthrowing demons. Can only be used when 3 or more members are within range. Additional damage applied when 3 or more of the members are of the Cleric tree.,Skill Factor: #{SkillFactor}#% per 0.4 seconds{nl}Duration: #{CaptionRatio}# seconds,"[""var value = 5 + 3 * skill.Level;"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Exorcist16\"")"", """", ""if (abil != null  &&  \""Exorcist16\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_koinonia,False,False,False,False,"[419013, 419014]",,4020,Koinonia,0,40000,0,180,0,0,0.0,10,0.0,0.0,175.0,8.8,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
41807,Exorcist_Katadikazo,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#993399}{ol}[Magic] - [Holy]{/}{/}{nl}Conjure a spear of divine light to strike your enemies in the name of the goddesses. Targets hit by the spear receive Holy-property magic damage, with additional damage dealt to Dark-property or Demon-type enemies.",Skill Factor: #{SkillFactor}#% x 3{nl}Targets: 15,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Exorcist17\"")"", """", ""if (abil != null  &&  \""Exorcist17\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,3,icon_cler_katadikazo,False,False,False,False,[419015],,4020,Katadikazo,2,20000,0,131,0,0,0.0,5,0.0,0.0,200.0,20.0,0.0,0,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,False,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (IsBuffApplied(pc, 'Wizard_Wild_buff') == 'YES') {"", ""    value = value * 1.5 * spRatio;"", ""    return Math.floor(value);"", ""}"", """", """", ""if (IsBuffApplied(pc, 'MalleusMaleficarum_Debuff') == 'YES') {"", ""    value = value * 2"", ""    return Math.floor(value);"", ""}"", """", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, 'ShadowPool_Buff') == 'YES'  &&  skill.ClassName == \""Shadowmancer_ShadowPool\"") {"", ""    value = 0;"", ""}"", """", ""return 0"", ""}"", """", ""return Math.floor(value);""]",[1]
50001,Scout_Cloaking,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Temporarily hide yourself away from an enemy's vision. You become exposed when you jump or attack.,Damage +#{CaptionRatio}#% when attacking while cloaked{nl}Duration: #{CaptionTime}# seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Scout18\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Scout18\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 10 + skill.Level * 2;"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value""]",,,"[""return 10 + skill.Level * 2;""]",,,,,,6,icon_arch_cloaking,False,False,False,False,[501001],643685,5001,Cloaking,0,40000,0,145,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50002,Scout_DaggerSlash,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Quickly slash with your dagger from side to side to deal damage.,"Skill Factor: #{SkillFactor}#% x 2{nl}AoE Attack Ratio: +#{SkillSR}#{nl}20% damage against targets under [Stun], [Blind] and [Bleeding]",,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Scout19\"")"", """", ""if (abil != null  &&  \""Scout19\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_scout_daggerslash,False,False,False,False,[501002],643890,5001,Dagger Slash,3,10000,0,62,0,0,0.0,5,0.0,0.0,154.0,5.1,3.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
50003,Scout_ObliqueFire,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Shoot at a target. The bullet bounces off the initial target into a nearby enemy.{nl}{#00113F}When performed near a Jolly Roger flag, Oblique Fire generates another shot.{/}",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Scout20\"")"", """", ""if (abil != null  &&  \""Scout20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_scout_obliquefire,False,False,False,False,[501003],643891,5001,Oblique Fire,5,20000,0,53,0,0,0.0,5,0.0,0.0,254.0,8.4,0.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
50004,Scout_DoubleAttack,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Temporarily increases your critical rate. Subweapon basic attacks have a chance of applying as multiple hits.,Critical Rate: +20%{nl}Additional Damage: #{CaptionRatio}#%{nl}Multi-hit Chance: #{CaptionRatio2}#%{nl}Duration: 300 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Scout21\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Scout21\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 5"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]","[""var value = 40"", ""return value""]",,,,,,,,6,icon_scout_doubleattack,False,False,False,False,[501004],643892,5001,Double Attack,0,60000,0,168,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50005,Scout_FreeStep,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Make your movements quick and nimble, temporarily increasing evasion.",Evasion: +#{CaptionRatio}#%{nl}Duration: 300 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Scout22\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Scout22\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 4"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value""]",,,,,,,,,6,icon_scout_freestep,False,False,False,False,[501005],643893,5001,Free Step,0,60000,0,168,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50101,Assassin_Hasisas,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Drink a Hasisas Potion and increase your physical ability. Along with increased attack speed and critical attack, you will gain additional critical damage in the ratio of your maximum and lost HP. The potion continuously consumes your HP as a side effect.",Basic Attack Speed: +#{CaptionRatio}#{nl}Critical Damage: +#{CaptionRatio3}#%{nl}Reduces 1% HP every #{CaptionRatio2}# seconds{nl}Duration: 300 seconds{nl}Consumes Hasisas Potion x1,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Assassin1\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Assassin1\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 30 + skill.Level * 15"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value;""]","[""var value = 10"", ""var abil = GetAbility(pc, 'Assassin2')"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + abil.Level"", ""}"", """", ""return value;""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Assassin1\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Assassin1\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 2"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""var MHP = pc.MHP"", """", ""if (info == null) {"", ""    return 0"", ""}"", """", ""var stat = info.GetStat(session.GetMyHandle());"", ""var HP = stat.HP"", ""var HPRate = (1 - (HP / MHP)) * 100"", ""value = value + HPRate"", ""return value;""]",,,,,,,6,icon_scout_hasisas,False,False,False,False,"[502001, 502002, 502003]",,5002,Hasisas,0,30000,0,134,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50102,Assassin_Behead,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Swing your dagger towards the enemy's neck. Attacked enemies become afflicted with [Behead: Bleeding]. In PvP, your character moves behind the enemy to attack.{nl}{#00113F}Deals 200% additional damage if used when your character is in a cloaked state.{/}",Skill Factor: #{SkillFactor}#%{nl}Ignores 30% of enemy defense{nl}AoE Attack Ratio: +#{SkillSR}#{nl}[Bleeding] Duration: 30 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Assassin4\"")"", """", ""if (abil != null  &&  \""Assassin4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_scout_behead,False,False,False,False,"[502004, 502005, 502006]",643894,5002,Behead,2,20000,0,114,0,0,0.0,15,0.0,0.0,455.0,15.1,3.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
50103,Assassin_InstantaneousAcceleration,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Run towards distant enemies at incredible speed to instantly slash them.{nl}{#00113F}If the Agility buff is active, Instant Acceleration deals additional hits.{/}",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Assassin7\"")"", """", ""if (abil != null  &&  \""Assassin7\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_scout_instantaneousacceleration,False,False,False,False,"[502007, 502008, 502009]",643895,5002,Instant Acceleration,2,20000,0,99,0,0,0.0,15,0.0,0.0,524.0,17.299999,8.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
50104,Assassin_HallucinationSmoke,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Strike] - [Physical]{/}{/}{nl}Release a hallucinatory smoke around you that reduces your enemies' evasion and critical resistance.,Evasion: -#{CaptionRatio}#%{nl}Critical Resistance: -#{CaptionRatio}#%{nl}Smoke Duration: #{CaptionTime}# seconds{nl}Debuff Duration: 20 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Assassin10\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Assassin10\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 20"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value;""]",,,"[""var value = 5 + skill.Level"", ""return value;""]",,,,,,6,icon_scout_hallucinationsmoke,False,False,False,False,"[502010, 502011]",,5002,Hallucination Smoke,2,30000,0,98,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 9, 6]"
50105,Assassin_PiercingHeart,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Pierce through the enemy's chest with your dagger. Attacked enemies' defenses are partially ignored, and the skill inflicts targets with the Heart Arrest debuff that renders them unable to restore HP.{nl}{#00113F}Decreases the damage interval of [Bleeding] on enemies, causing it to deal damage faster.{/}",Skill Factor: #{SkillFactor}#%{nl}Ignores 50% of enemy defense{nl}AoE Attack Ratio: +#{SkillSR}#{nl}[Heart Arrest] Duration: #{CaptionTime}# seconds,,,,"[""var value = 10;"", ""var abil = GetAbility(pc, 'Assassin13')"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + abil.Level"", ""}"", """", ""return value;""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Assassin12\"")"", """", ""if (abil != null  &&  \""Assassin12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_scout_piercingheart,False,False,False,False,"[502012, 502013, 502014]",,5002,Piercing Heart,3,10000,0,56,0,0,0.0,10,0.0,0.0,297.0,14.9,-99.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
50106,Assassin_Annihilation,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Conceal yourself and quickly slash nearby enemies. You become invincible while the skill is being used and inflict a guaranteed critical attack on enemies with 30% or less HP remaining.,Skill Factor: #{SkillFactor}#% x 14{nl}AoE Attack Ratio: #{SkillSR}#{nl}Guaranteed critical attack on enemies with 30% or less HP remaining,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Assassin15\"")"", """", ""if (abil != null  &&  \""Assassin15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_scout_annihilation,False,False,False,False,"[502015, 502016, 502017]",,5002,Annihilation,0,35000,0,128,0,0,0.0,5,0.0,0.0,213.0,21.299999,15.0,0,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
50201,OutLaw_SprinkleSands,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Throw sand at your enemy's eyes. Attacked targets are blinded and have their accuracy and evasion reduced.,Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}[Blind] Duration: 10 seconds{nl}Blinded Enemies: -20% Accuracy and Evasion,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Outlaw1\"")"", """", ""if (abil != null  &&  \""Outlaw1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var abil = GetAbility(pc, \""Outlaw2\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    skill.SklSR = 17"", ""}"", """", ""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_scout_sprinklesands,False,False,False,False,"[503001, 503002]",,5003,Throw Sand,0,15000,0,105,0,0,0.0,15,0.0,0.0,467.0,15.5,10.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
50202,OutLaw_BreakBrick,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Smash bricks onto nearby enemies with a chance of stunning them.{nl}{#00113F}100% chance of stunning enemies attacked with Brick Smash from the back. Critical chance applies as 2x to enemies gathered with Hangman's Knot.{/},Skill Factor: #{SkillFactor}#%{nl}30% chance of inflicting Stun for 3 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Outlaw3\"")"", """", ""if (abil != null  &&  \""Outlaw3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_scout_breakbrick,False,False,False,False,[503003],,5003,Brick Smash,3,20000,0,71,0,0,0.0,15,0.0,0.0,371.0,12.3,6.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
50203,OutLaw_Mangle,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Continuously slash with your dagger to lacerate enemies in front of you. ,"Skill Factor: #{SkillFactor}#% x 9{nl}50% additional damage against enemies under [Stun], [Blind] or [Bleeding]",,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Outlaw5\"")"", """", ""if (abil != null  &&  \""Outlaw5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_scout_mangle,False,False,False,False,"[503005, 503006, 503007]",,5003,Mangle,2,15000,0,89,0,0,0.0,15,0.0,0.0,64.0,2.2,10.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
50204,OutLaw_FireBlindly,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Fire blindly into a group of enemies in your way.,"Skill Factor: #{SkillFactor}#% x 8{nl}2x critical rate against enemies under [Stun], [Blind] or [Bleeding]",,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Outlaw8\"")"", """", ""if (abil != null  &&  \""Outlaw8\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_scout_fireblindly,False,False,False,False,"[503008, 503009, 503010]",643902,5003,Blindfire,2,30000,0,111,0,0,0.0,10,0.0,0.0,74.0,2.5,10.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
50205,OutLaw_Bully,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Use your street smarts and vast combat experience to increase your evasion. Evading an enemy attack during Bully increases the enemy's threat values.,Evasion: +#{CaptionRatio}#%{nl}Threat Value: +#{CaptionRatio2}#{nl}Duration: #{CaptionTime}# seconds,"[""var value = 10 * skill.Level"", ""return value;""]","[""var minSubPATK = pc.MINPATK_SUB"", ""var maxSubPATK = pc.MAXPATK_SUB"", ""var patkValue = Math.floor((minSubPATK + maxSubPATK) / 2)"", ""var hateValue = patkValue * (skill.Level * 0.02)"", ""return Math.floor(hateValue);""]",,"[""var value = 60"", ""var Outlaw19_abil = GetAbility(pc, 'Outlaw19')"", """", ""if (Outlaw19_abil != null  &&  1 == Outlaw19_abil.ActiveState) {"", ""    value = 20"", ""}"", """", ""return value""]",,,,,,6,icon_scout_bully,False,False,False,False,"[503011, 503012, 503019]",643903,5003,Bully,0,60000,0,168,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50206,OutLaw_Aggress,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Provoke the enemy into a quarrel, making them recognize you as their primary target.",Threatened Targets: #{CaptionRatio}#{nl}Duration: 10 seconds,"[""var value = skill.Level * 3"", ""return value;""]",,,,,,,,,6,icon_scout_aggress,False,False,False,False,"[503013, 503014]",,5003,Aggress,0,30000,0,112,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50207,OutLaw_Rampage,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Release all your pent-up aggression and go on a full rampage, destroying everything around you. You will evade all enemy attacks while in this enraged state. Attacks to stunned, blinded or bleeding enemies deal less damage but apply as two consecutive hits. After Rampage, a buff is applied that increases the damage you deal and receive. During this buff, you cannot evade enemy attacks.","Skill Factor: #{SkillFactor}#% x 9{nl}Effects to stunned, blinded or bleeding enemies:{nl}- Damage -30%{nl}- Applies 2 hits{nl}Post-Rampage Buff Duration: 5 seconds{nl}Damage Dealt w/ Buff: +50%{nl}Damage Taken w/ Buff: +50%",,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Outlaw15\"")"", """", ""if (abil != null  &&  \""Outlaw15\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_scout_rampage,False,False,False,False,"[503015, 503016, 503017]",643904,5003,Rampage,0,50000,0,145,0,0,0.0,5,0.0,0.0,120.0,12.0,15.0,0,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
50301,Squire_Repair,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Opens a shop to repair damaged equipment. Items can be repaired beyond their maximum durability and last longer. Shop prices increase when installed in a map with a dungeon.,Repairs #{CaptionRatio}# durability over max.,"[""return skill.Level;""]",,,,,,,,,6,icon_warri_repair,False,False,False,False,,,5004,Repair,0,1000,0,0,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50302,Squire_Arrest,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Bind enemies, including boss monsters, to prevent them from moving.",Maximum Targets: #{CaptionRatio}#{nl}Duration: 10 seconds,"[""var value = 1 + skill.Level * 1"", ""return value""]",,,,,,,,,6,icon_warri_arrest,False,False,False,False,,643573,5004,Arrest,0,45000,0,128,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50303,Squire_Camp,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Set up a base camp for party members. Party members can use the base camp to gain buffs and access to storage.{nl}Party members will also be able to teleport to the Base Camp when in the same map as the Camp.{nl}The storage can be accessed without the Squire being present at the location of the Base Camp.{nl}Leaving the map or leaving the party will erase the buffs you have received from the Base Camp.,EXP Gains: +30%{nl}#{CaptionRatio2}#% chance to nullify equipment durability consumption{nl}Duration: #{CaptionRatio}# hours,"[""return 1 + skill.Level * 0.5""]","[""return skill.Level * 5""]",,,,,,,,6,icon_warri_basecamp,False,False,False,False,,,5004,Base Camp,0,0,0,0,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50304,Squire_FoodTable,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Set up a refreshment table to prepare dishes that temporarily increases the abilities of your party members. A refreshment table can only placed near a base camp. If the camp is removed, the refreshment table will be removed as well.",Food buff efficacy increases with skill level{nl}Food buff duration: 30 minutes,,,,,,,,,,6,icon_warri_foodrationing,False,False,False,False,"[108004, 108005, 108006, 108007]",,5004,Refreshment Table,0,0,0,0,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50305,Squire_DeadlyCombo,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}Slashes multiple times in front of you.,Skill Factor: #{SkillFactor}#% x 3{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Squire11\"")"", """", ""if (abil != null  &&  \""Squire11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_crescent,False,False,False,False,[108010],643819,5004,Deadly Combo,3,15000,0,67,0,0,0.0,5,0.0,0.0,134.0,13.4,5.0,1,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
50306,Squire_EquipmentTouchUp,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Opens a shop to process weapons and armor, temporarily increasing their abilities. Armor upgrades are for top, bottom and shield items only. Shop prices increase when installed in a dungeon map.",[Skill Level] + [Equip Level] * [Grade] = ATK Inc.{nl}Attack Hit Count: x #{CaptionRatio}#{nl}[Skill Level] + [Equip Level] * [Grade] = DEF Inc.{nl}Attack Receive Count: x #{CaptionRatio2}#{nl}Duration: 1 hour,"[""var value = 2500 + skill.Level * 250 + pc.INT"", ""var Squire3 = GetAbility(pc, 'Squire3');"", """", ""if (Squire3 != null  &&  1 == Squire3.ActiveState  &&  skill.Level >= 3) {"", ""    value = value + Squire3.Level * 20"", ""}"", """", ""return value""]","[""var value = 500 + skill.Level * 50 + pc.INT"", ""var Squire4 = GetAbility(pc, 'Squire4');"", """", ""if (Squire4 != null  &&  1 == Squire4.ActiveState  &&  skill.Level >= 3) {"", ""    value = value + Squire4.Level * 5"", ""}"", """", ""return value""]",,,,,,,,6,icon_warri_equipmenttouchup,False,False,False,False,,,5004,Equipment Maintenance,0,1000,0,0,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50401,Corsair_JollyRoger,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Place a flag that raises the combat abilities of the pirate crew. A combo is activated if multiple enemies are defeated near the Jolly Roger. Achieving a combo of 100 activates a fever buff that grants additional damage to physical attacks.,Flag Duration: 30 seconds{nl}Physical Attack Damage: +#{CaptionRatio}#%{nl}Fever Duration: 10 seconds,"[""var value = 10 + (skill.Level * 3)"", ""return value;""]",,,,,,,,,6,icon_warri_jollyroger,False,False,False,False,[109013],643553,5005,Jolly Roger,0,60000,0,168,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50402,Corsair_IronHook,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Capture enemies with a hook.,Capture Time: #{CaptionRatio}# seconds,"[""var value = 4 + skill.Level * 1;"", """", ""if (IsPVPServer(pc) == 1  ||  zone == 'pvp_Mine') {"", ""    value = value * 0.5;"", ""}"", """", ""return value;""]",,,,,,,,,6,icon_warri_ironhook,False,False,False,False,,643554,5005,Iron Hook,0,25000,0,106,0,0,0.0,10,0.0,0.0,100.0,0.0,50.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50403,Corsair_Keelhauling,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical]{/}{/}{nl}Drag and pull enemies captured with Iron Hook. The enemy receives damage each time they are pulled. Dragged enemies are afflicted with the [Bleeding] debuff.,Skill Factor: #{SkillFactor}#% x 2{nl}[Bleeding] Duration: 7 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Corsair11\"")"", """", ""if (abil != null  &&  \""Corsair11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_keelhauling,False,False,False,False,[109001],643555,5005,Keel Hauling,0,25000,0,108,0,0,0.0,10,0.0,0.0,362.0,18.1,50.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
50404,Corsair_SubweaponCancel,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Allows you to quickly connect main weapon and subweapon attacks.,"Connects main weapon (one-handed sword) and subweapon (dagger, pistol) attacks with no delay{nl}Duration: 300 seconds{nl}Additional Damage: #{CaptionRatio}#%","[""var value = 30 + (skill.Level * 5);"", ""return value;""]",,,,,,,,,6,icon_warri_subweaponcancel,False,False,False,False,,643557,5005,Double Weapon Assault,0,60000,0,168,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50405,Corsair_DustDevil,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Slash] - [Physical]{/}{/}{nl}You inflict consecutive attacks as you spin. The enemy will be immobilized temporarily. Applies 90% subweapon physical attack + 30% main physical attack if the attack lands successfully.,Skill Factor: #{SkillFactor}#% x3{nl}AoE Attack Ratio: +#{SkillSR}#{nl}Critical rate increased by 2x when used on bleeding enemies.,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Corsair12\"")"", """", ""if (abil != null  &&  \""Corsair12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_dustdevil,False,False,False,False,[109005],643556,5005,Dust Devil,3,20000,0,72,0,0,0.0,15,0.0,0.0,152.0,5.1,8.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[8, 6]"
50406,Corsair_HexenDropper,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Attack an enemy repeatedly using a weapon in each hand. Applies 90% main physical attack + 30% subweapon physical attack if the attack is accurate.,Skill Factor: #{SkillFactor}#% x 7{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Corsair13\"")"", """", ""if (abil != null  &&  \""Corsair13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_hexendropper,False,False,False,False,[109006],643558,5005,Hexen Dropper,2,20000,0,94,0,0,0.0,15,0.0,0.0,88.0,3.0,8.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
50407,Corsair_PistolShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Repeatedly shoot your pistol subweapon at enemies in front of you to deal damage. A minimum critical rate is applied to these attacks.,Skill Factor: #{SkillFactor}#% x 6{nl}Minimum Critical Chance: 15%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Corsair16\"")"", """", ""if (abil != null  &&  \""Corsair16\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_pistolshot,False,False,False,False,"[109009, 109010]",643820,5005,Quick and Dead,2,35000,0,112,0,0,0.0,5,0.0,0.0,91.0,9.1,0.0,1,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
50408,Corsair_ImpaleDagger,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Move to the enemy and deal damage all around with your dagger subweapon.,Skill Factor: #{SkillFactor}#% x 3{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Corsair19\"")"", """", ""if (abil != null  &&  \""Corsair19\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_warri_impaledagger,False,False,False,False,[109012],,5005,Impale Dagger,2,15000,0,94,0,0,0.0,5,0.0,0.0,179.0,17.9,5.0,1,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
50409,Corsair_Brutality,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Applies a buff that increases the damage of your Slash and Missile attacks.,Slash and Missile Attack Damage: +#{CaptionRatio}#%{nl}Duration: 300 seconds,"[""var value = 8 + (skill.Level * 0.8)"", ""return value""]",,,,,,,,,6,icon_scout_brutality,False,False,False,False,,,5005,Brutality,0,60000,0,168,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50501,Shinobi_Mijin_no_jutsu,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", """", ""if (IsBuffApplied(pc, \""Bunshin_Debuff\"") == \""YES\"") {"", ""    var bunsinCount = GET_BUNSIN_COUNT(pc);"", ""    basicCoolDown = basicCoolDown + (bunsinCount * 2000 + (basicCoolDown * (bunsinCount * 0.1)))"", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Attack enemies in the area nearby by exploding the gunpowder you have. Using this technique may cause you to become incapable of combat if your HP is too low. You enter stealth status when you reappear, and Bunshin no Jutsu will be canceled when clones mimic the skill.{nl}{#00113F}Mijin no Jutsu applies as 2 consecutive hits within the range of Lachrymator.{/}",Skill Factor: #{SkillFactor}#%{nl}Consumes #{CaptionRatio2}# HP{nl}[Stealth] Duration: 8 seconds{nl}Consumes Ninjitsu Bomb x5,,"[""var value = 7500 - skill.Level * 500"", ""return value""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Shinobi3\"")"", """", ""if (abil != null  &&  \""Shinobi3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_mijinnojutsu,False,False,False,True,[113003],,5006,Mijin no Jutsu,0,50000,0,141,0,0,0.0,10,0.0,0.0,1178.0,58.900002,3.0,5,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""Bunshin_Debuff\"") == \""YES\"") {"", ""    var Bunshin = GetSkill(pc, 'Shinobi_Bunshin_no_jutsu')"", ""    value = value + (value * (Bunshin.Level * 0.1))"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
50502,Shinobi_Bunshin_no_jutsu,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Creates clones of yourself. The clones automatically attack nearby enemies and replicate any Shinobi attack skills you use. Whenever the clones replicate skills, SP consumption and cooldown increase according to your Bunshin no Jutsu skill level. Attributes do not apply to skills performed by clones.",Duration: #{CaptionRatio}# seconds{nl}Summons #{CaptionRatio2}# clones{nl}Clone Attack: #{CaptionRatio3}#% of character's attack{nl}Additional Cooldown:{nl}- [2 + 10% of skill cooldown] x number of clones{nl}Additional SP Consumption:{nl}- [10% x Bunshin no Jutsu skill level],"[""var value = 20"", ""return value""]","[""var value = skill.Level"", """", ""if (value >= 3) {"", ""    value = 3"", ""}"", """", ""return value""]","[""var value = 10 * skill.Level"", ""return value""]",,,,,,,6,icon_warri_bunshinnojutsu,False,False,False,False,[113006],,5006,Bunshin no Jutsu,0,45000,0,128,0,0,0.0,10,53.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50503,Shinobi_Mokuton_no_jutsu,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Counter-attack by tricking the enemy with a fake doll created from a log.,Duration: #{CaptionRatio}# seconds,"[""var value = 15 + skill.Level * 5"", ""return value""]",,,,,,,,,6,icon_warri_mokutonnojutsu,False,False,False,False,,,5006,Mokuton no Jutsu,0,35000,0,117,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50504,Shinobi_Katon_no_jutsu,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", """", ""if (IsBuffApplied(pc, \""Bunshin_Debuff\"") == \""YES\"") {"", ""    var bunsinCount = GET_BUNSIN_COUNT(pc);"", ""    basicCoolDown = basicCoolDown + (bunsinCount * 2000 + (basicCoolDown * (bunsinCount * 0.1)))"", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing] - [Fire]{/}{/}{nl}Attack multiple enemies by continuously exploding the gunpowder you possess.,SKill Factor: #{SkillFactor}#%{nl}Consumes Ninjutsu Bomb x2,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Shinobi2\"")"", """", ""if (abil != null  &&  \""Shinobi2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,2,icon_warri_katonnojutsu,False,False,False,True,[113002],,5006,Katon no Jutsu,2,25000,0,95,0,0,0.0,15,0.0,0.0,332.0,11.0,0.0,2,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""Bunshin_Debuff\"") == \""YES\"") {"", ""    var Bunshin = GetSkill(pc, 'Shinobi_Bunshin_no_jutsu')"", ""    value = value + (value * (Bunshin.Level * 0.1))"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
50505,Shinobi_Kunai,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", """", ""if (IsBuffApplied(pc, \""Bunshin_Debuff\"") == \""YES\"") {"", ""    var bunsinCount = GET_BUNSIN_COUNT(pc);"", ""    basicCoolDown = basicCoolDown + (bunsinCount * 2000 + (basicCoolDown * (bunsinCount * 0.1)))"", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Throw kunai in all directions to attack enemies. If used by clones, applies as two consecutive hits.",Skill Factor: #{SkillFactor}#% x 5,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Shinobi1\"")"", """", ""if (abil != null  &&  \""Shinobi1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_warri_kunai,False,False,False,True,[113001],,5006,Kunai,3,25000,0,76,0,0,0.0,15,0.0,0.0,93.0,3.1,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""Bunshin_Debuff\"") == \""YES\"") {"", ""    var Bunshin = GetSkill(pc, 'Shinobi_Bunshin_no_jutsu')"", ""    value = value + (value * (Bunshin.Level * 0.1))"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
50506,Shinobi_Raiton_no_Jutsu,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", """", ""if (IsBuffApplied(pc, \""Bunshin_Debuff\"") == \""YES\"") {"", ""    var bunsinCount = GET_BUNSIN_COUNT(pc);"", ""    basicCoolDown = basicCoolDown + (bunsinCount * 2000 + (basicCoolDown * (bunsinCount * 0.1)))"", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical] - [Piercing] - [Lightning]{/}{/}{nl}Concentrate the power of lightning in your hands, then release it all at once.",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}Consumes Ninjutsu Bomb x2,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Shinobi10\"")"", """", ""if (abil != null  &&  \""Shinobi10\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,5,icon_scout_raikiri,False,False,False,True,[113011],643905,5006,Raiton no Jutsu,2,30000,0,105,0,0,0.0,5,0.0,0.0,743.0,74.300003,5.0,2,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""function SCR_Get_SpendSP(skill) {"", ""    var basicSP = skill.BasicSP;"", ""    var decsp = 0;"", ""    var bylvCorrect = 0"", """", ""    if (basicSP == 0) {"", ""        return 0;"", ""    }"", """", ""    var lv = pc.Lv"", ""    bylvCorrect = lv - 300"", """", ""    if (bylvCorrect < 0) {"", ""        bylvCorrect = bylvCorrect * 2.75 / 1000"", ""    } else if (bylvCorrect >= 0) {"", ""        bylvCorrect = bylvCorrect * 1.25 / 1000"", ""    }"", """", ""    var value = basicSP * (1 + bylvCorrect)"", ""    var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""    abilAddSP = abilAddSP / 100;"", ""    value = value + (value * abilAddSP);"", ""    var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""    if (zeminaSP != 0) {"", ""        decsp = value * zeminaSP"", ""    }"", """", ""    value = value - decsp;"", """", ""    if (value < 1) {"", ""        value = 0"", ""    }"", """", ""    return Math.floor(value);"", ""}"", """", ""var value = SCR_Get_SpendSP(skill)"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", """", ""if (IsBuffApplied(pc, \""Bunshin_Debuff\"") == \""YES\"") {"", ""    var Bunshin = GetSkill(pc, 'Shinobi_Bunshin_no_jutsu')"", ""    value = value + (value * (Bunshin.Level * 0.1))"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
50601,Thaumaturge_ShrinkBody,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Shrink the size of monsters.,Large-type-> Medium-type-> Small-type{nl}Targets: #{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds,"[""return Math.floor(3 + skill.Level * 0.5)""]",,,"[""return 5 + skill.Level;""]",,,,,,6,icon_wizar_shrinkbody,False,False,False,False,"[206005, 206007]",643628,5007,Shrink Body,2,25000,0,112,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50602,Thaumaturge_SwellBody,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Enlarges the size of monsters. Increases the target's maximum HP by 2 times and doubles loot dropped.,Small-type-> Medium-type-> Large-type{nl}Targets: #{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds,"[""return Math.floor(3 + skill.Level * 0.5)""]",,,"[""return 5 + skill.Level;""]",,,,,,6,icon_wizar_swellbody,False,False,False,False,"[206004, 206006]",643629,5007,Swell Body,2,25000,0,112,0,0,0.0,15,0.0,0.0,100.0,0.0,1.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50603,Thaumaturge_Reversi,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Take ownership of a magic circle created by an enemy.,Changes an enemy's magic circle to friendly at a targeted area.{nl}Maximum Level: 1,,,,,,,,,,6,icon_wizar_reversi,False,False,False,False,,,5007,Reversi,3,40000,0,96,0,0,0.0,1,0.0,0.0,100.0,0.0,1.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50604,Thaumaturge_SwellBrain,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Enlarge the size of your and your party members' heads to momentarily increase looting chance. Looting chance increases the drop rate for unidentified equipment.,Looting Chance: +#{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds{nl}Consumes Magic Powder x#{SpendItemCount}#,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Thaumaturge15\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Thaumaturge15\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 100"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value)""]",,,"[""var value = 300"", ""return value""]",,,"[""return skill.SpendItemBaseCount;""]",,,6,icon_wizar_improvebrain,False,False,False,False,[206003],643632,5007,Swell Brain,0,60000,0,173,0,0,0.0,5,0.0,0.0,100.0,0.0,1.0,2,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50605,Thaumaturge_Quicken,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Temporarily increases attack speed for you and your party members.,Attack Speed: +#{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds{nl}Consumes Magic Powder x#{SpendItemCount}#,"[""var value = 15 + (skill.Level * 10)"", ""return value""]",,,"[""return 30 + skill.Level * 6""]",,,"[""return skill.SpendItemBaseCount;""]",,,6,icon_wizar_quicken,False,False,False,False,,643909,5007,Quicken,0,40000,0,156,0,0,0.0,15,0.0,0.0,100.0,0.0,5.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50606,Thaumaturge_SwellHands,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Enlarge the size of your and your party members' hands to momentarily increase maximum physical and magic attack. Characters with a subweapon in their left hand have their subweapon attack increased. Those with a shield have their physical defense increased.{nl}{#00113F}Using Brick Smash under the Swell Hands buff removes the enemy's helmet.{/},Maximum Attack: +#{CaptionRatio}#{nl}Duration: 300 seconds{nl}Consumes Magic Powder x#{SpendItemCount}#,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Thaumaturge19\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Thaumaturge19\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var DEX = TryGetProp(pc, \""DEX\"", 1)"", ""var value = 30 + ((skill.Level - 1) * 2) + ((skill.Level / 5) * (Math.pow((DEX * 0.8) ,  0.9)))"", ""value = Math.floor(value * SCR_REINFORCEABILITY_TOOLTIP(skill))"", ""return value;""]",,,,,,"[""return skill.SpendItemBaseCount;""]",,,6,icon_scout_swellhands,False,False,False,False,[206016],643906,5007,Swell Hands,0,60000,0,179,0,0,0.0,10,0.0,0.0,100.0,0.0,1.0,2,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50701,Linker_Unbind,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Disconnect all links.,Disconnect all links at once.{nl}Maximum Level: 1,,,,,,,,,,6,icon_wizar_derelate,False,False,False,False,,,5009,Unbind,0,0,0,22,0,0,0.0,1,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50702,Linker_Physicallink,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Links party members and shares damage. Can be canceled by the Unbind skill.,Damage decreases depending on the number of links{nl}Maximum Links: #{CaptionRatio}#{nl}Duration: #{CaptionTime}# seconds,"[""return skill.Level + 3""]",,,"[""return 60 + skill.Level * 10""]",,,,,,6,icon_wizar_physicallink,False,False,False,False,[205001],643611,5009,Physical Link,0,20000,0,134,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50703,Linker_JointPenalty,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Links enemies to attack all at once. Can be canceled by the Unbind skill.,Maximum Links: #{CaptionRatio}#{nl}Count Limit: #{CaptionRatio2}#{nl}Duration: 20 seconds,"[""var value = 3 + skill.Level * 0.5"", ""return Math.floor(value)""]","[""var value = 6.5 + skill.Level * 0.5"", ""return Math.floor(value)""]",,,,,,,,6,icon_wizar_jointpenalty,False,False,False,False,"[205007, 205008, 205009, 205016]",643612,5009,Joint Penalty,0,20000,0,100,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50704,Linker_HangmansKnot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Tighten the link to gather up the linked enemies in front of you.,{#339999}{ol}[Bind]{/}{/} Duration: #{CaptionTime}# seconds,,,,"[""return 1 + skill.Level * 0.2;""]",,,,,,6,icon_wizar_hangmanknot,False,False,False,False,,643613,5009,Hangman's Knot,0,15000,0,95,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50705,Linker_UmbilicalCord,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Shares your stats with your allies when theirs are lower than yours.,Duration: #{CaptionTime}# seconds,,,,"[""var value = 15 + skill.Level * 5"", ""return value""]",,,,,,6,icon_wizar_umbilicalcord,False,False,False,False,,643615,5009,Lifeline,0,60000,0,179,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,1,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50708,Linker_ElectricShock,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Strike] - [Physical] - [Lightning]{/}{/}{nl}Connect to a single target and deliver Lightning damage. Cannot be used on multiple targets at a time. Can be canceled by the Unbind skill.,Skill Factor: #{SkillFactor}#% per 0.5 seconds{nl}Duration: #{CaptionRatio}# seconds,"[""var value = 3 + (skill.Level * 0.5)"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Linker18\"")"", """", ""if (abil != null  &&  \""Linker18\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,5,icon_scout_electricshock,False,False,False,False,"[205015, 205017]",,5009,Electric Shock,0,15000,0,99,0,0,0.0,10,0.0,0.0,138.0,6.9,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[9, 6]"
50801,Enchanter_Agility,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Applies a buff to your and your party members' boots which reduces stamina consumption and increases movement speed. The Agility buff does not apply to characters not equipping boots.,Stamina Consumption: -#{CaptionRatio}#%{nl}Movement Speed: +3{nl}Duration: 300 seconds,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Enchanter10\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Enchanter10\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = skill.Level * 1"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value;""]",,,,,,,,,6,icon_wizar_agility,False,False,False,False,[215011],,5008,Agility,0,40000,0,156,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50802,Enchanter_EnchantArmor,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Sets up a shop that grants armor equipment with enchantments.,The number of available enchantments increases with skill level{nl}Maximum Level: 5,,,,,,,,,,6,icon_wizar_echantarmor,False,False,False,False,,,5008,Enchant Armor,0,0,0,0,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50803,Enchanter_EnchantLightning,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Fire]{/}{/}{nl}Grants a Lightning-property damage buff to you and your party members. Additional Lightning-property damage increases in proportion to the caster's DEX. Changes melee and missile attacks to Lightning property (when stacked with Silver Bullet, the Holy property from Silver Bullet takes precedence).",Lightning Property Additional Damage: +#{CaptionRatio}#{nl}Duration: 300 seconds{nl}Consumes Enchant Round x#{SpendItemCount}#,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Enchanter11\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Enchanter11\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 160 + ((skill.Level - 1) * 60) + ((skill.Level / 5) * (Math.pow((pc.DEX * 0.8) ,  0.9)))"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return Math.floor(value)""]",,,,,,"[""return skill.SpendItemBaseCount;""]",,,2,icon_wizar_enchantlightning,False,False,False,False,[215012],,5008,Enchant Lightning,0,60000,0,168,0,0,0.0,15,0.0,0.0,100.0,0.0,3.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50804,Enchanter_EnchantEarth,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical] - [Earth]{/}{/}{nl}Enchant the armor of you and your party with the power of the land, granting the ability to block without having to wear shields.",Block Chance +#{CaptionRatio}#%{nl}Duration: 300 seconds{nl}Consumes #{SpendItemCount}# Enchant Round,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Enchanter12\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Enchanter12\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 5 + skill.Level * 2"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value""]",,,,,,"[""return skill.SpendItemBaseCount;""]",,,1,icon_wizar_enchantearth,False,False,False,False,[215013],,5008,Enchant Earth,0,60000,0,168,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,1,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50805,Enchanter_LightningHands,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Strike] - [Physical] - [Lightning]{/}{/}{nl}Grants a temporary buff to oneself. Deals an additional Lightning-type attack when using basic attacks on enemies.,Additional Lightning Skill Factor: +#{SkillFactor}#%{nl}Duration: 300 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Enchanter13\"")"", """", ""if (abil != null  &&  \""Enchanter13\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,5,icon_wizar_lightninghands,False,False,False,False,[215014],,5008,Lightning Hands,0,60000,0,181,0,0,0.0,10,0.0,0.0,25.0,1.3,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 9, 6]"
50806,Enchanter_OverReinforce,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Increases the enhancement values of subweapons equipped by you and your party members by a value equal to skill level.,Enhancement Values: +#{CaptionRatio}#{nl}Duration: 300 seconds{nl}Consumes Enchant Round x#{SpendItemCount}#,"[""var value = skill.Level"", ""return value""]",,,,,,"[""return skill.SpendItemBaseCount;""]",,,6,icon_wizar_overreinforce,False,False,False,False,,,5008,Over-Reinforce,0,60000,0,168,0,0,0.0,5,0.0,0.0,100.0,0.0,0.0,2,31,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50807,Enchanter_EnchantGlove,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Applies a buff to your and your party members' gloves which increases accuracy. The Enchant Gloves buff does not apply to characters not equipping gloves.,Accuracy: +#{CaptionRatio}#%{nl}Duration: 300 seconds{nl}Consumes Enchant Round x#{SpendItemCount}#,"[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Enchanter9\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Enchanter9\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 10 + (skill.Level * 2)"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill)"", ""return value;""]",,,,,,"[""return skill.SpendItemBaseCount;""]",,,6,icon_scout_enchantglove,False,False,False,False,"[215010, 215015]",643907,5008,Enchant Glove,0,60000,0,179,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,2,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50901,Rogue_SneakHit,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Temporarily increases your Critical Chance when attacking enemies from behind. ,Critical Chance: +#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""return 30 + skill.Level * 2;""]",,,"[""var value = 30 + skill.Level * 4;"", ""var Rogue1_abil = GetAbility(pc, 'Rogue1');"", """", ""if (Rogue1_abil != null  &&  1 == Rogue1_abil.ActiveState) {"", ""    value = value + 2 * Rogue1_abil.Level"", ""}"", """", ""return value""]",,,,,,6,icon_arch_sneak_hit,False,False,False,False,[308005],643689,5010,Sneak Hit,0,70000,0,179,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50902,Rogue_Feint,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Trick an enemy to lower their guard. Temporarily decreases the evasion of enemies in front of you, and makes them unable to change direction for 3 seconds.",Evasion: -#{CaptionRatio}#%{nl}Targets: 15{nl}Duration: 20 seconds{nl}Enemies become unable to move or change direction for 3 seconds,"[""return 3 * skill.Level;""]",,,,,,,,,6,icon_arch_feint,False,False,False,False,[308010],643690,5010,Feint,0,25000,0,106,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50903,Rogue_Evasion,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Significantly increases your evasion.,Evasion: +#{CaptionRatio}#%{nl}Duration: 10 seconds,"[""var value = 50 * skill.Level"", ""return value""]",,,,,,,,,6,icon_arch_evasion,False,False,False,False,,643694,5010,Evasion,0,50000,0,156,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50904,Rogue_Burrow,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Physical]{/}{/}{nl}Hide under the ground to conceal your body. When you reveal yourself, your enemies receive a critical attack.","Skill Factor: #{SkillFactor}#%{nl}Burrow Duration: 30 seconds{nl}When Burrow is canceled, the first attack dealt is critical",,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rogue20\"")"", """", ""if (abil != null  &&  \""Rogue20\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_burrow,False,False,False,False,[308012],643693,5010,Burrow,0,40000,0,156,0,0,0.0,15,0.0,0.0,704.0,23.299999,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]",[6]
50905,Rogue_Lachrymator,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Throw tear gas at a targeted area. The target becomes afflicted with [Blind] and unable to attack.,Lachrymator Duration: #{CaptionTime}# seconds,,,,"[""return 7 + skill.Level * 1""]",,,,,,6,icon_arch_lachrymator,False,False,False,False,[308009],643695,5010,Lachrymator,0,60000,0,145,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,1,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
50906,Rogue_Backstab,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Continuously attack using your dagger. A double attack with a high critical rate may stun the enemy. Attacking from the back deals extra damage.,Skill Factor: #{SkillFactor}#% x 2{nl}AoE Attack Ratio: +#{SkillSR}#{nl}Critical Rate: #{CaptionRatio}#%,"[""return 50 + skill.Level * 2""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rogue16\"")"", """", ""if (abil != null  &&  \""Rogue16\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_arch_backstab,False,False,False,False,"[308004, 308007]",643696,5010,Backstab,3,10000,0,62,0,0,0.0,15,0.0,0.0,136.0,4.5,3.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
50907,Rogue_KnifeThrowing,"[""var value = skill.BasicCoolDown;"", ""value = value - (skill.Level  * 1000);"", ""return value""]","{#DD5500}{ol}[Physical] - [Piercing]{/}{/}{nl}Throw a knife at an enemy to inflict the [Bull's-eye] debuff. Enemies affected by Bull's-eye have their critical resistance and block reduced, become unable to evade melee physical attacks, and become more vulnerable against Pierce attacks.{nl}{#00113F}100% accuracy on targets affected by [Swell Body].{/}",Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#{nl}{#339999}{ol}[Bull's-eye]{/}{/}Duration: #{CaptionRatio}# seconds{nl}- Critical resistance and block decreased by 20%{nl}- Melee physical attacks cannot be evaded{nl}- 30% increased damage from Pierce attacks,"[""var value = 5 + (skill.Level * 1)"", ""return value;""]",,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Rogue21\"")"", """", ""if (abil != null  &&  \""Rogue21\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_scout_knifethrowing,False,False,False,False,[308013],643908,5010,Knife Throw,2,20000,0,91,0,0,0.0,5,0.0,0.0,398.0,39.799999,10.0,1,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordDagger"", ""Icon"": ""weapon_dagger""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[6, 7]"
51001,Schwarzereiter_ConcentratedFire,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Fire multiple bullets at an enemy in rapid succession. Applies 30% additional damage to blinded targets.,Skill Factor: #{SkillFactor}#% x #{CaptionRatio2}#,,"[""return 10;""]",,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Schwarzereiter11\"")"", """", ""if (abil != null  &&  \""Schwarzereiter11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_schwarze1,False,False,False,False,[311001],643697,5011,Concentrated Fire,2,30000,0,107,0,0,0.0,15,0.0,0.0,77.0,2.6,0.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",2,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51002,Schwarzereiter_Caracole,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Shoot forward while pushing yourself back with recoil. Attacked enemies momentarily receive more damage from Missile attacks.,Skill Factor: #{SkillFactor}#%{nl}Attacked enemies receive +30% damage from Missile attacks{nl}Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Schwarzereiter12\"")"", """", ""if (abil != null  &&  \""Schwarzereiter12\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_caracole,False,False,False,False,"[311002, 311009]",643698,5011,Caracole,0,20000,0,115,0,0,0.0,15,0.0,0.0,431.0,14.3,10.0,1,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",2,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51003,Schwarzereiter_Limacon,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}When mounted, boosts you mobility to shoot the enemies rapidly. While Limacon effects are active, pistol attack becomes available.",Duration: 300 seconds{nl}Pistol Basic Attack Damage: +#{CaptionRatio2}#%{nl}Consumes #{CaptionRatio}# SP per attack,"[""var value = 12;"", ""var lv = pc.Lv"", ""var bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""value = value * (1 + bylvCorrect)"", ""var abilSchwarzereiter18 = GetAbility(pc, 'Schwarzereiter18');"", """", ""if (abilSchwarzereiter18 != null) {"", ""    value = value + 5;"", ""}"", """", ""return Math.floor(value)""]","[""function SCR_REINFORCEABILITY_TOOLTIP(skill) {"", ""    var addAbilRate = 1;"", """", ""    if (\""Schwarzereiter13\"" != \""None\"") {"", ""        var reinforceAbil = GetAbility(pc, \""Schwarzereiter13\"")"", """", ""        if (reinforceAbil != null) {"", ""            var abilLevel = TryGetProp(reinforceAbil, \""Level\"")"", ""            var masterAddValue = 0"", """", ""            if (abilLevel == 100) {"", ""                masterAddValue = 0.1"", ""            }"", """", ""            addAbilRate = 1 + (reinforceAbil.Level * 0.005 + masterAddValue);"", ""        }"", """", ""    }"", """", ""    return addAbilRate"", ""}"", """", ""var value = 30 + ((skill.Level - 1) * 5);"", ""value = value * SCR_REINFORCEABILITY_TOOLTIP(skill);"", ""return value""]",,,,,,,,6,icon_arch_limacon,False,False,False,False,"[311003, 311011]",643699,5011,Limacon,0,60000,0,0,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
51004,Schwarzereiter_RetreatShot,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Shoot repeatedly in the opposite direction you are moving.{nl}(Does not allow for automatic weapon swap.),Skill Factor: #{SkillFactor}#% per 0.3 seconds x no. of hits{nl}Targets: 15{nl}Duration: 10 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Schwarzereiter14\"")"", """", ""if (abil != null  &&  \""Schwarzereiter14\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_schwarze2,False,False,False,False,"[311004, 311007]",643700,5011,Retreat Shot,0,20000,0,112,0,0,0.0,10,0.0,0.0,87.0,4.4,0.0,1,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",2,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51005,Schwarzereiter_EvasiveAction,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Physical]{/}{/}{nl}Temporarily increases evasion when riding a Companion.,Evasion: +#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""var value = skill.Level * 2"", ""return value""]",,,"[""var value = 300"", ""return value""]",,,,,,6,icon_arch_evasivemaneuvering,False,False,False,False,,,5011,Evasive Action,0,60000,0,168,0,0,0.0,10,0.0,0.0,100.0,0.0,0.0,0,16,0,"[{""Name"": ""All"", ""Icon"": ""weapon_all""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}]",2,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 6]"
51006,Schwarzereiter_AssaultFire,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}March forward while shooting, attacking enemies in front of you. Deals 30% additional damage to blinded enemies.{nl}(Does not allow for automatic weapon swap.)",Skill Factor: #{SkillFactor}#% per 0.2 seconds{nl}Targets: 15{nl}Duration: 5 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Schwarzereiter19\"")"", """", ""if (abil != null  &&  \""Schwarzereiter19\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_assultfire,False,False,False,False,[311012],,5011,Marching Fire,0,15000,0,106,0,0,0.0,5,0.0,0.0,65.0,6.5,0.0,1,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",2,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51101,Bulletmarker_SilverBullet,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Missile] - [Holy]{/}{/}{nl}All attacks using a pistol are augmented, changing them to the Holy attribute.",Duration: #{CaptionTime}# seconds,,,,"[""var value = 15 + skill.Level * 3"", ""return value;""]",,,,,,3,icon_arch_silverbullet,False,False,False,False,,,5012,Silver Bullet,0,30000,0,134,0,0,0.0,15,0.0,0.0,100.0,0.0,0.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 2]"
51102,Bulletmarker_Tase,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Gun] - [Lightning]{/}{/}{nl}Fire an electric bullet into the enemy's body, causing the target to take additional Lightning-property damage when attacked.{nl}{#00113F}Tase lasts longer when an enemy affected by it is attacked with Electric Shock.{/}",Skill Factor: #{SkillFactor}#%{nl}Duration: #{CaptionTime}# seconds{nl}Duration: #{CaptionRatio}# hits,"[""var value = 10"", ""var abil = GetAbility(pc, \""Bulletmarker7\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + abil.Level"", ""}"", """", ""return value""]",,,"[""var value = 15 + skill.Level * 3"", ""return value;""]","[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""\"")"", """", ""if (abil != null  &&  \""\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,5,icon_arch_tase,False,False,False,False,[317007],,5012,Tase,0,30000,0,113,0,0,0.0,15,0.0,0.0,113.0,3.8,-999.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51103,Bulletmarker_NapalmBullet,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun] - [Fire]{/}{/}{nl}Create an explosion to inflict Fire damage on enemies in front of you.{nl}{#00113F}Lachrymator disappears and triggers a damaging explosion when Napalm Bullet is used on an enemy within its range.{/},Skill Factor: #{SkillFactor}#%{nl}AoE Attack Ratio: #{SkillSR}#,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Bulletmarker1\"")"", """", ""if (abil != null  &&  \""Bulletmarker1\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,2,icon_arch_napalmbullet,False,False,False,False,[317001],,5012,Napalm Bullet,2,20000,0,94,0,0,0.0,15,0.0,0.0,613.0,20.299999,10.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51104,Bulletmarker_FullMetalJacket,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Fire a powerful bullet that ignores half of an enemy's defenses.,Skill Factor: #{SkillFactor}#%,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Bulletmarker2\"")"", """", ""if (abil != null  &&  \""Bulletmarker2\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_fullmetaljacket,False,False,False,False,[317002],,5012,Full Metal Jacket,4,20000,0,57,0,0,0.0,15,0.0,0.0,418.0,13.8,-999.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51105,Bulletmarker_DoubleGunStance,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Buff] - [Missile]{/}{/}{nl}Take the weapon in your right hand and place it in your left, assuming a stance. Your basic attack changes and you become able to use Bullet Marker skills.{nl}(Does not allow for automatic weapon swap.)",Basic Attack Damage: #{SkillFactor}#%{nl}Basic attack changed{nl}Maximum Level: 5 ,,,,,"[""var sklFactor;"", """", ""if (skillOwner.ClassName == 'PC') {"", ""    var atkType = skill.AttackType;"", ""    var attribute = skill.Attribute;"", ""    var atkTypebyItem = GetSumOfEquipItem(skillOwner, atkType);"", ""    var attributebyItem = GetSumOfEquipItem(skillOwner, attribute);"", ""    sklFactor = skill.SklFactor + (skill.Level - 1) * skill.SklFactorByLevel + atkTypebyItem + attributebyItem;"", ""    return Math.floor(sklFactor);"", ""} else {"", ""    sklFactor = skill.SklFactor + (skill.Level - 1) * skill.SklFactorByLevel;"", ""    return Math.floor(sklFactor);"", ""}"", """"]",,,,,6,icon_arch_doublegunstance,False,False,False,False,,,5012,Double Gun Stance,0,0,0,0,0,0,0.0,5,0.0,0.0,100.0,3.3,0.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 2]"
51106,Bulletmarker_RestInPeace,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Attack enemies in front of you using a series of attacks with pistols in both hands.,Skill Factor: #{SkillFactor}#% x 7{nl}AoE Attack Ratio: #{SkillSR}#{nl}Can be used after activating Double Gun Stance,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Bulletmarker3\"")"", """", ""if (abil != null  &&  \""Bulletmarker3\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""var abil = GetAbility(pc, \""Bulletmarker13\"")"", """", ""if (abil != null  &&  abil.ActiveState == 1) {"", ""    value = value + 5"", ""}"", """", ""return value""]",,,,6,icon_arch_restinpeace,False,False,False,False,[317003],,5012,R.I.P.,3,20000,0,72,0,0,0.0,15,0.0,0.0,69.0,2.3,10.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51107,Bulletmarker_BloodyOverdrive,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Attack enemies around you by firing pistols in both hands. Your character cannot be knocked back or knocked down while the skill is in use.,Skill Factor: #{SkillFactor}#% x 20{nl}AoE Attack Ratio: #{SkillSR}#{nl}Can be used after activating Double Gun Stance,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Bulletmarker4\"")"", """", ""if (abil != null  &&  \""Bulletmarker4\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]","[""var value = pc.SR + skill.SklSR;"", """", ""if (value < 1) {"", ""    value = 1"", ""}"", """", ""return value""]",,,,6,icon_arch_bloodyoverdrive,False,False,False,False,"[317004, 317008, 317012]",,5012,Bloody Overdrive,2,30000,0,107,0,0,0.0,15,0.0,0.0,143.0,4.8,20.0,0,1,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51108,Bulletmarker_SmashBullet,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Fire a shattering shot at a single enemy. Smash Bullet deals damage over time based on the caster's subweapon physical attack, and it gradually diminishes as the target remains under attack. Smash Bullet damage ignores properties and defense.",Skill Factor: #{SkillFactor}#%{nl}Duration: 15 seconds,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Bulletmarker6\"")"", """", ""if (abil != null  &&  \""Bulletmarker6\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_smashbullet,False,False,False,False,"[317006, 317015]",,5012,Smash Bullet,0,25000,0,121,0,0,0.0,10,0.0,0.0,178.0,8.9,-999.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51109,Bulletmarker_TracerBullet,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Missile]{/}{/}{nl}Gain a buff that increases your accuracy.,Accuracy: +#{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""var value = 10 + skill.Level * 2"", ""return value;""]",,,"[""var value = 15"", ""return value;""]",,,,,,6,icon_arch_tracerbullet,False,False,False,False,[317014],,5012,Tracer Bullet,0,20000,0,123,0,0,0.0,10,0.0,0.0,100.0,0.0,-99.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 2]"
51110,Bulletmarker_MozambiqueDrill,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Fire 4 shots at a single target with pistols in both hands.,Skill Factor: #{SkillFactor}#% x 4{nl}Can be used after activating Double Gun Stance,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Bulletmarker5\"")"", """", ""if (abil != null  &&  \""Bulletmarker5\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_mozambiquedrill,False,False,False,False,"[317005, 317009, 317010]",,5012,Mozambique Drill,5,15000,0,48,0,0,0.0,10,0.0,0.0,86.0,4.3,-999.0,0,16,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
51111,Bulletmarker_FreezeBullet,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]",{#DD5500}{ol}[Buff] - [Missile] - [Gun]{/}{/}{nl}Applies a buff to the caster the grants a chance of freezing targets with basic pistol attacks.,Freeze Chance: #{CaptionRatio}#%{nl}Duration: #{CaptionTime}# seconds,"[""var value = 30"", """", ""if (IsPVPServer(pc) == 1) {"", ""    value = value / 2"", ""}"", """", ""return value""]",,,"[""var value = 15 + skill.Level"", ""return value""]",,,,,,6,icon_arch_freezebullet,False,False,False,False,,,5012,Freeze Bullet,0,40000,0,145,0,0,0.0,5,0.0,0.0,100.0,0.0,-999.0,0,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""Companion"", ""Icon"": ""weapon_companion""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",0,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[0, 2, 5]"
51112,Bulletmarker_Outrage,"[""var basicCoolDown = skill.BasicCoolDown;"", ""var abilAddCoolDown = 0 // @rjgtav. Attributes aren't supported yet;"", ""basicCoolDown = basicCoolDown + abilAddCoolDown;"", """", ""if (skill.ClassName == \""Cleric_Heal\"") {"", """", ""    if (IsPVPServer(pc) == 1) {"", ""        basicCoolDown = basicCoolDown + 28000"", ""    }"", """", ""}"", """", ""var laimaCoolTime = GetExProp(pc, \""LAIMA_BUFF_COOLDOWN\"")"", """", ""if (laimaCoolTime != 0) {"", ""    basicCoolDown = basicCoolDown * (1 - laimaCoolTime)"", ""} else if (IsBuffApplied(pc, 'CarveLaima_Debuff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 1.2;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'GM_Cooldown_Buff') == 'YES') {"", ""    basicCoolDown = basicCoolDown * 0.9;"", ""}"", """", """", ""if (IsBuffApplied(pc, 'SpeForceFom_Buff') == 'YES') {"", """", ""    if (skill.ClassName != \""Centurion_SpecialForceFormation\"") {"", ""        basicCoolDown = basicCoolDown * 0.5;"", ""    }"", """", ""}"", """", ""var ret = Math.floor(basicCoolDown) / 1000"", ""ret = Math.floor(ret) * 1000;"", ""return Math.floor(ret);""]","{#DD5500}{ol}[Missile] - [Gun]{/}{/}{nl}Fire your guns while moving. Basic attacks deal 2 consecutive hits, with their damage and attack speed increased. Additional damage is calculated for [Double Gun Stance] basic attacks. You can only use basic attacks while this skill is active.",Basic Attack Additional Skill Factor: #{SkillFactor}#%{nl}Duration: 10 seconds{nl}Maximum 5 nearby enemies{nl}Can be used after activating Double Gun Stance,,,,,"[""var value = skill.SklFactor + skill.SklFactorByLevel * (skill.Level - 1)"", ""var abil = GetAbility(pc, \""Bulletmarker11\"")"", """", ""if (abil != null  &&  \""Bulletmarker11\"" != 'None') {"", ""    var abilLevel = TryGetProp(abil, \""Level\"")"", ""    var masterAddValue = 0"", """", ""    if (abilLevel == 100) {"", ""        masterAddValue = 0.1"", ""    }"", """", ""    var value = value * (1 + ((abilLevel * 0.005) + masterAddValue))"", ""    return Math.floor(value)"", ""}"", """", ""return Math.floor(value)""]",,,,,6,icon_arch_outrage,False,False,False,False,[317011],,5012,Outrage,0,30000,0,123,0,0,0.0,5,0.0,0.0,54.0,5.4,-999.0,0,31,0,"[{""Name"": ""OneHandSword"", ""Icon"": ""weapon_ohs""}, {""Name"": ""OneHandSwordPistol"", ""Icon"": ""weapon_gun""}]",1,True,"[""var basicSP = skill.BasicSP;"", ""var decsp = 0;"", ""var bylvCorrect = 0"", """", ""if (basicSP == 0) {"", ""    return 0;"", ""}"", """", ""var lv = pc.Lv"", ""bylvCorrect = lv - 300"", """", ""if (bylvCorrect < 0) {"", ""    bylvCorrect = bylvCorrect * 2.75 / 1000"", ""} else if (bylvCorrect >= 0) {"", ""    bylvCorrect = bylvCorrect * 1.25 / 1000"", ""}"", """", ""var value = basicSP * (1 + bylvCorrect)"", ""var abilAddSP = 0 // @rjgtav. Attributes aren't supported yet;"", ""abilAddSP = abilAddSP / 100;"", ""value = value + (value * abilAddSP);"", ""var zeminaSP = GetExProp(pc, \""ZEMINA_BUFF_SP\"");"", """", ""if (zeminaSP != 0) {"", ""    decsp = value * zeminaSP"", ""}"", """", ""value = value - decsp;"", """", ""if (value < 1) {"", ""    value = 0"", ""}"", """", ""return Math.floor(value);""]","[2, 5]"
